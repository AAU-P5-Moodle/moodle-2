name: PHPUnit Tests for Moodle Homework Plugin

on:
  push:
    branches: [ "main", "44-codebase-add-windows-phpunit-testing-to-ci" ]
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  homework-plugin-test-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup PHP
        id: setup-php
        uses: shivammathur/setup-php@v2
        with:
          extensions: mbstring, intl, iconv, gd, sodium, zip, fileinfo, phar, mysqli
          tools: composer

      - name: Set up php.ini
        run: |
          $php_ini_path = (php -i | Select-String 'Loaded Configuration File' | ForEach-Object { $_.ToString().Split(' ')[-1].Trim() })
          (Get-Content $php_ini_path) -replace ';extension=gd', 'extension=gd' | Set-Content -Path $php_ini_path
          (Get-Content $php_ini_path) -replace ';extension=intl', 'extension=intl' | Set-Content -Path $php_ini_path
          (Get-Content $php_ini_path) -replace ';extension=sodium', 'extension=sodium' | Set-Content -Path $php_ini_path
          (Get-Content $php_ini_path) -replace ';extension=zip', 'extension=zip' | Set-Content -Path $php_ini_path
          (Get-Content $php_ini_path) -replace ';extension=fileinfo', 'extension=fileinfo' | Set-Content -Path $php_ini_path
          (Get-Content $php_ini_path) -replace ';extension=phar', 'extension=phar' | Set-Content -Path $php_ini_path
          Add-Content -Path $php_ini_path -Value "max_input_vars=5000"
          Add-Content -Path $php_ini_path -Value "memory_limit=256M"
          Add-Content -Path $php_ini_path -Value "post_max_size=50M"
          Add-Content -Path $php_ini_path -Value "upload_max_filesize=50M"

      - name: Install/Update Composer
        run: composer self-update --2

      - name: Set up MariaDB
        uses: ankane/setup-mariadb@v1
        with:
          database: moodle

      - name: Install Moodle Composer dependencies
        run: |
          cd server/moodle
          composer install

      - name: Import MoodleSQL file
        run: |
          cmd.exe /c "mysql moodle < ${{ github.workspace }}\MoodleSQL.sql"
      
      - name: Run Moodle installation CLI
        run: |
          php server/moodle/admin/cli/install.php `
              --lang=en `
              --wwwroot="http://localhost:8000/" `
              --dbhost="127.0.0.1" `
              --dbname="moodle" `
              --dbuser="runneradmin" `
              --dbpass="" `
              --dataroot="C:\moodledata" `
              --skip-database `
              --non-interactive `
              --agree-license `
              --allow-unstable `
              --fullname="Tests for Moodle Homework Plugin" `
              --shortname="mhp" `
              --adminpass="Admin.123"
      
      - name: Configure PHPUnit
        run: |
          Add-Content -Path server/moodle/config.php -Value "`$CFG->phpunit_prefix = 'phpu_';"
          Add-Content -Path server/moodle/config.php -Value "`$CFG->phpunit_dataroot = 'C:\moodledata\phpunit';"

      - name: Initialize PHPUnit
        run: php server/moodle/admin/tool/phpunit/cli/init.php

      - name: Run tests on mod_homework
        if: always()
        run: |
          cd server/moodle
          vendor/bin/phpunit --testsuite mod_homework_testsuite

      - name: Run tests on block_homework
        if: always()
        run: |
          cd server/moodle
          vendor/bin/phpunit --testsuite block_homework_testsuite
          
  homework-plugin-test-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup PHP
        id: setup-php
        uses: shivammathur/setup-php@v2
        with:
          extensions: mbstring, intl, iconv, gd, sodium, zip, fileinfo, phar, mysqli
          tools: composer

      - name: Set up php.ini
        run: |
          sed -i
          -e 's/;extension=gd/extension=gd/'
          -e 's/;extension=intl/extension=intl/'
          -e 's/;extension=sodium/extension=sodium/'
          -e 's/;extension=zip/extension=zip/'
          -e 's/;extension=fileinfo/extension=fileinfo/'
          -e 's/;extension=phar/extension=phar/'
          -e '$a\\max_input_vars=5000'
          -e '$a\\memory_limit_256M'
          -e '$a\\post_max_size=50M'
          -e '$a\\upload_max_filesize=50M'
          server/php/php.ini

      - name: Install/Update Composer
        run: composer self-update --2

      - name: Set up MariaDB
        uses: ankane/setup-mariadb@v1
        with:
          database: moodle

      - name: Install Moodle Composer dependencies
        run: |
          cd server/moodle
          composer install

      - name: Import MoodleSQL file
        run: |
          mysql moodle < ${{ github.workspace }}/MoodleSQL.sql

      - name: Run Moodle installation CLI
        run: |
          php server/moodle/admin/cli/install.php \
              --lang=en \
              --wwwroot="http://localhost:8000/" \
              --dbhost="127.0.0.1" \
              --dbuser="\$USER" \
              --dbpass="" \
              --dataroot="./server/moodledata" \
              --skip-database \
              --non-interactive \
              --agree-license \
              --allow-unstable \
              --fullname="Tests for Moodle Homework Plugin" \
              --shortname="mhp" \
              --adminpass="Admin.123"

      - name: Configure PHPUnit
        run: |
          echo "\$CFG->phpunit_prefix = 'phpu_';" >>"./server/moodle/config.php"
          echo "\$CFG->phpunit_dataroot = '$("./server/moodledata/phpunit")';">>"./server/moodle/config.php"

      - name: Initialize PHPUnit
        run: php server/moodle/admin/tool/phpunit/cli/init.php

      - name: Run tests on mod_homework
        if: always()
        run: |
          pwd
          cd server/moodle
          vendor/bin/phpunit --testsuite mod_homework_testsuite

      - name: Run tests on block_homework
        if: always()
        run: |
          pwd
          cd server/moodle
          vendor/bin/phpunit --testsuite block_homework_testsuite
