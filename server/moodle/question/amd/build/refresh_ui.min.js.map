{"version":3,"file":"refresh_ui.min.js","sources":["../src/refresh_ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Question bank UI refresh utility\r\n *\r\n * @module    core_question/refresh_ui\r\n * @copyright 2023 Catalyst IT Europe Ltd.\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Fragment from 'core/fragment';\r\nimport Templates from 'core/templates';\r\n\r\nexport default {\r\n    /**\r\n     * Reload the question bank UI, retaining the current filters and sort data.\r\n     *\r\n     * @param {Element} uiRoot The root element of the UI to be refreshed. Must contain \"component\", \"callback\" and \"contextid\" in\r\n     *     its data attributes, to be passed to the Fragment API.\r\n     * @param {URL} returnUrl The url of the current page, containing filter and sort parameters.\r\n     * @return {Promise} Resolved when the refresh is complete.\r\n     */\r\n    refresh: (uiRoot, returnUrl) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fragmentData = uiRoot.dataset;\r\n            const viewData = {};\r\n            const sortData = {};\r\n            if (returnUrl) {\r\n                returnUrl.searchParams.forEach((value, key) => {\r\n                    // Match keys like 'sortdata[fieldname]' and convert them to an array,\r\n                    // because the fragment API doesn't like non-alphanum argument keys.\r\n                    const sortItem = key.match(/sortdata\\[([^\\]]+)\\]/);\r\n                    if (sortItem) {\r\n                        // The item returned by sortItem.pop() is the contents of the matching group, the field name.\r\n                        sortData[sortItem.pop()] = value;\r\n                    } else {\r\n                        viewData[key] = value;\r\n                    }\r\n                });\r\n            }\r\n            viewData.sortdata = JSON.stringify(sortData);\r\n            // We have to use then() there, as loadFragment doesn't appear to work with await.\r\n            Fragment.loadFragment(fragmentData.component, fragmentData.callback, fragmentData.contextid, viewData)\r\n                .then((html, js) => {\r\n                    Templates.replaceNode(uiRoot, html, js);\r\n                    resolve();\r\n                    return html;\r\n                })\r\n                .catch(reject);\r\n        });\r\n    }\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_fragment","_templates","_exports","refresh","uiRoot","returnUrl","Promise","resolve","reject","fragmentData","dataset","viewData","sortData","searchParams","forEach","value","key","sortItem","match","pop","sortdata","JSON","stringify","Fragment","loadFragment","component","callback","contextid","then","html","js","Templates","replaceNode","catch"],"mappings":"wHAwBuC,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;qFADvCG,UAAAJ,uBAAAI,WACAC,WAAAL,uBAAAK,YATAC,SAAAH,QAWe,CASXI,QAASA,CAACC,OAAQC,YACP,IAAIC,SAAQ,CAACC,QAASC,UACzB,MAAMC,aAAeL,OAAOM,QACtBC,SAAW,CAAA,EACXC,SAAW,CAAA,EACbP,WACAA,UAAUQ,aAAaC,SAAQ,CAACC,MAAOC,OAGnC,MAAMC,SAAWD,IAAIE,MAAM,wBACvBD,SAEAL,SAASK,SAASE,OAASJ,MAE3BJ,SAASK,KAAOD,KACpB,IAGRJ,SAASS,SAAWC,KAAKC,UAAUV,UAEnCW,UAAQxB,QAACyB,aAAaf,aAAagB,UAAWhB,aAAaiB,SAAUjB,aAAakB,UAAWhB,UACxFiB,MAAK,CAACC,KAAMC,MACTC,WAAShC,QAACiC,YAAY5B,OAAQyB,KAAMC,IACpCvB,UACOsB,QAEVI,MAAMzB,OAAO,KAG7B,OAAAN,SAAAH,OAAA"}