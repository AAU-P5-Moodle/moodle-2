{"version":3,"file":"actions.min.js","sources":["../src/actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Common javascript for handling actions on the admin page and the user's view of the question bank.\r\n *\r\n * @module     qbank_columnsortorder/actions\r\n * @copyright  2023 onwards Catalyst IT Europe Ltd\r\n * @author     Mark Johnson <mark.johnson@catalyst-eu.net>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport SortableList from 'core/sortable_list';\r\nimport $ from 'jquery';\r\nimport * as repository from 'qbank_columnsortorder/repository';\r\nimport Notification from \"core/notification\";\r\nimport RefreshUi from 'core_question/refresh_ui';\r\n\r\nexport const SELECTORS = {\r\n    columnList: '.qbank-column-list',\r\n    sortableColumn: '.qbank-sortable-column',\r\n    removeLink: '[data-action=remove]',\r\n    moveHandler: '[data-drag-type=move]',\r\n    addColumn: '.addcolumn',\r\n    addLink: '[data-action=add]',\r\n    actionLink: '.action-link',\r\n};\r\n\r\n/**\r\n * Sets up sortable list in the column sort order page.\r\n *\r\n * @param {Element} listRoot Element containing the sortable list.\r\n * @param {Boolean} vertical Is the list in vertical orientation, rather than horizonal?\r\n * @param {Boolean} global Should changes be saved to global config, rather than user preferences?\r\n * @return {jQuery} sortable column elements, for attaching additional event listeners.\r\n */\r\nexport const setupSortableLists = (listRoot, vertical = false, global = false) => {\r\n    const sortableList = new SortableList(listRoot, {\r\n        moveHandlerSelector: SELECTORS.moveHandler,\r\n        isHorizontal: !vertical,\r\n    });\r\n    sortableList.getElementName = element => Promise.resolve(element.data('name'));\r\n\r\n    const sortableColumns = $(SELECTORS.sortableColumn);\r\n\r\n    sortableColumns.on(SortableList.EVENTS.DROP, () => {\r\n        repository.setColumnbankOrder(getColumnOrder(listRoot), global).catch(Notification.exception);\r\n        listRoot.querySelectorAll(SELECTORS.sortableColumn).forEach(item => item.classList.remove('active'));\r\n    });\r\n\r\n    sortableColumns.on(SortableList.EVENTS.DRAGSTART, (event) => {\r\n        event.currentTarget.classList.add('active');\r\n    });\r\n\r\n    return sortableColumns;\r\n};\r\n\r\n/**\r\n * Set up event handlers for action buttons.\r\n *\r\n * For each action, call the web service to update the appropriate setting or user preference, then call the fragment to\r\n * refresh the view.\r\n *\r\n * @param {Element} uiRoot The root of the question bank UI.\r\n * @param {Boolean} global Should changes be saved to global config, rather than user preferences?\r\n */\r\nexport const setupActionButtons = (uiRoot, global = false) => {\r\n    uiRoot.addEventListener('click', async(e) => {\r\n        const actionLink = e.target.closest(SELECTORS.actionLink);\r\n        if (!actionLink) {\r\n            return;\r\n        }\r\n        try {\r\n            e.preventDefault();\r\n            const action = actionLink.dataset.action;\r\n            if (action === 'add' || action === 'remove') {\r\n                const hiddenColumns = [];\r\n                const addColumnList = document.querySelector(SELECTORS.addColumn);\r\n                if (addColumnList) {\r\n                    addColumnList.querySelectorAll(SELECTORS.addLink).forEach(item => {\r\n                        if (action === 'add' && item === actionLink) {\r\n                            return;\r\n                        }\r\n                        hiddenColumns.push(item.dataset.column);\r\n                    });\r\n                }\r\n                if (action === 'remove') {\r\n                    hiddenColumns.push(actionLink.dataset.column);\r\n                }\r\n                await repository.setHiddenColumns(hiddenColumns, global);\r\n            } else if (action === 'reset') {\r\n                await repository.resetColumns(global);\r\n            }\r\n            const actionUrl = new URL(actionLink.href);\r\n            const returnUrl = new URL(actionUrl.searchParams.get('returnurl').replaceAll('&amp;', '&'));\r\n            await RefreshUi.refresh(uiRoot, returnUrl);\r\n        } catch (ex) {\r\n            await Notification.exception(ex);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Gets the newly reordered columns to display in the question bank view.\r\n * @param {Element} listRoot\r\n * @returns {Array}\r\n */\r\nexport const getColumnOrder = listRoot => {\r\n    const columns = Array.from(listRoot.querySelectorAll('[data-columnid]'))\r\n        .map(column => column.dataset.columnid);\r\n\r\n    return columns.filter((value, index) => columns.indexOf(value) === index);\r\n};\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","__esModule","default","_sortable_list","_jquery","repository","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_notification","_refresh_ui","SELECTORS","_exports","columnList","sortableColumn","removeLink","moveHandler","addColumn","addLink","actionLink","setupSortableLists","listRoot","vertical","arguments","length","undefined","global","SortableList","moveHandlerSelector","isHorizontal","getElementName","element","Promise","resolve","data","sortableColumns","$","on","EVENTS","DROP","setColumnbankOrder","getColumnOrder","catch","Notification","exception","querySelectorAll","forEach","item","classList","remove","DRAGSTART","event","currentTarget","add","setupActionButtons","uiRoot","addEventListener","async","target","closest","preventDefault","action","dataset","hiddenColumns","addColumnList","document","querySelector","push","column","setHiddenColumns","resetColumns","actionUrl","URL","href","returnUrl","searchParams","replaceAll","RefreshUi","refresh","ex","columns","Array","from","map","columnid","filter","value","index","indexOf"],"mappings":"mPA4BiD,SAAAA,yBAAAC,GAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAF,yBAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,EAAA,CAAA,SAAAI,uBAAAJ,GAAAA,OAAAA,GAAAA,EAAAK,WAAAL,EAAAM,CAAAA,QAAAN,EAAA;;;;;;;;uKAJjDO,eAAAH,uBAAAG,gBACAC,QAAAJ,uBAAAI,SACAC,WAEiD,SAAAT,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAAL,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAM,MAAAA,CAAAA,QAAAN,GAAAG,IAAAA,EAAAJ,yBAAAG,GAAA,GAAAC,GAAAA,EAAAO,IAAAV,GAAA,OAAAG,EAAAQ,IAAAX,GAAA,IAAAY,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAlB,EAAAkB,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAApB,EAAAkB,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAjB,EAAAkB,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAlB,EAAAkB,GAAAN,OAAAA,EAAAN,QAAAN,EAAAG,GAAAA,EAAAmB,IAAAtB,EAAAY,GAAAA,CAAA,CAFjDW,CAAAd,YACAe,cAAApB,uBAAAoB,eACAC,YAAArB,uBAAAqB,aAEO,MAAMC,UAASC,SAAAD,UAAG,CACrBE,WAAY,qBACZC,eAAgB,yBAChBC,WAAY,uBACZC,YAAa,wBACbC,UAAW,aACXC,QAAS,oBACTC,WAAY,gBA8BdP,SAAAQ,mBAnBgC,SAACC,UAA+C,IAArCC,SAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAUG,OAAMH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC5C,IAAII,eAAYpC,QAAC8B,SAAU,CAC5CO,oBAAqBjB,UAAUK,YAC/Ba,cAAeP,WAENQ,eAAiBC,SAAWC,QAAQC,QAAQF,QAAQG,KAAK,SAEtE,MAAMC,iBAAkB,EAAAC,QAAAA,SAAEzB,UAAUG,gBAWpC,OATAqB,gBAAgBE,GAAGV,eAAAA,QAAaW,OAAOC,MAAM,KACzC7C,WAAW8C,mBAAmBC,eAAepB,UAAWK,QAAQgB,MAAMC,cAAYpD,QAACqD,WACnFvB,SAASwB,iBAAiBlC,UAAUG,gBAAgBgC,SAAQC,MAAQA,KAAKC,UAAUC,OAAO,WAAU,IAGxGd,gBAAgBE,GAAGV,eAAYpC,QAAC+C,OAAOY,WAAYC,QAC/CA,MAAMC,cAAcJ,UAAUK,IAAI,SAAS,IAGxClB,iBA8CTvB,SAAA0C,mBAlCgC,SAACC,QAA2B,IAAnB7B,OAAMH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC7CgC,OAAOC,iBAAiB,SAASC,UAC7B,MAAMtC,WAAalC,EAAEyE,OAAOC,QAAQhD,UAAUQ,YAC9C,GAAKA,WAGL,IACIlC,EAAE2E,iBACF,MAAMC,OAAS1C,WAAW2C,QAAQD,OAClC,GAAe,QAAXA,QAA+B,WAAXA,OAAqB,CACzC,MAAME,cAAgB,GAChBC,cAAgBC,SAASC,cAAcvD,UAAUM,WACnD+C,eACAA,cAAcnB,iBAAiBlC,UAAUO,SAAS4B,SAAQC,OACvC,QAAXc,QAAoBd,OAAS5B,YAGjC4C,cAAcI,KAAKpB,KAAKe,QAAQM,OAAO,IAGhC,WAAXP,QACAE,cAAcI,KAAKhD,WAAW2C,QAAQM,cAEpC1E,WAAW2E,iBAAiBN,cAAerC,OACrD,KAAsB,UAAXmC,cACDnE,WAAW4E,aAAa5C,QAElC,MAAM6C,UAAY,IAAIC,IAAIrD,WAAWsD,MAC/BC,UAAY,IAAIF,IAAID,UAAUI,aAAa/E,IAAI,aAAagF,WAAW,QAAS,YAChFC,oBAAUC,QAAQvB,OAAQmB,UACnC,CAAC,MAAOK,UACCpC,cAAYpD,QAACqD,UAAUmC,GACjC,MASD,MAAMtC,eAAiBpB,WAC1B,MAAM2D,QAAUC,MAAMC,KAAK7D,SAASwB,iBAAiB,oBAChDsC,KAAIf,QAAUA,OAAON,QAAQsB,WAElC,OAAOJ,QAAQK,QAAO,CAACC,MAAOC,QAAUP,QAAQQ,QAAQF,SAAWC,OAAM,EAC3E3E,SAAA6B,eAAAA,cAAA"}