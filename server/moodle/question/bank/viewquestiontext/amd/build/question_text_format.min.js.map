{"version":3,"file":"question_text_format.min.js","sources":["../src/question_text_format.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript for question_text_format question bank control.\r\n *\r\n * @module     qbank_viewquestiontext/question_text_format\r\n * @copyright  2023 Catalyst IT Europe Ltd.\r\n * @author     Mark Johnson <mark.johnson@catalyst-eu.net>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport * as repository from 'qbank_viewquestiontext/repository';\r\nimport RefreshUi from 'core_question/refresh_ui';\r\nimport Notification from 'core/notification';\r\n\r\nconst SELECTORS = {\r\n    formatSelectId: 'question-text-format',\r\n    returnUrl: '[name=returnurl]',\r\n};\r\n\r\nlet uiRoot;\r\n\r\n/**\r\n * Save the selected format via a web service call, and refresh the UI.\r\n *\r\n * @param {Event} e Select field change event.\r\n * @return {Promise<void>}\r\n */\r\nconst handleFormatChange = async(e) => {\r\n    const value = e.target.value;\r\n    try {\r\n        await repository.setQuestionTextFormat(value);\r\n        const returnUrlInput = e.target.closest('form').querySelector(SELECTORS.returnUrl);\r\n        const returnUrl = new URL(returnUrlInput.value);\r\n        await RefreshUi.refresh(uiRoot, returnUrl);\r\n    } catch (ex) {\r\n        Notification.exception(ex);\r\n    }\r\n};\r\n\r\n/**\r\n * Initialise question text format widget.\r\n *\r\n * Find the uiRoot element and attach a change listener to the question text format selector.\r\n *\r\n * @param {String} uiRootId\r\n */\r\nexport const init = (uiRootId) => {\r\n    uiRoot = document.getElementById(uiRootId);\r\n    const select = document.getElementById(SELECTORS.formatSelectId);\r\n    select.addEventListener('change', handleFormatChange);\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","repository","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_refresh_ui","_notification","SELECTORS","uiRoot","handleFormatChange","async","value","target","setQuestionTextFormat","returnUrlInput","closest","querySelector","returnUrl","URL","RefreshUi","refresh","ex","Notification","exception","_exports","init","uiRootId","document","getElementById","addEventListener"],"mappings":"6MA0B6C,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA,CAAA,SAAAG,yBAAAH,GAAA,GAAA,mBAAAI,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAD,yBAAA,SAAAH,GAAAA,OAAAA,EAAAM,EAAAD,IAAAL,EAAA,8EAF7CO,WAE6C,SAAAP,EAAAK,GAAAA,IAAAA,GAAAL,GAAAA,EAAAC,WAAAD,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAE,MAAAA,CAAAA,QAAAF,GAAAM,IAAAA,EAAAH,yBAAAE,GAAA,GAAAC,GAAAA,EAAAE,IAAAR,GAAA,OAAAM,EAAAG,IAAAT,GAAA,IAAAU,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAhB,EAAAgB,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAlB,EAAAgB,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAf,EAAAgB,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAhB,EAAAgB,GAAAN,OAAAA,EAAAR,QAAAF,EAAAM,GAAAA,EAAAc,IAAApB,EAAAU,GAAAA;;;;;;;;KAAA,CAF7CW,CAAAd,YACAe,YAAAvB,uBAAAuB,aACAC,cAAAxB,uBAAAwB,eAEA,MAAMC,yBACc,uBADdA,oBAES,mBAGf,IAAIC,OAQJ,MAAMC,mBAAqBC,UACvB,MAAMC,MAAQ5B,EAAE6B,OAAOD,MACvB,UACUrB,WAAWuB,sBAAsBF,OACvC,MAAMG,eAAiB/B,EAAE6B,OAAOG,QAAQ,QAAQC,cAAcT,qBACxDU,UAAY,IAAIC,IAAIJ,eAAeH,aACnCQ,oBAAUC,QAAQZ,OAAQS,UACnC,CAAC,MAAOI,IACLC,cAAAA,QAAaC,UAAUF,GAC3B,GAcFG,SAAAC,KAJmBC,WACjBlB,OAASmB,SAASC,eAAeF,UAClBC,SAASC,eAAerB,0BAChCsB,iBAAiB,SAAUpB,mBAAmB,CACvD"}