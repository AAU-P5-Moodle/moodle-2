{"version":3,"file":"showdescriptions.min.js","sources":["../src/showdescriptions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * The show descriptions toggle component.\r\n *\r\n * @module     qbank_managecategories/showdescriptions\r\n * @class      qbank_managecategories/showdescriptions\r\n */\r\n\r\nimport {BaseComponent} from 'core/reactive';\r\nimport {categorymanager} from 'qbank_managecategories/categorymanager';\r\n\r\nexport default class extends BaseComponent {\r\n\r\n    create(descriptor) {\r\n        this.name = descriptor.element.id;\r\n        this.selectors = {\r\n            TOGGLE: '#showdescriptions-toggle',\r\n        };\r\n    }\r\n\r\n    stateReady() {\r\n        this.addEventListener(this.getElement(this.selectors.TOGGLE), 'change', this.updateShowDescriptions);\r\n    }\r\n\r\n    /**\r\n     * Static method to create a component instance.\r\n     *\r\n     * @param {string} target the DOM main element or its ID\r\n     * @param {object} selectors optional css selector overrides\r\n     * @return {Component}\r\n     */\r\n    static init(target, selectors) {\r\n        const targetElement = document.querySelector(target);\r\n        return new this({\r\n            element: targetElement,\r\n            selectors,\r\n            reactive: categorymanager,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Dispatch a mutation to toggle the showDescriptions setting.\r\n     *\r\n     * @param {Event} event The toggle change event.\r\n     * @return {Promise<void>}\r\n     */\r\n    async updateShowDescriptions(event) {\r\n        const checked = event.target.checked;\r\n        this.reactive.dispatch('toggleDescriptions', checked);\r\n    }\r\n}\r\n"],"names":["_default","BaseComponent","create","descriptor","this","name","element","id","selectors","TOGGLE","stateReady","addEventListener","getElement","updateShowDescriptions","init","target","document","querySelector","reactive","categorymanager","event","checked","dispatch","_exports","default"],"mappings":"qPAyBe,MAAAA,iBAAcC,UAAAA,cAEzBC,MAAAA,CAAOC,YACHC,KAAKC,KAAOF,WAAWG,QAAQC,GAC/BH,KAAKI,UAAY,CACbC,OAAQ,2BAEhB,CAEAC,UAAAA,GACIN,KAAKO,iBAAiBP,KAAKQ,WAAWR,KAAKI,UAAUC,QAAS,SAAUL,KAAKS,uBACjF,CASA,WAAOC,CAAKC,OAAQP,WAEhB,OAAO,IAAIJ,KAAK,CACZE,QAFkBU,SAASC,cAAcF,QAGzCP,oBACAU,SAAUC,iBAAAA,iBAElB,CAQA,4BAAMN,CAAuBO,OACzB,MAAMC,QAAUD,MAAML,OAAOM,QAC7BjB,KAAKc,SAASI,SAAS,qBAAsBD,QACjD,EACH,OAAAE,SAAAC,QAAAxB,SAAAuB,SAAAC,OAAA"}