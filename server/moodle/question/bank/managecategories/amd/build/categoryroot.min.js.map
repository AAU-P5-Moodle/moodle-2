{"version":3,"file":"categoryroot.min.js","sources":["../src/categoryroot.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * The category root component.\r\n *\r\n * @module     qbank_managecategories/categoryroot\r\n * @class      qbank_managecategories/categoryroot\r\n */\r\n\r\nimport {BaseComponent} from 'core/reactive';\r\nimport {categorymanager} from 'qbank_managecategories/categorymanager';\r\n\r\nexport default class extends BaseComponent {\r\n\r\n    create(descriptor) {\r\n        this.name = descriptor.element.id;\r\n        this.classes = {\r\n            SHOWDESCRIPTIONS: 'showdescriptions',\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Static method to create a component instance.\r\n     *\r\n     * @param {string} target the DOM main element or its ID\r\n     * @param {object} selectors optional css selector overrides\r\n     * @return {Component}\r\n     */\r\n    static init(target, selectors) {\r\n        return new this({\r\n            element: document.querySelector(target),\r\n            selectors,\r\n            reactive: categorymanager,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Watch for changes to the page state.\r\n     *\r\n     * @return {Array} A list of watchers.\r\n     */\r\n    getWatchers() {\r\n        return [\r\n            // Watch for descriptions being toggled.\r\n            {watch: `page.showdescriptions:updated`, handler: this.toggleDescriptions}\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Show or hide descriptions when the flag in the state is changed.\r\n     *\r\n     * @param {Object} args\r\n     * @param {Object} args.element The updated page state.\r\n     */\r\n    toggleDescriptions({element}) {\r\n        if (element.showdescriptions) {\r\n            this.getElement().classList.add(this.classes.SHOWDESCRIPTIONS);\r\n        } else {\r\n            this.getElement().classList.remove(this.classes.SHOWDESCRIPTIONS);\r\n        }\r\n    }\r\n}\r\n"],"names":["_default","BaseComponent","create","descriptor","this","name","element","id","classes","SHOWDESCRIPTIONS","init","target","selectors","document","querySelector","reactive","categorymanager","getWatchers","watch","handler","toggleDescriptions","_ref","showdescriptions","getElement","classList","add","remove","_exports","default"],"mappings":"iPAyBe,MAAAA,iBAAcC,UAAAA,cAEzBC,MAAAA,CAAOC,YACHC,KAAKC,KAAOF,WAAWG,QAAQC,GAC/BH,KAAKI,QAAU,CACXC,iBAAkB,mBAE1B,CASA,WAAOC,CAAKC,OAAQC,WAChB,OAAO,IAAIR,KAAK,CACZE,QAASO,SAASC,cAAcH,QAChCC,oBACAG,SAAUC,iBAAAA,iBAElB,CAOAC,WAAAA,GACI,MAAO,CAEH,CAACC,MAAO,gCAAiCC,QAASf,KAAKgB,oBAE/D,CAQAA,kBAAAA,CAAkBC,MAAY,IAAXf,QAACA,SAAQe,KACpBf,QAAQgB,iBACRlB,KAAKmB,aAAaC,UAAUC,IAAIrB,KAAKI,QAAQC,kBAE7CL,KAAKmB,aAAaC,UAAUE,OAAOtB,KAAKI,QAAQC,iBAExD,EACH,OAAAkB,SAAAC,QAAA5B,SAAA2B,SAAAC,OAAA"}