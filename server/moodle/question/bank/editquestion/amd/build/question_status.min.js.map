{"version":3,"file":"question_status.min.js","sources":["../src/question_status.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Status column selector js.\r\n *\r\n * @module     qbank_editquestion/question_status\r\n * @copyright  2021 Catalyst IT Australia Pty Ltd\r\n * @author     Safat Shahin <safatshahin@catalyst-au.net>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Ajax from 'core/ajax';\r\nimport Notification from 'core/notification';\r\n\r\n/**\r\n * Set the question status.\r\n *\r\n * @param {Number} questionId The question id.\r\n * @param {String} status The updated question status.\r\n * @return {Array} The modified question status\r\n */\r\nconst setQuestionStatus = (questionId, status) => Ajax.call([{\r\n    methodname: 'qbank_editquestion_set_status',\r\n    args: {\r\n        questionid: questionId,\r\n        status: status\r\n    }\r\n}])[0];\r\n\r\n/**\r\n * Entrypoint of the js.\r\n *\r\n * @method init\r\n * @param {Number} questionId Question id.\r\n */\r\nexport const init = (questionId) => {\r\n    let target = document.querySelector('#question_status_dropdown-' + questionId);\r\n    target.addEventListener('change', (e) => {\r\n        const questionStatus = e.target.value;\r\n        setQuestionStatus(questionId, questionStatus)\r\n        .then((response) => {\r\n            if (response.error) {\r\n                Notification.addNotification({\r\n                    type: 'error',\r\n                    message: response.error\r\n                });\r\n            }\r\n            return;\r\n        }).catch();\r\n    });\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_ajax","_notification","_exports","init","questionId","document","querySelector","addEventListener","questionStatus","target","value","setQuestionStatus","status","Ajax","call","methodname","args","questionid","then","response","error","Notification","addNotification","type","message","catch"],"mappings":"gIAyB6C,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;;kFAD7CG,MAAAJ,uBAAAI,OACAC,cAAAL,uBAAAK,eAsCEC,SAAAC,KAfmBC,aACJC,SAASC,cAAc,6BAA+BF,YAC5DG,iBAAiB,UAAWV,IAC/B,MAAMW,eAAiBX,EAAEY,OAAOC,MAjBdC,EAACP,WAAYQ,SAAWC,MAAId,QAACe,KAAK,CAAC,CACzDC,WAAY,gCACZC,KAAM,CACFC,WAAYb,WACZQ,OAAQA,WAEZ,GAYID,CAAkBP,WAAYI,gBAC7BU,MAAMC,WACCA,SAASC,OACTC,cAAYtB,QAACuB,gBAAgB,CACzBC,KAAM,QACNC,QAASL,SAASC,OAG1B,IACDK,OAAO,GACZ,CACJ"}