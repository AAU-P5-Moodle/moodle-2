{"version":3,"file":"user_evidence_actions.min.js","sources":["../src/user_evidence_actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * User evidence actions.\r\n *\r\n * @module     tool_lp/user_evidence_actions\r\n * @copyright  2015 Frédéric Massart - FMCorz.net\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery',\r\n        'core/templates',\r\n        'core/ajax',\r\n        'core/notification',\r\n        'core/str',\r\n        'tool_lp/menubar',\r\n        'tool_lp/competencypicker_user_plans'],\r\n        function($, templates, ajax, notification, str, Menubar, PickerUserPlans) {\r\n\r\n    /**\r\n     * UserEvidenceActions class.\r\n     *\r\n     * Note that presently this cannot be instantiated more than once per page.\r\n     *\r\n     * @param {String} type The type of page we're in.\r\n     */\r\n    var UserEvidenceActions = function(type) {\r\n        this._type = type;\r\n\r\n        if (type === 'evidence') {\r\n            // This is the page to view one evidence.\r\n            this._region = '[data-region=\"user-evidence-page\"]';\r\n            this._evidenceNode = '[data-region=\"user-evidence-page\"]';\r\n            this._template = 'tool_lp/user_evidence_page';\r\n            this._contextMethod = 'tool_lp_data_for_user_evidence_page';\r\n\r\n        } else if (type === 'list') {\r\n            // This is the page to view a list of evidence.\r\n            this._region = '[data-region=\"user-evidence-list\"]';\r\n            this._evidenceNode = '[data-region=\"user-evidence-node\"]';\r\n            this._template = 'tool_lp/user_evidence_list_page';\r\n            this._contextMethod = 'tool_lp_data_for_user_evidence_list_page';\r\n\r\n        } else {\r\n            throw new TypeError('Unexpected type.');\r\n        }\r\n    };\r\n\r\n    /** @property {String} Ajax method to fetch the page data from. */\r\n    UserEvidenceActions.prototype._contextMethod = null;\r\n    /** @property {String} Selector to find the node describing the evidence. */\r\n    UserEvidenceActions.prototype._evidenceNode = null;\r\n    /** @property {String} Selector mapping to the region to update. Usually similar to wrapper. */\r\n    UserEvidenceActions.prototype._region = null;\r\n    /** @property {String} Name of the template used to render the region. */\r\n    UserEvidenceActions.prototype._template = null;\r\n    /** @property {String} Type of page/region we're in. */\r\n    UserEvidenceActions.prototype._type = null;\r\n\r\n    /**\r\n     * Resolve the arguments to refresh the region.\r\n     *\r\n     * @param  {Object} evidenceData Evidence data from evidence node.\r\n     * @return {Object} List of arguments.\r\n     */\r\n    UserEvidenceActions.prototype._getContextArgs = function(evidenceData) {\r\n        var self = this,\r\n            args = {};\r\n\r\n        if (self._type === 'evidence') {\r\n            args = {\r\n                id: evidenceData.id\r\n            };\r\n\r\n        } else if (self._type === 'list') {\r\n            args = {\r\n                userid: evidenceData.userid\r\n            };\r\n        }\r\n\r\n        return args;\r\n    };\r\n\r\n    /**\r\n     * Callback to render the region template.\r\n     *\r\n     * @param {Object} context The context for the template.\r\n     * @return {Promise}\r\n     */\r\n    UserEvidenceActions.prototype._renderView = function(context) {\r\n        var self = this;\r\n        return templates.render(self._template, context)\r\n            .then(function(newhtml, newjs) {\r\n                templates.replaceNode($(self._region), newhtml, newjs);\r\n                return;\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Call multiple ajax methods, and refresh.\r\n     *\r\n     * @param  {Array}  calls    List of Ajax calls.\r\n     * @param  {Object} evidenceData Evidence data from evidence node.\r\n     * @return {Promise}\r\n     */\r\n    UserEvidenceActions.prototype._callAndRefresh = function(calls, evidenceData) {\r\n        var self = this;\r\n        calls.push({\r\n            methodname: self._contextMethod,\r\n            args: self._getContextArgs(evidenceData)\r\n        });\r\n\r\n        // Apply all the promises, and refresh when the last one is resolved.\r\n        return $.when.apply($.when, ajax.call(calls))\r\n            .then(function() {\r\n                return self._renderView(arguments[arguments.length - 1]);\r\n            })\r\n            .fail(notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Delete a plan and reload the region.\r\n     *\r\n     * @param  {Object} evidenceData Evidence data from evidence node.\r\n     */\r\n    UserEvidenceActions.prototype._doDelete = function(evidenceData) {\r\n        var self = this,\r\n            calls = [{\r\n                methodname: 'core_competency_delete_user_evidence',\r\n                args: {id: evidenceData.id}\r\n            }];\r\n        self._callAndRefresh(calls, evidenceData);\r\n    };\r\n\r\n    /**\r\n     * Delete a plan.\r\n     *\r\n     * @param  {Object} evidenceData Evidence data from evidence node.\r\n     */\r\n    UserEvidenceActions.prototype.deleteEvidence = function(evidenceData) {\r\n        var self = this,\r\n            requests;\r\n\r\n        requests = ajax.call([{\r\n            methodname: 'core_competency_read_user_evidence',\r\n            args: {id: evidenceData.id}\r\n        }]);\r\n\r\n        requests[0].done(function(evidence) {\r\n            str.get_strings([\r\n                {key: 'confirm', component: 'moodle'},\r\n                {key: 'deleteuserevidence', component: 'tool_lp', param: evidence.name},\r\n                {key: 'delete', component: 'moodle'},\r\n                {key: 'cancel', component: 'moodle'}\r\n            ]).done(function(strings) {\r\n                notification.confirm(\r\n                    strings[0], // Confirm.\r\n                    strings[1], // Delete evidence X?\r\n                    strings[2], // Delete.\r\n                    strings[3], // Cancel.\r\n                    function() {\r\n                        self._doDelete(evidenceData);\r\n                    }\r\n                );\r\n            }).fail(notification.exception);\r\n        }).fail(notification.exception);\r\n\r\n    };\r\n\r\n    /**\r\n     * Delete evidence handler.\r\n     *\r\n     * @param  {Event} e The event.\r\n     */\r\n    UserEvidenceActions.prototype._deleteEvidenceHandler = function(e) {\r\n        e.preventDefault();\r\n        var data = this._findEvidenceData($(e.target));\r\n        this.deleteEvidence(data);\r\n    };\r\n\r\n    /**\r\n     * Link a competency and reload.\r\n     *\r\n     * @param {Object} evidenceData Evidence data from evidence node.\r\n     * @param {Number} competencyIds The competency IDs.\r\n     */\r\n    UserEvidenceActions.prototype._doCreateUserEvidenceCompetency = function(evidenceData, competencyIds) {\r\n        var self = this,\r\n            calls = [];\r\n\r\n        $.each(competencyIds, function(index, competencyId) {\r\n            calls.push({\r\n                methodname: 'core_competency_create_user_evidence_competency',\r\n                args: {\r\n                    userevidenceid: evidenceData.id,\r\n                    competencyid: competencyId,\r\n                }\r\n            });\r\n        });\r\n\r\n        self._callAndRefresh(calls, evidenceData);\r\n    };\r\n\r\n    /**\r\n     * Create a user evidence competency.\r\n     *\r\n     * @param  {Object} evidenceData Evidence data from evidence node.\r\n     */\r\n    UserEvidenceActions.prototype.createUserEvidenceCompetency = function(evidenceData) {\r\n        var self = this,\r\n            picker = new PickerUserPlans(evidenceData.userid);\r\n\r\n        picker.on('save', function(e, data) {\r\n            var competencyIds = data.competencyIds;\r\n            self._doCreateUserEvidenceCompetency(evidenceData, competencyIds, data.requestReview);\r\n        });\r\n\r\n        picker.display();\r\n    };\r\n\r\n    /**\r\n     * Create user evidence competency handler.\r\n     *\r\n     * @param  {Event} e The event.\r\n     */\r\n    UserEvidenceActions.prototype._createUserEvidenceCompetencyHandler = function(e) {\r\n        e.preventDefault();\r\n        var data = this._findEvidenceData($(e.target));\r\n        this.createUserEvidenceCompetency(data);\r\n    };\r\n\r\n    /**\r\n     * Remove a linked competency and reload.\r\n     *\r\n     * @param {Object} evidenceData Evidence data from evidence node.\r\n     * @param {Number} competencyId The competency ID.\r\n     */\r\n    UserEvidenceActions.prototype._doDeleteUserEvidenceCompetency = function(evidenceData, competencyId) {\r\n        var self = this,\r\n            calls = [];\r\n\r\n        calls.push({\r\n            methodname: 'core_competency_delete_user_evidence_competency',\r\n            args: {\r\n                userevidenceid: evidenceData.id,\r\n                competencyid: competencyId,\r\n            }\r\n        });\r\n\r\n        self._callAndRefresh(calls, evidenceData);\r\n    };\r\n\r\n    /**\r\n     * Delete a user evidence competency.\r\n     *\r\n     * @param  {Object} evidenceData Evidence data from evidence node.\r\n     * @param  {Number} competencyId The competency ID.\r\n     */\r\n    UserEvidenceActions.prototype.deleteUserEvidenceCompetency = function(evidenceData, competencyId) {\r\n        this._doDeleteUserEvidenceCompetency(evidenceData, competencyId);\r\n    };\r\n\r\n    /**\r\n     * Delete user evidence competency handler.\r\n     *\r\n     * @param  {Event} e The event.\r\n     */\r\n    UserEvidenceActions.prototype._deleteUserEvidenceCompetencyHandler = function(e) {\r\n        var data = this._findEvidenceData($(e.currentTarget)),\r\n            competencyId = $(e.currentTarget).data('id');\r\n        e.preventDefault();\r\n        this.deleteUserEvidenceCompetency(data, competencyId);\r\n    };\r\n\r\n    /**\r\n     * Send request review for user evidence competencies and reload the region.\r\n     *\r\n     * @param  {Object} evidenceData Evidence data from evidence node.\r\n     */\r\n    UserEvidenceActions.prototype._doReviewUserEvidenceCompetencies = function(evidenceData) {\r\n        var self = this,\r\n            calls = [{\r\n                methodname: 'core_competency_request_review_of_user_evidence_linked_competencies',\r\n                args: {id: evidenceData.id}\r\n            }];\r\n        self._callAndRefresh(calls, evidenceData);\r\n    };\r\n\r\n    /**\r\n     * Send request review for user evidence competencies.\r\n     *\r\n     * @param  {Object} evidenceData Evidence data from evidence node.\r\n     */\r\n    UserEvidenceActions.prototype.reviewUserEvidenceCompetencies = function(evidenceData) {\r\n        var self = this,\r\n            requests;\r\n\r\n        requests = ajax.call([{\r\n            methodname: 'core_competency_read_user_evidence',\r\n            args: {id: evidenceData.id}\r\n        }]);\r\n\r\n        requests[0].done(function(evidence) {\r\n            str.get_strings([\r\n                {key: 'confirm', component: 'moodle'},\r\n                {key: 'sendallcompetenciestoreview', component: 'tool_lp', param: evidence.name},\r\n                {key: 'confirm', component: 'moodle'},\r\n                {key: 'cancel', component: 'moodle'}\r\n            ]).done(function(strings) {\r\n                notification.confirm(\r\n                    strings[0], // Confirm.\r\n                    strings[1], // Send all competencies in review for X?\r\n                    strings[2], // Confirm.\r\n                    strings[3], // Cancel.\r\n                    function() {\r\n                        self._doReviewUserEvidenceCompetencies(evidenceData);\r\n                    }\r\n                );\r\n            }).fail(notification.exception);\r\n        }).fail(notification.exception);\r\n\r\n    };\r\n\r\n    /**\r\n     * Send request review for user evidence competencies handler.\r\n     *\r\n     * @param  {Event} e The event.\r\n     */\r\n    UserEvidenceActions.prototype._reviewUserEvidenceCompetenciesHandler = function(e) {\r\n        e.preventDefault();\r\n        var data = this._findEvidenceData($(e.target));\r\n        this.reviewUserEvidenceCompetencies(data);\r\n    };\r\n\r\n    /**\r\n     * Find the evidence data from the evidence node.\r\n     *\r\n     * @param  {Node} node The node to search from.\r\n     * @return {Object} Evidence data.\r\n     */\r\n    UserEvidenceActions.prototype._findEvidenceData = function(node) {\r\n        var parent = node.parentsUntil($(this._region).parent(), this._evidenceNode),\r\n            data;\r\n\r\n        if (parent.length != 1) {\r\n            throw new Error('The evidence node was not located.');\r\n        }\r\n\r\n        data = parent.data();\r\n        if (typeof data === 'undefined' || typeof data.id === 'undefined') {\r\n            throw new Error('Evidence data could not be found.');\r\n        }\r\n\r\n        return data;\r\n    };\r\n\r\n    /**\r\n     * Enhance a menu bar.\r\n     *\r\n     * @param  {String} selector Menubar selector.\r\n     */\r\n    UserEvidenceActions.prototype.enhanceMenubar = function(selector) {\r\n        var self = this;\r\n        Menubar.enhance(selector, {\r\n            '[data-action=\"user-evidence-delete\"]': self._deleteEvidenceHandler.bind(self),\r\n            '[data-action=\"link-competency\"]': self._createUserEvidenceCompetencyHandler.bind(self),\r\n            '[data-action=\"send-competencies-review\"]': self._reviewUserEvidenceCompetenciesHandler.bind(self),\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Register the events in the region.\r\n     *\r\n     * At this stage this cannot be used with enhanceMenubar or multiple handlers\r\n     * will be added to the same node.\r\n     */\r\n    UserEvidenceActions.prototype.registerEvents = function() {\r\n        var wrapper = $(this._region),\r\n            self = this;\r\n\r\n        wrapper.find('[data-action=\"user-evidence-delete\"]').click(self._deleteEvidenceHandler.bind(self));\r\n        wrapper.find('[data-action=\"link-competency\"]').click(self._createUserEvidenceCompetencyHandler.bind(self));\r\n        wrapper.find('[data-action=\"delete-competency-link\"]').click(self._deleteUserEvidenceCompetencyHandler.bind(self));\r\n        wrapper.find('[data-action=\"send-competencies-review\"]').click(self._reviewUserEvidenceCompetenciesHandler.bind(self));\r\n    };\r\n\r\n    return /** @alias module:tool_lp/user_evidence_actions */ UserEvidenceActions;\r\n});\r\n"],"names":["define","$","templates","ajax","notification","str","Menubar","PickerUserPlans","UserEvidenceActions","type","this","_type","_region","_evidenceNode","_template","_contextMethod","TypeError","prototype","_getContextArgs","evidenceData","args","id","userid","_renderView","context","self","render","then","newhtml","newjs","replaceNode","_callAndRefresh","calls","push","methodname","when","apply","call","arguments","length","fail","exception","_doDelete","deleteEvidence","done","evidence","get_strings","key","component","param","name","strings","confirm","_deleteEvidenceHandler","e","preventDefault","data","_findEvidenceData","target","_doCreateUserEvidenceCompetency","competencyIds","each","index","competencyId","userevidenceid","competencyid","createUserEvidenceCompetency","picker","on","requestReview","display","_createUserEvidenceCompetencyHandler","_doDeleteUserEvidenceCompetency","deleteUserEvidenceCompetency","_deleteUserEvidenceCompetencyHandler","currentTarget","_doReviewUserEvidenceCompetencies","reviewUserEvidenceCompetencies","_reviewUserEvidenceCompetenciesHandler","node","parent","parentsUntil","Error","enhanceMenubar","selector","enhance","bind","registerEvents","wrapper","find","click"],"mappings":"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"}