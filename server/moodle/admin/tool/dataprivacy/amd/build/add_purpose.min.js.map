{"version":3,"file":"add_purpose.min.js","sources":["../src/add_purpose.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module to add purposes.\r\n *\r\n * @module     tool_dataprivacy/add_purpose\r\n * @copyright  2018 David Monllao\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine([\r\n    'jquery',\r\n    'core/str',\r\n    'core/ajax',\r\n    'core/notification',\r\n    'core/modal_save_cancel',\r\n    'core/modal_events',\r\n    'core/fragment',\r\n    'core_form/changechecker',\r\n], function(\r\n    $,\r\n    Str,\r\n    Ajax,\r\n    Notification,\r\n    ModalSaveCancel,\r\n    ModalEvents,\r\n    Fragment,\r\n    FormChangeChecker\r\n) {\r\n\r\n        var SELECTORS = {\r\n            PURPOSE_LINK: '[data-add-element=\"purpose\"]',\r\n        };\r\n\r\n        var AddPurpose = function(contextId) {\r\n            this.contextId = contextId;\r\n\r\n            var stringKeys = [\r\n                {\r\n                    key: 'addpurpose',\r\n                    component: 'tool_dataprivacy'\r\n                },\r\n                {\r\n                    key: 'save',\r\n                    component: 'admin'\r\n                }\r\n            ];\r\n            this.strings = Str.get_strings(stringKeys);\r\n\r\n            this.registerEventListeners();\r\n        };\r\n\r\n        /**\r\n         * @var {int} contextId\r\n         * @private\r\n         */\r\n        AddPurpose.prototype.contextId = 0;\r\n\r\n        /**\r\n         * @var {Promise}\r\n         * @private\r\n         */\r\n        AddPurpose.prototype.strings = 0;\r\n\r\n        AddPurpose.prototype.registerEventListeners = function() {\r\n\r\n            var trigger = $(SELECTORS.PURPOSE_LINK);\r\n            trigger.on('click', function() {\r\n                this.strings.then(function(strings) {\r\n                    return Promise.all([\r\n                        ModalSaveCancel.create({\r\n                            title: strings[0],\r\n                            body: '',\r\n                        }),\r\n                        strings[1],\r\n                    ]).then(function([modal, string]) {\r\n                        this.setupFormModal(modal, string);\r\n                    }.bind(this));\r\n                }.bind(this))\r\n                .catch(Notification.exception);\r\n            }.bind(this));\r\n\r\n        };\r\n\r\n        /**\r\n         * @method getBody\r\n         * @param {Object} formdata\r\n         * @private\r\n         * @return {Promise}\r\n         */\r\n        AddPurpose.prototype.getBody = function(formdata) {\r\n\r\n            var params = null;\r\n            if (typeof formdata !== \"undefined\") {\r\n                params = {jsonformdata: JSON.stringify(formdata)};\r\n            }\r\n            // Get the content of the modal.\r\n            return Fragment.loadFragment('tool_dataprivacy', 'addpurpose_form', this.contextId, params);\r\n        };\r\n\r\n        AddPurpose.prototype.setupFormModal = function(modal, saveText) {\r\n            modal.setLarge();\r\n\r\n            modal.setSaveButtonText(saveText);\r\n\r\n            // We want to reset the form every time it is opened.\r\n            modal.getRoot().on(ModalEvents.hidden, this.destroy.bind(this));\r\n\r\n            modal.setBody(this.getBody());\r\n\r\n            // We catch the modal save event, and use it to submit the form inside the modal.\r\n            // Triggering a form submission will give JS validation scripts a chance to check for errors.\r\n            modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\r\n            // We also catch the form submit event and use it to submit the form with ajax.\r\n            modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\r\n\r\n            this.modal = modal;\r\n\r\n            modal.show();\r\n        };\r\n\r\n        /**\r\n         * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\r\n         *\r\n         * @method submitForm\r\n         * @param {Event} e Form submission event.\r\n         * @private\r\n         */\r\n        AddPurpose.prototype.submitForm = function(e) {\r\n            e.preventDefault();\r\n            this.modal.getRoot().find('form').submit();\r\n        };\r\n\r\n        AddPurpose.prototype.submitFormAjax = function(e) {\r\n            // We don't want to do a real form submission.\r\n            e.preventDefault();\r\n\r\n            // Convert all the form elements values to a serialised string.\r\n            var formData = this.modal.getRoot().find('form').serialize();\r\n\r\n            Ajax.call([{\r\n                methodname: 'tool_dataprivacy_create_purpose_form',\r\n                args: {jsonformdata: JSON.stringify(formData)},\r\n                done: function(data) {\r\n                    if (data.validationerrors) {\r\n                        this.modal.setBody(this.getBody(formData));\r\n                    } else {\r\n                        this.close();\r\n                    }\r\n                }.bind(this),\r\n\r\n                fail: Notification.exception\r\n            }]);\r\n        };\r\n\r\n        AddPurpose.prototype.close = function() {\r\n            this.destroy();\r\n            document.location.reload();\r\n        };\r\n\r\n        AddPurpose.prototype.destroy = function() {\r\n            FormChangeChecker.resetAllFormDirtyStates();\r\n            this.modal.destroy();\r\n        };\r\n\r\n        AddPurpose.prototype.removeListeners = function() {\r\n            $(SELECTORS.PURPOSE_LINK).off('click');\r\n        };\r\n\r\n        return /** @alias module:tool_dataprivacy/add_purpose */ {\r\n            getInstance: function(contextId) {\r\n                return new AddPurpose(contextId);\r\n            }\r\n        };\r\n    }\r\n);\r\n"],"names":["define","$","Str","Ajax","Notification","ModalSaveCancel","ModalEvents","Fragment","FormChangeChecker","SELECTORS","AddPurpose","contextId","this","strings","get_strings","key","component","registerEventListeners","prototype","on","then","Promise","all","create","title","body","_ref","modal","string","setupFormModal","bind","catch","exception","getBody","formdata","params","jsonformdata","JSON","stringify","loadFragment","saveText","setLarge","setSaveButtonText","getRoot","hidden","destroy","setBody","save","submitForm","submitFormAjax","show","e","preventDefault","find","submit","formData","serialize","call","methodname","args","done","data","validationerrors","close","fail","document","location","reload","resetAllFormDirtyStates","removeListeners","off","getInstance"],"mappings":";;;;;;;AAsBAA,OAAO,+BAAA,CACH,SACA,WACA,YACA,oBACA,yBACA,oBACA,gBACA,4BACD,SACCC,EACAC,IACAC,KACAC,aACAC,gBACAC,YACAC,SACAC,mBAGI,IAAIC,uBACc,+BAGdC,WAAa,SAASC,WACtBC,KAAKD,UAAYA,UAYjBC,KAAKC,QAAUX,IAAIY,YAVF,CACb,CACIC,IAAK,aACLC,UAAW,oBAEf,CACID,IAAK,OACLC,UAAW,WAKnBJ,KAAKK,0BAwHT,OAjHAP,WAAWQ,UAAUP,UAAY,EAMjCD,WAAWQ,UAAUL,QAAU,EAE/BH,WAAWQ,UAAUD,uBAAyB,WAE5BhB,EAAEQ,wBACRU,GAAG,QAAS,WAChBP,KAAKC,QAAQO,KAAK,SAASP,SACvB,OAAOQ,QAAQC,IAAI,CACfjB,gBAAgBkB,OAAO,CACnBC,MAAOX,QAAQ,GACfY,KAAM,KAEVZ,QAAQ,KACTO,KAAK,SAAAM,MAA0B,IAAhBC,MAAOC,QAAOF,KAC5Bd,KAAKiB,eAAeF,MAAOC,OAC/B,EAAEE,KAAKlB,MACX,EAAEkB,KAAKlB,OACNmB,MAAM3B,aAAa4B,UACxB,EAAEF,KAAKlB,QAUXF,WAAWQ,UAAUe,QAAU,SAASC,UAEpC,IAAIC,OAAS,KAKb,YAJwB,IAAbD,WACPC,OAAS,CAACC,aAAcC,KAAKC,UAAUJ,YAGpC3B,SAASgC,aAAa,mBAAoB,kBAAmB3B,KAAKD,UAAWwB,SAGxFzB,WAAWQ,UAAUW,eAAiB,SAASF,MAAOa,UAClDb,MAAMc,WAENd,MAAMe,kBAAkBF,UAGxBb,MAAMgB,UAAUxB,GAAGb,YAAYsC,OAAQhC,KAAKiC,QAAQf,KAAKlB,OAEzDe,MAAMmB,QAAQlC,KAAKqB,WAInBN,MAAMgB,UAAUxB,GAAGb,YAAYyC,KAAMnC,KAAKoC,WAAWlB,KAAKlB,OAE1De,MAAMgB,UAAUxB,GAAG,SAAU,OAAQP,KAAKqC,eAAenB,KAAKlB,OAE9DA,KAAKe,MAAQA,MAEbA,MAAMuB,QAUVxC,WAAWQ,UAAU8B,WAAa,SAASG,GACvCA,EAAEC,iBACFxC,KAAKe,MAAMgB,UAAUU,KAAK,QAAQC,UAGtC5C,WAAWQ,UAAU+B,eAAiB,SAASE,GAE3CA,EAAEC,iBAGF,IAAIG,SAAW3C,KAAKe,MAAMgB,UAAUU,KAAK,QAAQG,YAEjDrD,KAAKsD,KAAK,CAAC,CACPC,WAAY,uCACZC,KAAM,CAACvB,aAAcC,KAAKC,UAAUiB,WACpCK,KAAM,SAASC,MACPA,KAAKC,iBACLlD,KAAKe,MAAMmB,QAAQlC,KAAKqB,QAAQsB,WAEhC3C,KAAKmD,OAEb,EAAEjC,KAAKlB,MAEPoD,KAAM5D,aAAa4B,cAI3BtB,WAAWQ,UAAU6C,MAAQ,WACzBnD,KAAKiC,UACLoB,SAASC,SAASC,UAGtBzD,WAAWQ,UAAU2B,QAAU,WAC3BrC,kBAAkB4D,0BAClBxD,KAAKe,MAAMkB,WAGfnC,WAAWQ,UAAUmD,gBAAkB,WACnCpE,EAAEQ,wBAAwB6D,IAAI,UAGuB,CACrDC,YAAa,SAAS5D,WAClB,OAAO,IAAID,WAAWC,UAC1B,EAER"}