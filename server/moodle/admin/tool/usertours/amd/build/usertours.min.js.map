{"version":3,"file":"usertours.min.js","sources":["../src/usertours.js"],"sourcesContent":["/**\r\n * User tour control library.\r\n *\r\n * @module     tool_usertours/usertours\r\n * @copyright  2016 Andrew Nicols <andrew@nicols.co.uk>\r\n */\r\nimport BootstrapTour from './tour';\r\nimport Templates from 'core/templates';\r\nimport log from 'core/log';\r\nimport notification from 'core/notification';\r\nimport * as tourRepository from './repository';\r\nimport Pending from 'core/pending';\r\nimport {eventTypes} from './events';\r\n\r\nlet currentTour = null;\r\nlet tourId = null;\r\nlet restartTourAndKeepProgress = false;\r\nlet currentStepNo = null;\r\n\r\n/**\r\n * Find the first matching tour.\r\n *\r\n * @param {object[]} tourDetails\r\n * @param {object[]} filters\r\n * @returns {null|object}\r\n */\r\nconst findMatchingTour = (tourDetails, filters) => {\r\n    return tourDetails.find(tour => filters.some(filter => {\r\n        if (filter && filter.filterMatches) {\r\n            return filter.filterMatches(tour);\r\n        }\r\n\r\n        return true;\r\n    }));\r\n};\r\n\r\n/**\r\n * Initialise the user tour for the current page.\r\n *\r\n * @method  init\r\n * @param   {Array}    tourDetails      The matching tours for this page.\r\n * @param   {Array}    filters          The names of all client side filters.\r\n */\r\nexport const init = async(tourDetails, filters) => {\r\n    const requirements = [];\r\n    filters.forEach((filter) => {\r\n        requirements.push(import(filter));\r\n    });\r\n\r\n    const filterPlugins = await Promise.all(requirements);\r\n\r\n    const matchingTour = findMatchingTour(tourDetails, filterPlugins);\r\n    if (!matchingTour) {\r\n        return;\r\n    }\r\n\r\n    // Only one tour per page is allowed.\r\n    tourId = matchingTour.tourId;\r\n\r\n    let startTour = matchingTour.startTour;\r\n    if (typeof startTour === 'undefined') {\r\n        startTour = true;\r\n    }\r\n\r\n    if (startTour) {\r\n        // Fetch the tour configuration.\r\n        fetchTour(tourId);\r\n    }\r\n\r\n    addResetLink();\r\n\r\n    // Watch for the reset link.\r\n    document.querySelector('body').addEventListener('click', e => {\r\n        const resetLink = e.target.closest('#resetpagetour');\r\n        if (resetLink) {\r\n            e.preventDefault();\r\n            resetTourState(tourId);\r\n        }\r\n    });\r\n\r\n    // Watch for the resize event.\r\n    window.addEventListener(\"resize\", () => {\r\n        // Only listen for the running tour.\r\n        if (currentTour && currentTour.tourRunning) {\r\n            clearTimeout(window.resizedFinished);\r\n            window.resizedFinished = setTimeout(() => {\r\n                // Wait until the resize event has finished.\r\n                currentStepNo = currentTour.getCurrentStepNumber();\r\n                restartTourAndKeepProgress = true;\r\n                resetTourState(tourId);\r\n            }, 250);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch the configuration specified tour, and start the tour when it has been fetched.\r\n *\r\n * @method  fetchTour\r\n * @param   {Number}    tourId      The ID of the tour to start.\r\n */\r\nconst fetchTour = async tourId => {\r\n    const pendingPromise = new Pending(`admin_usertour_fetchTour:${tourId}`);\r\n\r\n    try {\r\n        // If we don't have any tour config (because it doesn't need showing for the current user), return early.\r\n        const response = await tourRepository.fetchTour(tourId);\r\n        if (response.hasOwnProperty('tourconfig')) {\r\n            const {html} = await Templates.renderForPromise('tool_usertours/tourstep', response.tourconfig);\r\n            startBootstrapTour(tourId, html, response.tourconfig);\r\n        }\r\n        pendingPromise.resolve();\r\n    } catch (error) {\r\n        pendingPromise.resolve();\r\n        notification.exception(error);\r\n    }\r\n};\r\n\r\nconst getPreferredResetLocation = () => {\r\n    let location = document.querySelector('.tool_usertours-resettourcontainer');\r\n    if (location) {\r\n        return location;\r\n    }\r\n\r\n    location = document.querySelector('.logininfo');\r\n    if (location) {\r\n        return location;\r\n    }\r\n\r\n    location = document.querySelector('footer');\r\n    if (location) {\r\n        return location;\r\n    }\r\n\r\n    return document.body;\r\n};\r\n\r\n/**\r\n * Add a reset link to the page.\r\n *\r\n * @method  addResetLink\r\n */\r\nconst addResetLink = () => {\r\n    const pendingPromise = new Pending('admin_usertour_addResetLink');\r\n\r\n    Templates.render('tool_usertours/resettour', {})\r\n    .then(function(html, js) {\r\n        // Append the link to the most suitable place on the page with fallback to legacy selectors and finally the body if\r\n        // there is no better place.\r\n        Templates.appendNodeContents(getPreferredResetLocation(), html, js);\r\n\r\n        return;\r\n    })\r\n    .catch()\r\n    .then(pendingPromise.resolve)\r\n    .catch();\r\n};\r\n\r\n/**\r\n * Start the specified tour.\r\n *\r\n * @method  startBootstrapTour\r\n * @param   {Number}    tourId      The ID of the tour to start.\r\n * @param   {String}    template    The template to use.\r\n * @param   {Object}    tourConfig  The tour configuration.\r\n * @return  {Object}\r\n */\r\nconst startBootstrapTour = (tourId, template, tourConfig) => {\r\n    if (currentTour && currentTour.tourRunning) {\r\n        // End the current tour.\r\n        currentTour.endTour();\r\n        currentTour = null;\r\n    }\r\n\r\n    document.addEventListener(eventTypes.tourEnded, markTourComplete);\r\n    document.addEventListener(eventTypes.stepRenderer, markStepShown);\r\n\r\n    // Sort out the tour name.\r\n    tourConfig.tourName = tourConfig.name;\r\n    delete tourConfig.name;\r\n\r\n    // Add the template to the configuration.\r\n    // This enables translations of the buttons.\r\n    tourConfig.template = template;\r\n\r\n    tourConfig.steps = tourConfig.steps.map(function(step) {\r\n        if (typeof step.element !== 'undefined') {\r\n            step.target = step.element;\r\n            delete step.element;\r\n        }\r\n\r\n        if (typeof step.reflex !== 'undefined') {\r\n            step.moveOnClick = !!step.reflex;\r\n            delete step.reflex;\r\n        }\r\n\r\n        if (typeof step.content !== 'undefined') {\r\n            step.body = step.content;\r\n            delete step.content;\r\n        }\r\n\r\n        return step;\r\n    });\r\n\r\n    currentTour = new BootstrapTour(tourConfig);\r\n    let startAt = 0;\r\n    if (restartTourAndKeepProgress && currentStepNo) {\r\n        startAt = currentStepNo;\r\n        restartTourAndKeepProgress = false;\r\n        currentStepNo = null;\r\n    }\r\n    return currentTour.startTour(startAt);\r\n};\r\n\r\n/**\r\n * Mark the specified step as being shownd by the user.\r\n *\r\n * @method  markStepShown\r\n * @param   {Event} e\r\n */\r\nconst markStepShown = e => {\r\n    const tour = e.detail.tour;\r\n    const stepConfig = tour.getStepConfig(tour.getCurrentStepNumber());\r\n    tourRepository.markStepShown(\r\n        stepConfig.stepid,\r\n        tourId,\r\n        tour.getCurrentStepNumber()\r\n    ).catch(log.error);\r\n};\r\n\r\n/**\r\n * Mark the specified tour as being completed by the user.\r\n *\r\n * @method  markTourComplete\r\n * @param   {Event} e\r\n * @listens tool_usertours/stepRendered\r\n */\r\nconst markTourComplete = e => {\r\n    document.removeEventListener(eventTypes.tourEnded, markTourComplete);\r\n    document.removeEventListener(eventTypes.stepRenderer, markStepShown);\r\n\r\n    const tour = e.detail.tour;\r\n    const stepConfig = tour.getStepConfig(tour.getCurrentStepNumber());\r\n    tourRepository.markTourComplete(\r\n        stepConfig.stepid,\r\n        tourId,\r\n        tour.getCurrentStepNumber()\r\n    ).catch(log.error);\r\n};\r\n\r\n/**\r\n * Reset the state, and restart the the tour on the current page.\r\n *\r\n * @method  resetTourState\r\n * @param   {Number}    tourId      The ID of the tour to start.\r\n * @returns {Promise}\r\n */\r\nexport const resetTourState = tourId => tourRepository.resetTourState(tourId)\r\n.then(response => {\r\n    if (response.startTour) {\r\n        fetchTour(response.startTour);\r\n    }\r\n    return;\r\n}).catch(notification.exception);\r\n"],"names":["_tour","_interopRequireDefault","_templates","_log","_notification","tourRepository","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_pending","_systemImportTransformerGlobalIdentifier","window","self","global","WeakMap","currentTour","tourId","restartTourAndKeepProgress","currentStepNo","_exports","init","async","tourDetails","filters","requirements","forEach","filter","push","define","amd","Promise","resolve","reject","require","module","exports","component","loader","matchingTour","findMatchingTour","find","tour","some","filterMatches","all","startTour","fetchTour","addResetLink","document","querySelector","addEventListener","target","closest","preventDefault","resetTourState","tourRunning","clearTimeout","resizedFinished","setTimeout","getCurrentStepNumber","pendingPromise","Pending","response","html","Templates","renderForPromise","tourconfig","startBootstrapTour","error","notification","exception","render","then","js","appendNodeContents","getPreferredResetLocation","location","body","catch","template","tourConfig","endTour","eventTypes","tourEnded","markTourComplete","stepRenderer","markStepShown","tourName","name","steps","map","step","element","reflex","moveOnClick","content","BootstrapTour","startAt","detail","stepConfig","getStepConfig","stepid","log","removeEventListener"],"mappings":"6UAMAA,MAAAC,uBAAAD,OACAE,WAAAD,uBAAAC,YACAC,KAAAF,uBAAAE,MACAC,cAAAH,uBAAAG,eACAC,eACmC,SAAAC,EAAAC,GAAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAAF,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAG,MAAAA,CAAAA,QAAAH,GAAAI,IAAAA,EAAAC,yBAAAJ,GAAA,GAAAG,GAAAA,EAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAd,EAAAc,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAhB,EAAAc,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAb,EAAAc,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAd,EAAAc,GAAAN,OAAAA,EAAAL,QAAAH,EAAAI,GAAAA,EAAAc,IAAAlB,EAAAQ,GAAAA,CAAA,CADnCW,CAAApB,gBACAqB,SAAAzB,uBAAAyB,UAAmC,IAAAC,yCAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,CAAA,EAAA,SAAAnB,yBAAAL,GAAA,GAAA,mBAAAyB,QAAA,OAAA,KAAA,IAAAxB,EAAAwB,IAAAA,QAAArB,EAAAqB,IAAAA,eAAApB,yBAAA,SAAAL,GAAAA,OAAAA,EAAAI,EAAAH,IAAAD,EAAA,CAAA,SAAAL,uBAAAK,GAAAA,OAAAA,GAAAA,EAAAE,WAAAF,EAAAG,CAAAA,QAAAH,EAAA,CAGnC,IAAI0B,YAAc,KACdC,OAAS,KACTC,4BAA6B,EAC7BC,cAAgB,KA4ElBC,SAAAC,KAlDkBC,MAAMC,YAAaC,WACnC,MAAMC,aAAe,GACrBD,QAAQE,SAASC,SACbF,aAAaG,KAAIjB,mBAAAA,yCAAAkB,QAAAlB,yCAAAkB,OAAAC,IAAA,IAAAC,SAAAC,SAAAA,QAAAC,QAAAtB,yCAAAuB,QAAA,CAAQP,QAAMK,QAAAC,OAAA,IAAAE,oBAAAA,QAAAA,OAAAC,SAAAD,oBAAAD,SAAAC,oBAAAA,QAAAA,OAAAE,WAAA1B,yCAAAuB,SAAAH,cAAApB,yCAAAuB,QAAAI,OAAAP,QAAAC,QAAAE,QAAA,SAAAH,QAAAC,QAAArB,yCAANgB,SAAQ,IAGrC,MAEMY,aAzBeC,EAACjB,YAAaC,UAC5BD,YAAYkB,MAAKC,MAAQlB,QAAQmB,MAAKhB,SACrCA,SAAUA,OAAOiB,eACVjB,OAAOiB,cAAcF,UAsBfF,CAAiBjB,kBAFVQ,QAAQc,IAAIpB,eAGxC,IAAKc,aACD,OAIJtB,OAASsB,aAAatB,OAEtB,IAAI6B,UAAYP,aAAaO,eACJ,IAAdA,YACPA,WAAY,GAGZA,WAEAC,UAAU9B,QAGd+B,eAGAC,SAASC,cAAc,QAAQC,iBAAiB,SAAS7D,IACnCA,EAAE8D,OAAOC,QAAQ,oBAE/B/D,EAAEgE,iBACFC,eAAetC,QACnB,IAIJL,OAAOuC,iBAAiB,UAAU,KAE1BnC,aAAeA,YAAYwC,cAC3BC,aAAa7C,OAAO8C,iBACpB9C,OAAO8C,gBAAkBC,YAAW,KAEhCxC,cAAgBH,YAAY4C,uBAC5B1C,4BAA6B,EAC7BqC,eAAetC,OAAO,GACvB,KACP,GACF,EASN,MAAM8B,UAAYzB,eACd,MAAMuC,eAAiB,IAAIC,SAAAA,QAAQ,4BAA4B7C,UAE/D,IAEI,MAAM8C,eAAiB1E,eAAe0D,UAAU9B,QAChD,GAAI8C,SAAS1D,eAAe,cAAe,CACvC,MAAM2D,KAACA,YAAcC,WAAAA,QAAUC,iBAAiB,0BAA2BH,SAASI,YACpFC,mBAAmBnD,OAAQ+C,KAAMD,SAASI,WAC9C,CACAN,eAAe7B,SAClB,CAAC,MAAOqC,OACLR,eAAe7B,UACfsC,cAAAA,QAAaC,UAAUF,MAC3B,GA2BErB,aAAeA,KACjB,MAAMa,eAAiB,IAAIC,SAAOrE,QAAC,+BAEnCwE,WAAAA,QAAUO,OAAO,2BAA4B,CAAE,GAC9CC,MAAK,SAAST,KAAMU,IAGjBT,WAASxE,QAACkF,mBA/BgBC,MAC9B,IAAIC,SAAW5B,SAASC,cAAc,sCACtC,OAAI2B,WAIJA,SAAW5B,SAASC,cAAc,cAC9B2B,WAIJA,SAAW5B,SAASC,cAAc,UAC9B2B,UAIG5B,SAAS6B,MAAI,EAeaF,GAA6BZ,KAAMU,GAGpE,IACCK,QACAN,KAAKZ,eAAe7B,SACpB+C,OAAO,EAYNX,mBAAqBA,CAACnD,OAAQ+D,SAAUC,cACtCjE,aAAeA,YAAYwC,cAE3BxC,YAAYkE,UACZlE,YAAc,MAGlBiC,SAASE,iBAAiBgC,QAAAA,WAAWC,UAAWC,kBAChDpC,SAASE,iBAAiBgC,QAAAA,WAAWG,aAAcC,eAGnDN,WAAWO,SAAWP,WAAWQ,YAC1BR,WAAWQ,KAIlBR,WAAWD,SAAWA,SAEtBC,WAAWS,MAAQT,WAAWS,MAAMC,KAAI,SAASC,MAgB7C,YAf4B,IAAjBA,KAAKC,UACZD,KAAKxC,OAASwC,KAAKC,eACZD,KAAKC,cAGW,IAAhBD,KAAKE,SACZF,KAAKG,cAAgBH,KAAKE,cACnBF,KAAKE,aAGY,IAAjBF,KAAKI,UACZJ,KAAKd,KAAOc,KAAKI,eACVJ,KAAKI,SAGTJ,IACX,IAEA5E,YAAc,IAAIiF,MAAaxG,QAACwF,YAChC,IAAIiB,QAAU,EAMd,OALIhF,4BAA8BC,gBAC9B+E,QAAU/E,cACVD,4BAA6B,EAC7BC,cAAgB,MAEbH,YAAY8B,UAAUoD,QAAQ,EASnCX,cAAgBjG,IAClB,MAAMoD,KAAOpD,EAAE6G,OAAOzD,KAChB0D,WAAa1D,KAAK2D,cAAc3D,KAAKkB,wBAC3CvE,eAAekG,cACXa,WAAWE,OACXrF,OACAyB,KAAKkB,wBACPmB,MAAMwB,KAAAA,QAAIlC,MAAM,EAUhBgB,iBAAmB/F,IACrB2D,SAASuD,oBAAoBrB,QAAAA,WAAWC,UAAWC,kBACnDpC,SAASuD,oBAAoBrB,QAAAA,WAAWG,aAAcC,eAEtD,MAAM7C,KAAOpD,EAAE6G,OAAOzD,KAChB0D,WAAa1D,KAAK2D,cAAc3D,KAAKkB,wBAC3CvE,eAAegG,iBACXe,WAAWE,OACXrF,OACAyB,KAAKkB,wBACPmB,MAAMwB,KAAAA,QAAIlC,MAAM,EAUTd,eAAiBtC,QAAU5B,eAAekE,eAAetC,QACrEwD,MAAKV,WACEA,SAASjB,WACTC,UAAUgB,SAASjB,UAEvB,IACDiC,MAAMT,cAAY7E,QAAC8E,WAAWnD,SAAAmC,eAAAA,cAAA"}