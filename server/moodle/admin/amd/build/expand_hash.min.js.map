{"version":3,"file":"expand_hash.min.js","sources":["../src/expand_hash.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Expand the collapse section element.\r\n *\r\n * @module      core_admin/expand_hash\r\n * @copyright   Meirza <meirza.arson@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since       4.5\r\n */\r\n\r\nconst SELECTORS = {\r\n    COLLAPSE_ELEMENTS: '[data-toggle=\"collapse\"]',\r\n    FOCUSTHENEXPAND_ELEMENTS: '.focus-expand',\r\n};\r\n\r\n/**\r\n * Initializes the focus and expand functionality.\r\n */\r\nexport const init = () => {\r\n    // Select all collapsible elements only.\r\n    const focusexpand = document.querySelector(SELECTORS.FOCUSTHENEXPAND_ELEMENTS);\r\n\r\n    // Add click event listener to the anchor element\r\n    focusexpand?.addEventListener('click', () => {\r\n        expandSection(`${focusexpand.getAttribute('href')}`);\r\n    });\r\n};\r\n\r\n/**\r\n * Expands a section based on the provided URL hash.\r\n *\r\n * This function takes a hash string, finds the corresponding element in the DOM,\r\n * and expands it if it is currently collapsed. It updates the necessary ARIA\r\n * attributes and classes to reflect the expanded state.\r\n *\r\n * @param {string} hash - The hash (e.g., '#elementId') of the element to expand.\r\n */\r\nexport const expandSection = (hash) => {\r\n    const container = document.querySelector(hash);\r\n    const targetContainer = container?.querySelector(SELECTORS.COLLAPSE_ELEMENTS);\r\n\r\n    if (targetContainer?.getAttribute('aria-expanded') === 'false') {\r\n        const collapseId = targetContainer.getAttribute('aria-controls');\r\n        const collapseContainer = document.getElementById(collapseId);\r\n\r\n        // Show the content.\r\n        collapseContainer.classList.remove('collapse');\r\n        collapseContainer.classList.add('show');\r\n\r\n        // Update aria-expanded attribute to reflect the new state.\r\n        targetContainer.setAttribute('aria-expanded', 'true');\r\n        targetContainer.classList.remove('collapsed');\r\n\r\n        // Get collapse expand menu element.\r\n        const collapseElement = document.querySelector('.collapseexpand.collapsemenu');\r\n        // Ensure it gets noticed to make it work.\r\n        collapseElement.setAttribute('aria-expanded', 'true');\r\n        collapseElement.classList.remove('collapsed');\r\n    }\r\n};\r\n"],"names":["SELECTORS","_exports","init","focusexpand","document","querySelector","addEventListener","expandSection","getAttribute","hash","container","targetContainer","collapseId","collapseContainer","getElementById","classList","remove","add","setAttribute","collapseElement"],"mappings":";;;;;;;;;AAwBA,MAAMA,4BACiB,2BADjBA,mCAEwB,gBAc5BC,SAAAC,KARkBA,KAEhB,MAAMC,YAAcC,SAASC,cAAcL,oCAG3CG,aAAaG,iBAAiB,SAAS,KACnCC,cAAc,GAAGJ,YAAYK,aAAa,UAAU,GACtD,EAYC,MAAMD,cAAiBE,OAC1B,MAAMC,UAAYN,SAASC,cAAcI,MACnCE,gBAAkBD,WAAWL,cAAcL,6BAEjD,GAAuD,UAAnDW,iBAAiBH,aAAa,iBAA8B,CAC5D,MAAMI,WAAaD,gBAAgBH,aAAa,iBAC1CK,kBAAoBT,SAASU,eAAeF,YAGlDC,kBAAkBE,UAAUC,OAAO,YACnCH,kBAAkBE,UAAUE,IAAI,QAGhCN,gBAAgBO,aAAa,gBAAiB,QAC9CP,gBAAgBI,UAAUC,OAAO,aAGjC,MAAMG,gBAAkBf,SAASC,cAAc,gCAE/Cc,gBAAgBD,aAAa,gBAAiB,QAC9CC,gBAAgBJ,UAAUC,OAAO,YACrC,GACFf,SAAAM,cAAAA,aAAA"}