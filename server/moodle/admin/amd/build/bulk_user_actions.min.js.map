{"version":3,"file":"bulk_user_actions.min.js","sources":["../src/bulk_user_actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Add bulk actions to the users list report\r\n *\r\n * @module     core_admin/bulk_user_actions\r\n * @copyright  2024 Marina Glancy\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\r\nimport * as tableEvents from 'core_table/local/dynamic/events';\r\nimport * as FormChangeChecker from 'core_form/changechecker';\r\nimport * as CustomEvents from 'core/custom_interaction_events';\r\nimport jQuery from 'jquery';\r\n\r\nconst Selectors = {\r\n    bulkActionsForm: 'form#user-bulk-action-form',\r\n    userReportWrapper: '[data-region=\"report-user-list-wrapper\"]',\r\n    checkbox: 'input[type=\"checkbox\"][data-togglegroup=\"report-select-all\"][data-toggle=\"slave\"]',\r\n    masterCheckbox: 'input[type=\"checkbox\"][data-togglegroup=\"report-select-all\"][data-toggle=\"master\"]',\r\n    checkedRows: '[data-togglegroup=\"report-select-all\"][data-toggle=\"slave\"]:checked',\r\n};\r\n\r\n/**\r\n * Initialise module\r\n */\r\nexport const init = () => {\r\n\r\n    const userBulkForm = document.querySelector(Selectors.bulkActionsForm);\r\n    const userReport = userBulkForm?.closest(Selectors.userReportWrapper)?.querySelector(reportSelectors.regions.report);\r\n    if (!userBulkForm || !userReport) {\r\n        return;\r\n    }\r\n    const actionSelect = userBulkForm.querySelector('select');\r\n    CustomEvents.define(actionSelect, [CustomEvents.events.accessibleChange]);\r\n\r\n    jQuery(actionSelect).on(CustomEvents.events.accessibleChange, event => {\r\n        if (event.target.value && `${event.target.value}` !== \"0\") {\r\n            const e = new Event('submit', {cancelable: true});\r\n            userBulkForm.dispatchEvent(e);\r\n            if (!e.defaultPrevented) {\r\n                FormChangeChecker.markFormSubmitted(userBulkForm);\r\n                userBulkForm.submit();\r\n            }\r\n        }\r\n    });\r\n\r\n    // Every time the checkboxes in the report are changed, update the list of users in the form values\r\n    // and enable/disable the action select.\r\n    const updateUserIds = () => {\r\n        const selectedUsers = [...userReport.querySelectorAll(Selectors.checkedRows)];\r\n        const selectedUserIds = selectedUsers.map(check => parseInt(check.value));\r\n        userBulkForm.querySelector('[name=\"userids\"]').value = selectedUserIds.join(',');\r\n\r\n        // Disable the action selector if nothing selected, and reset the current selection.\r\n        actionSelect.disabled = selectedUsers.length === 0;\r\n        if (actionSelect.disabled) {\r\n            actionSelect.value = \"0\";\r\n        }\r\n\r\n        const selectedUsersNames = selectedUsers.map(check => document.querySelector(`label[for=\"${check.id}\"]`).textContent);\r\n        // Add the user ids and names to the form data attributes so they can be available from the\r\n        // other JS modules that listen to the form submit event.\r\n        userBulkForm.data = {userids: selectedUserIds, usernames: selectedUsersNames};\r\n    };\r\n\r\n    updateUserIds();\r\n\r\n    document.addEventListener('change', event => {\r\n        // When checkboxes are checked next to individual users or the master toggle (Select all/none).\r\n        if ((event.target.matches(Selectors.checkbox) || event.target.matches(Selectors.masterCheckbox))\r\n                && userReport.contains(event.target)) {\r\n            updateUserIds();\r\n        }\r\n    });\r\n\r\n    document.addEventListener(tableEvents.tableContentRefreshed, event => {\r\n        // When the report contents is updated (i.e. page is changed, filters applied, etc).\r\n        if (userReport.contains(event.target)) {\r\n            updateUserIds();\r\n        }\r\n    });\r\n};\r\n"],"names":["e","_getRequireWildcardCache","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","reportSelectors","tableEvents","FormChangeChecker","CustomEvents","_jquery","Selectors","_exports","init","userBulkForm","document","querySelector","userReport","closest","regions","report","actionSelect","define","events","accessibleChange","jQuery","on","event","target","value","Event","cancelable","dispatchEvent","defaultPrevented","markFormSubmitted","submit","updateUserIds","selectedUsers","querySelectorAll","selectedUserIds","map","check","parseInt","join","disabled","length","selectedUsersNames","id","textContent","data","userids","usernames","addEventListener","matches","contains","tableContentRefreshed"],"mappings":"oRA2B4B,IAAAA,EAAA,SAAAC,yBAAAD,GAAA,GAAA,mBAAAE,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAD,yBAAA,SAAAD,GAAAA,OAAAA,EAAAI,EAAAD,IAAAH,EAAA,CAAA,SAAAK,wBAAAL,EAAAG,GAAAA,IAAAA,GAAAH,GAAAA,EAAAM,WAAAN,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAO,MAAAA,CAAAA,QAAAP,GAAAI,IAAAA,EAAAH,yBAAAE,GAAA,GAAAC,GAAAA,EAAAI,IAAAR,GAAA,OAAAI,EAAAK,IAAAT,GAAA,IAAAU,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAhB,EAAAgB,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAlB,EAAAgB,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAf,EAAAgB,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAhB,EAAAgB,GAAAN,OAAAA,EAAAH,QAAAP,EAAAI,GAAAA,EAAAgB,IAAApB,EAAAU,GAAAA;;;;;;;KAAA,8EAJ5BW,gBAAAhB,wBAAAgB,iBACAC,YAAAjB,wBAAAiB,aACAC,kBAAAlB,wBAAAkB,mBACAC,aAAAnB,wBAAAmB,cACAC,SAA4BzB,EAA5ByB,UAA4BzB,EAAAM,WAAAN,EAAAO,CAAAA,QAAAP,GAE5B,MAAM0B,0BACe,6BADfA,4BAEiB,2CAFjBA,mBAGQ,oFAHRA,yBAIc,qFAJdA,sBAKW,sEA8DfC,SAAAC,KAxDkBA,KAEhB,MAAMC,aAAeC,SAASC,cAAcL,2BACtCM,WAAaH,cAAcI,QAAQP,8BAA8BK,cAAcV,gBAAgBa,QAAQC,QAC7G,IAAKN,eAAiBG,WAClB,OAEJ,MAAMI,aAAeP,aAAaE,cAAc,UAChDP,aAAaa,OAAOD,aAAc,CAACZ,aAAac,OAAOC,oBAEvD,EAAAC,QAAMjC,SAAC6B,cAAcK,GAAGjB,aAAac,OAAOC,kBAAkBG,QAC1D,GAAIA,MAAMC,OAAOC,OAAqC,KAA5B,GAAGF,MAAMC,OAAOC,QAAiB,CACvD,MAAM5C,EAAI,IAAI6C,MAAM,SAAU,CAACC,YAAY,IAC3CjB,aAAakB,cAAc/C,GACtBA,EAAEgD,mBACHzB,kBAAkB0B,kBAAkBpB,cACpCA,aAAaqB,SAErB,KAKJ,MAAMC,cAAgBA,KAClB,MAAMC,cAAgB,IAAIpB,WAAWqB,iBAAiB3B,wBAChD4B,gBAAkBF,cAAcG,KAAIC,OAASC,SAASD,MAAMZ,SAClEf,aAAaE,cAAc,oBAAoBa,MAAQU,gBAAgBI,KAAK,KAG5EtB,aAAauB,SAAoC,IAAzBP,cAAcQ,OAClCxB,aAAauB,WACbvB,aAAaQ,MAAQ,KAGzB,MAAMiB,mBAAqBT,cAAcG,KAAIC,OAAS1B,SAASC,cAAc,cAAcyB,MAAMM,QAAQC,cAGzGlC,aAAamC,KAAO,CAACC,QAASX,gBAAiBY,UAAWL,mBAAmB,EAGjFV,gBAEArB,SAASqC,iBAAiB,UAAUzB,SAE3BA,MAAMC,OAAOyB,QAAQ1C,qBAAuBgB,MAAMC,OAAOyB,QAAQ1C,4BAC3DM,WAAWqC,SAAS3B,MAAMC,SACjCQ,eACJ,IAGJrB,SAASqC,iBAAiB7C,YAAYgD,uBAAuB5B,QAErDV,WAAWqC,SAAS3B,MAAMC,SAC1BQ,eACJ,GACF,CACJ"}