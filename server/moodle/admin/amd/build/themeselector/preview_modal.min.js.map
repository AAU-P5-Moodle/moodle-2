{"version":3,"file":"preview_modal.min.js","sources":["../../src/themeselector/preview_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Modal for theme previews.\r\n *\r\n * @module     core_admin/themeselector/preview_modal\r\n * @copyright  2023 David Woloszyn <david.woloszyn@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport ModalEvents from 'core/modal_events';\r\nimport ModalCancel from 'core/modal_cancel';\r\nimport ModalSaveCancel from 'core/modal_save_cancel';\r\nimport Notification from 'core/notification';\r\nimport Templates from 'core/templates';\r\nimport {getString} from 'core/str';\r\n\r\nconst SELECTORS = {\r\n    THEMES_CONTAINER: 'themelist',\r\n    PREVIEW: '[data-action=\"preview\"]',\r\n};\r\n\r\n/**\r\n * Entrypoint of the js.\r\n *\r\n * @method init\r\n */\r\nexport const init = () => {\r\n    registerListenerEvents();\r\n};\r\n\r\n/**\r\n * Register theme related event listeners.\r\n *\r\n * @method registerListenerEvents\r\n */\r\nconst registerListenerEvents = () => {\r\n    document.addEventListener('click', (e) => {\r\n        const preview = e.target.closest(SELECTORS.PREVIEW);\r\n        if (preview) {\r\n            buildModal(preview).catch(Notification.exception);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Build the modal with the provided data.\r\n *\r\n * @method buildModal\r\n * @param {object} element\r\n */\r\nconst buildModal = async(element) => {\r\n\r\n    // This string can be long. We will fetch it with JS as opposed to passing it as an attribute.\r\n    let description = await getString('choosereadme', 'theme_' + element.getAttribute('data-choose'));\r\n\r\n    const themesContainer = document.getElementById(SELECTORS.THEMES_CONTAINER);\r\n    const definedInConfig = parseInt(themesContainer.dataset.definedinconfig);\r\n    // Prepare data for modal.\r\n    const data = {\r\n        name: element.getAttribute('data-name'),\r\n        image: element.getAttribute('data-image'),\r\n        description: description.replace(/<[^>]+>/g, ' '), // Strip out HTML tags.\r\n        current: element.getAttribute('data-current'),\r\n        actionurl: element.getAttribute('data-actionurl'),\r\n        choose: element.getAttribute('data-choose'),\r\n        sesskey: element.getAttribute('data-sesskey'),\r\n        definedinconfig: definedInConfig,\r\n    };\r\n\r\n    // Determine which modal template we should use.\r\n    let modalTemplate = ModalSaveCancel;\r\n    if (data.current || data.definedinconfig) {\r\n        modalTemplate = ModalCancel;\r\n    }\r\n\r\n    const modal = await modalTemplate.create({\r\n        title: data.name,\r\n        body: Templates.render('core_admin/themeselector/theme_preview_modal', data),\r\n        large: true,\r\n        buttons: {\r\n            'save': getString('selecttheme', 'moodle'),\r\n            'cancel': getString('closebuttontitle', 'moodle'),\r\n        },\r\n        show: true,\r\n    });\r\n\r\n    modal.getRoot().on(ModalEvents.save, () => {\r\n        modal.getRoot().find('form').submit();\r\n    });\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_modal_events","_modal_cancel","_modal_save_cancel","_notification","_templates","SELECTORS","_exports","init","registerListenerEvents","document","addEventListener","preview","target","closest","buildModal","catch","Notification","exception","async","description","getString","element","getAttribute","themesContainer","getElementById","definedInConfig","parseInt","dataset","definedinconfig","data","name","image","replace","current","actionurl","choose","sesskey","modalTemplate","ModalSaveCancel","ModalCancel","modal","create","title","body","Templates","render","large","buttons","save","cancel","show","getRoot","on","ModalEvents","find","submit"],"mappings":"8QA2BuC,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;kFAJvCG,cAAAJ,uBAAAI,eACAC,cAAAL,uBAAAK,eACAC,mBAAAN,uBAAAM,oBACAC,cAAAP,uBAAAO,eACAC,WAAAR,uBAAAQ,YAGA,MAAMC,2BACgB,YADhBA,kBAEO,0BAUXC,SAAAC,KAFkBA,KAChBC,wBAAwB,EAQ5B,MAAMA,uBAAyBA,KAC3BC,SAASC,iBAAiB,SAAUb,IAChC,MAAMc,QAAUd,EAAEe,OAAOC,QAAQR,mBAC7BM,SACAG,WAAWH,SAASI,MAAMC,cAAAA,QAAaC,UAC3C,GACF,EASAH,WAAaI,gBAGf,IAAIC,kBAAoB,EAAAC,KAAAA,WAAU,eAAgB,SAAWC,QAAQC,aAAa,gBAElF,MAAMC,gBAAkBd,SAASe,eAAenB,4BAC1CoB,gBAAkBC,SAASH,gBAAgBI,QAAQC,iBAEnDC,KAAO,CACTC,KAAMT,QAAQC,aAAa,aAC3BS,MAAOV,QAAQC,aAAa,cAC5BH,YAAaA,YAAYa,QAAQ,WAAY,KAC7CC,QAASZ,QAAQC,aAAa,gBAC9BY,UAAWb,QAAQC,aAAa,kBAChCa,OAAQd,QAAQC,aAAa,eAC7Bc,QAASf,QAAQC,aAAa,gBAC9BM,gBAAiBH,iBAIrB,IAAIY,cAAgBC,mBAAevC,SAC/B8B,KAAKI,SAAWJ,KAAKD,mBACrBS,cAAgBE,cAAWxC,SAG/B,MAAMyC,YAAcH,cAAcI,OAAO,CACrCC,MAAOb,KAAKC,KACZa,KAAMC,mBAAUC,OAAO,+CAAgDhB,MACvEiB,OAAO,EACPC,QAAS,CACLC,MAAQ,EAAA5B,KAAAA,WAAU,cAAe,UACjC6B,QAAU,EAAA7B,KAAAA,WAAU,mBAAoB,WAE5C8B,MAAM,IAGVV,MAAMW,UAAUC,GAAGC,cAAWtD,QAACiD,MAAM,KACjCR,MAAMW,UAAUG,KAAK,QAAQC,QAAQ,GACvC,CACJ"}