{"version":3,"file":"schema_backup_form.min.js","sources":["../src/schema_backup_form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Schema selector javascript controls.\r\n *\r\n * This module controls:\r\n * - The select all feature.\r\n * - Disabling activities checkboxes when the section is not selected.\r\n *\r\n * @module     core_backup/schema_backup_form\r\n * @copyright  2024 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Notification from 'core/notification';\r\nimport * as Templates from 'core/templates';\r\n\r\nconst Selectors = {\r\n    action: '[data-mdl-action]',\r\n    checkboxes: '#id_coursesettings input[type=\"checkbox\"]',\r\n    firstSection: 'fieldset#id_coursesettings .fcontainer .grouped_settings.section_level',\r\n    modCheckboxes: (modName) => `setting_activity_${modName}_`,\r\n};\r\n\r\nconst Suffixes = {\r\n    userData: '_userdata',\r\n    userInfo: '_userinfo',\r\n    included: '_included',\r\n};\r\n\r\n/**\r\n * Adds select all/none links to the top of the backup/restore/import schema page.\r\n */\r\nexport default class BackupFormController {\r\n\r\n    /**\r\n     * Static module init method.\r\n     * @param {Array<string>} modNames - The names of the modules.\r\n     * @returns {BackupFormController}\r\n     */\r\n    static init(modNames) {\r\n        return new BackupFormController(modNames);\r\n    }\r\n\r\n    /**\r\n     * Creates a new instance of the SchemaBackupForm class.\r\n     * @param {Array<string>} modNames - The names of the modules.\r\n     */\r\n    constructor(modNames) {\r\n        this.modNames = modNames;\r\n        this.scanFormUserData();\r\n        this.addSelectorsToPage();\r\n    }\r\n\r\n    /**\r\n     * Detect the user data attribute from the form.\r\n     *\r\n     * @private\r\n     */\r\n    scanFormUserData() {\r\n        this.withuserdata = false;\r\n        this.userDataSuffix = Suffixes.userData;\r\n\r\n        const checkboxes = document.querySelectorAll(Selectors.checkboxes);\r\n        if (!checkboxes) {\r\n            return;\r\n        }\r\n        // Depending on the form, user data inclusion is called userinfo or userdata.\r\n        for (const checkbox of checkboxes) {\r\n            const name = checkbox.name;\r\n            if (name.endsWith(Suffixes.userData)) {\r\n                this.withuserdata = true;\r\n                break;\r\n            } else if (name.endsWith(Suffixes.userInfo)) {\r\n                this.withuserdata = true;\r\n                this.userDataSuffix = Suffixes.userInfo;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes all related events.\r\n     *\r\n     * @private\r\n     * @param {HTMLElement} element - The element to attach the events to.\r\n     */\r\n    initEvents(element) {\r\n        element.addEventListener('click', (event) => {\r\n            const action = event.target.closest(Selectors.action);\r\n            if (!action) {\r\n                return;\r\n            }\r\n            event.preventDefault();\r\n\r\n            const suffix = (action.dataset?.mdlType == 'userdata') ? this.userDataSuffix : Suffixes.included;\r\n\r\n            this.changeSelection(\r\n                action.dataset.mdlAction == 'selectall',\r\n                suffix,\r\n                action.dataset?.mdlMod ?? null\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Changes the selection according to the params.\r\n     *\r\n     * @private\r\n     * @param {boolean} checked - The checked state for the checkboxes.\r\n     * @param {string} suffix - The checkboxes suffix\r\n     * @param {string} [modName] - The module name.\r\n     */\r\n    changeSelection(checked, suffix, modName) {\r\n        const prefix = modName ? Selectors.modCheckboxes(modName) : null;\r\n\r\n        let formId;\r\n\r\n        const checkboxes = document.querySelectorAll(Selectors.checkboxes);\r\n        for (const checkbox of checkboxes) {\r\n            formId = formId ?? checkbox.closest('form').getAttribute('id');\r\n\r\n            if (prefix && !checkbox.name.startsWith(prefix)) {\r\n                continue;\r\n            }\r\n            if (checkbox.name.endsWith(suffix)) {\r\n                checkbox.checked = checked;\r\n            }\r\n        }\r\n\r\n        // At this point, we really need to persuade the form we are part of to\r\n        // update all of its disabledIf rules. However, as far as I can see,\r\n        // given the way that lib/form/form.js is written, that is impossible.\r\n        if (formId && M.form) {\r\n            M.form.updateFormState(formId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generates the full selectors element to add to the page.\r\n     *\r\n     * @private\r\n     * @returns {HTMLElement} The selectors element.\r\n     */\r\n    generateSelectorsElement() {\r\n        const links = document.createElement('div');\r\n        links.id = 'backup_selectors';\r\n        this.initEvents(links);\r\n        this.renderSelectorsTemplate(links);\r\n        return links;\r\n    }\r\n\r\n    /**\r\n     * Load the select all template.\r\n     *\r\n     * @private\r\n     * @param {HTMLElement} element the container\r\n     */\r\n    renderSelectorsTemplate(element) {\r\n        const data = {\r\n            modules: this.getModulesTemplateData(),\r\n            withuserdata: (this.withuserdata) ? true : undefined,\r\n        };\r\n        Templates.renderForPromise(\r\n            'core_backup/formselectall',\r\n            data\r\n        ).then(({html, js}) => {\r\n            return Templates.replaceNodeContents(element, html, js);\r\n        }).catch(Notification.exception);\r\n    }\r\n\r\n    /**\r\n     * Generate the modules template data.\r\n     *\r\n     * @private\r\n     * @returns {Array} of modules data.\r\n     */\r\n    getModulesTemplateData() {\r\n        const modules = [];\r\n        for (const modName in this.modNames) {\r\n            if (!this.modNames.hasOwnProperty(modName)) {\r\n                continue;\r\n            }\r\n            modules.push({\r\n                modname: modName,\r\n                heading: this.modNames[modName],\r\n            });\r\n        }\r\n        return modules;\r\n    }\r\n\r\n    /**\r\n     * Adds select all/none functionality to the backup form.\r\n     *\r\n     * @private\r\n     */\r\n    addSelectorsToPage() {\r\n        const firstSection = document.querySelector(Selectors.firstSection);\r\n        if (!firstSection) {\r\n            // This is not a relevant page.\r\n            return;\r\n        }\r\n        if (!firstSection.querySelector(Selectors.checkboxes)) {\r\n            // No checkboxes.\r\n            return;\r\n        }\r\n\r\n        // Add global select all/none options.\r\n        const selector = this.generateSelectorsElement();\r\n        firstSection.parentNode.insertBefore(selector, firstSection);\r\n    }\r\n}\r\n"],"names":["e","_getRequireWildcardCache","WeakMap","r","t","_notification","__esModule","default","Templates","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","Selectors","modName","Suffixes","BackupFormController","init","modNames","constructor","this","scanFormUserData","addSelectorsToPage","withuserdata","userDataSuffix","checkboxes","document","querySelectorAll","checkbox","name","endsWith","initEvents","element","addEventListener","event","action","target","closest","preventDefault","suffix","dataset","mdlType","changeSelection","mdlAction","mdlMod","checked","prefix","formId","getAttribute","startsWith","M","form","updateFormState","generateSelectorsElement","links","createElement","id","renderSelectorsTemplate","data","modules","getModulesTemplateData","undefined","renderForPromise","then","_ref","html","js","replaceNodeContents","catch","Notification","exception","push","modname","heading","firstSection","querySelector","selector","parentNode","insertBefore","_exports"],"mappings":"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"}