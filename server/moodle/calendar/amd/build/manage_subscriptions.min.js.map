{"version":3,"file":"manage_subscriptions.min.js","sources":["../src/manage_subscriptions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A module to handle Delete/Update operations of the manage subscription page.\r\n *\r\n * @module core_calendar/manage_subscriptions\r\n * @copyright 2021 Huong Nguyen <huongnv13@gmail.com>\r\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since 4.0\r\n */\r\n\r\nimport * as CalendarSelectors from 'core_calendar/selectors';\r\nimport * as CalendarRepository from 'core_calendar/repository';\r\nimport ModalSaveCancel from 'core/modal_save_cancel';\r\nimport * as ModalEvents from 'core/modal_events';\r\nimport {exception as displayException, addNotification, fetchNotifications} from 'core/notification';\r\nimport Prefetch from 'core/prefetch';\r\nimport {getString} from 'core/str';\r\nimport {eventTypes} from 'core/local/inplace_editable/events';\r\n\r\n/**\r\n * Get subscription id for given element.\r\n *\r\n * @param {HTMLElement} element update/delete link\r\n * @return {Number}\r\n */\r\nconst getSubscriptionId = element => {\r\n    return parseInt(element.closest('tr').dataset.subid);\r\n};\r\n\r\n/**\r\n * Get subscription name for given element.\r\n *\r\n * @param {HTMLElement} element update/delete link\r\n * @return {String}\r\n */\r\nconst getSubscriptionName = element => {\r\n    return element.closest('tr').dataset.subname;\r\n};\r\n\r\n/**\r\n * Get subscription table row for subscription id.\r\n *\r\n * @param {string} subscriptionId Subscription id\r\n * @return {Element}\r\n */\r\nconst getSubscriptionRow = subscriptionId => {\r\n    return document.querySelector(`tr[data-subid=\"${subscriptionId}\"]`);\r\n};\r\n\r\n/**\r\n * Create modal.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} messageCode Message code.\r\n * @return {promise} Promise for modal\r\n */\r\nconst createModal = (element, messageCode) => {\r\n    const subscriptionName = getSubscriptionName(element);\r\n    return ModalSaveCancel.create({\r\n        title: getString('confirmation', 'admin'),\r\n        body: getString(messageCode, 'calendar', subscriptionName),\r\n        buttons: {\r\n            save: getString('yes')\r\n        },\r\n    }).then(modal => {\r\n        modal.getRoot().on(ModalEvents.hidden, () => {\r\n            element.focus();\r\n        });\r\n        modal.show();\r\n        return modal;\r\n    });\r\n};\r\n\r\n/**\r\n * Response handler for delete action.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {Object} data\r\n * @return {Promise}\r\n */\r\nconst responseHandlerForDelete = async(element, data) => {\r\n    const subscriptionName = getSubscriptionName(element);\r\n    const message = data.status ? await getString('subscriptionremoved', 'calendar', subscriptionName) : data.warnings[0].message;\r\n    const type = data.status ? 'info' : 'error';\r\n    return addNotification({message, type});\r\n};\r\n\r\n/**\r\n * Register events for update/delete links.\r\n */\r\nconst registerEventListeners = () => {\r\n    document.addEventListener('click', e => {\r\n        const deleteAction = e.target.closest(CalendarSelectors.actions.deleteSubscription);\r\n        if (deleteAction) {\r\n            e.preventDefault();\r\n            const modalPromise = createModal(deleteAction, 'confirmsubscriptiondelete');\r\n            modalPromise.then(modal => {\r\n                modal.getRoot().on(ModalEvents.save, () => {\r\n                    const subscriptionId = getSubscriptionId(deleteAction);\r\n                    CalendarRepository.deleteSubscription(subscriptionId).then(data => {\r\n                        const response = responseHandlerForDelete(deleteAction, data);\r\n                        return response.then(() => {\r\n                            const subscriptionRow = getSubscriptionRow(subscriptionId);\r\n                            return subscriptionRow.remove();\r\n                        });\r\n                    }).catch(displayException);\r\n                });\r\n\r\n                return modal;\r\n            }).catch(displayException);\r\n        }\r\n    });\r\n\r\n    document.addEventListener(eventTypes.elementUpdated, e => {\r\n        const inplaceEditable = e.target;\r\n        if (inplaceEditable.getAttribute('data-component') == 'core_calendar') {\r\n            fetchNotifications();\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Initialises.\r\n */\r\nexport const init = () => {\r\n    Prefetch.prefetchStrings('moodle', ['yes']);\r\n    Prefetch.prefetchStrings('core_admin', ['confirmation']);\r\n    Prefetch.prefetchStrings('core_calendar', ['confirmsubscriptiondelete', 'subscriptionremoved']);\r\n    registerEventListeners();\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","_interopRequireWildcard","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","CalendarSelectors","CalendarRepository","_modal_save_cancel","ModalEvents","_prefetch","getSubscriptionName","element","closest","dataset","subname","registerEventListeners","document","addEventListener","deleteAction","target","actions","deleteSubscription","preventDefault","createModal","messageCode","subscriptionName","ModalSaveCancel","create","title","getString","body","buttons","save","then","modal","getRoot","on","hidden","focus","show","subscriptionId","parseInt","subid","data","response","async","message","status","warnings","type","addNotification","responseHandlerForDelete","subscriptionRow","querySelector","getSubscriptionRow","remove","catch","displayException","eventTypes","elementUpdated","getAttribute","fetchNotifications","_exports","init","Prefetch","prefetchStrings"],"mappings":"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"}