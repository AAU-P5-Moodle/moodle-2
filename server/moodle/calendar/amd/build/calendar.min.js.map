{"version":3,"file":"calendar.min.js","sources":["../src/calendar.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * This module is the highest level module for the calendar. It is\r\n * responsible for initialising all of the components required for\r\n * the calendar to run. It also coordinates the interaction between\r\n * components by listening for and responding to different events\r\n * triggered within the calendar UI.\r\n *\r\n * @module     core_calendar/calendar\r\n * @copyright  2017 Simey Lameze <simey@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine([\r\n    'jquery',\r\n    'core/templates',\r\n    'core/notification',\r\n    'core_calendar/repository',\r\n    'core_calendar/events',\r\n    'core_calendar/view_manager',\r\n    'core_calendar/crud',\r\n    'core_calendar/selectors',\r\n    'core/url',\r\n    'core/str',\r\n],\r\nfunction(\r\n    $,\r\n    Templates,\r\n    Notification,\r\n    CalendarRepository,\r\n    CalendarEvents,\r\n    CalendarViewManager,\r\n    CalendarCrud,\r\n    CalendarSelectors,\r\n    Url,\r\n    Str,\r\n) {\r\n\r\n    var SELECTORS = {\r\n        ROOT: \"[data-region='calendar']\",\r\n        DAY: \"[data-region='day']\",\r\n        NEW_EVENT_BUTTON: \"[data-action='new-event-button']\",\r\n        DAY_CONTENT: \"[data-region='day-content']\",\r\n        LOADING_ICON: '.loading-icon',\r\n        VIEW_DAY_LINK: \"[data-action='view-day-link']\",\r\n        CALENDAR_MONTH_WRAPPER: \".calendarwrapper\",\r\n        TODAY: '.today',\r\n        DAY_NUMBER_CIRCLE: '.day-number-circle',\r\n        DAY_NUMBER: '.day-number',\r\n        SCREEN_READER_ANNOUNCEMENTS: '.calendar-announcements',\r\n        CURRENT_MONTH: '.calendar-controls .current'\r\n    };\r\n\r\n    /**\r\n     * Handler for the drag and drop move event. Provides a loading indicator\r\n     * while the request is sent to the server to update the event start date.\r\n     *\r\n     * Triggers a eventMoved calendar javascript event if the event was successfully\r\n     * updated.\r\n     *\r\n     * @param {event} e The calendar move event\r\n     * @param {int} eventId The event id being moved\r\n     * @param {object|null} originElement The jQuery element for where the event is moving from\r\n     * @param {object} destinationElement The jQuery element for where the event is moving to\r\n     */\r\n    var handleMoveEvent = function(e, eventId, originElement, destinationElement) {\r\n        var originTimestamp = null;\r\n        var destinationTimestamp = destinationElement.attr('data-day-timestamp');\r\n\r\n        if (originElement) {\r\n            originTimestamp = originElement.attr('data-day-timestamp');\r\n        }\r\n\r\n        // If the event has actually changed day.\r\n        if (!originElement || originTimestamp != destinationTimestamp) {\r\n            Templates.render('core/loading', {})\r\n                .then(function(html, js) {\r\n                    // First we show some loading icons in each of the days being affected.\r\n                    destinationElement.find(SELECTORS.DAY_CONTENT).addClass('hidden');\r\n                    Templates.appendNodeContents(destinationElement, html, js);\r\n\r\n                    if (originElement) {\r\n                        originElement.find(SELECTORS.DAY_CONTENT).addClass('hidden');\r\n                        Templates.appendNodeContents(originElement, html, js);\r\n                    }\r\n                    return;\r\n                })\r\n                .then(function() {\r\n                    // Send a request to the server to make the change.\r\n                    return CalendarRepository.updateEventStartDay(eventId, destinationTimestamp);\r\n                })\r\n                .then(function() {\r\n                    // If the update was successful then broadcast an event letting the calendar\r\n                    // know that an event has been moved.\r\n                    $('body').trigger(CalendarEvents.eventMoved, [eventId, originElement, destinationElement]);\r\n                    return;\r\n                })\r\n                .always(function() {\r\n                    // Always remove the loading icons regardless of whether the update\r\n                    // request was successful or not.\r\n                    var destinationLoadingElement = destinationElement.find(SELECTORS.LOADING_ICON);\r\n                    destinationElement.find(SELECTORS.DAY_CONTENT).removeClass('hidden');\r\n                    Templates.replaceNode(destinationLoadingElement, '', '');\r\n\r\n                    if (originElement) {\r\n                        var originLoadingElement = originElement.find(SELECTORS.LOADING_ICON);\r\n                        originElement.find(SELECTORS.DAY_CONTENT).removeClass('hidden');\r\n                        Templates.replaceNode(originLoadingElement, '', '');\r\n                    }\r\n                    return;\r\n                })\r\n                .catch(Notification.exception);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Listen to and handle any calendar events fired by the calendar UI.\r\n     *\r\n     * @method registerCalendarEventListeners\r\n     * @param {object} root The calendar root element\r\n     * @param {object} eventFormModalPromise A promise reolved with the event form modal\r\n     */\r\n    var registerCalendarEventListeners = function(root, eventFormModalPromise) {\r\n        var body = $('body');\r\n\r\n        body.on(CalendarEvents.created, function() {\r\n            CalendarViewManager.reloadCurrentMonth(root);\r\n        });\r\n        body.on(CalendarEvents.deleted, function() {\r\n            CalendarViewManager.reloadCurrentMonth(root);\r\n        });\r\n        body.on(CalendarEvents.updated, function() {\r\n            CalendarViewManager.reloadCurrentMonth(root);\r\n        });\r\n        body.on(CalendarEvents.editActionEvent, function(e, url) {\r\n            // Action events needs to be edit directly on the course module.\r\n            window.location.assign(url);\r\n        });\r\n        // Handle the event fired by the drag and drop code.\r\n        body.on(CalendarEvents.moveEvent, handleMoveEvent);\r\n        // When an event is successfully moved we should updated the UI.\r\n        body.on(CalendarEvents.eventMoved, function() {\r\n            CalendarViewManager.reloadCurrentMonth(root);\r\n        });\r\n        // Announce the newly loaded month to screen readers.\r\n        body.on(CalendarEvents.monthChanged, root, async function() {\r\n            const monthName = body.find(SELECTORS.CURRENT_MONTH).text();\r\n            const monthAnnoucement = await Str.get_string('newmonthannouncement', 'calendar', monthName);\r\n            body.find(SELECTORS.SCREEN_READER_ANNOUNCEMENTS).html(monthAnnoucement);\r\n        });\r\n\r\n        CalendarCrud.registerEditListeners(root, eventFormModalPromise);\r\n    };\r\n\r\n    /**\r\n     * Register event listeners for the module.\r\n     *\r\n     * @param {object} root The calendar root element\r\n     * @param {boolean} isCalendarBlock - A flag indicating whether this is a calendar block.\r\n     */\r\n    var registerEventListeners = function(root, isCalendarBlock) {\r\n        const viewingFullCalendar = document.getElementById(CalendarSelectors.fullCalendarView);\r\n        // Listen the click on the day link to render the day view.\r\n        root.on('click', SELECTORS.VIEW_DAY_LINK, function(e) {\r\n            var dayLink = $(e.target).closest(SELECTORS.VIEW_DAY_LINK);\r\n            var year = dayLink.data('year'),\r\n                month = dayLink.data('month'),\r\n                day = dayLink.data('day'),\r\n                courseId = dayLink.data('courseid'),\r\n                categoryId = dayLink.data('categoryid');\r\n            const urlParams = {\r\n                view: 'day',\r\n                time: dayLink.data('timestamp'),\r\n                course: courseId,\r\n            };\r\n            if (viewingFullCalendar) {\r\n                // Construct the URL parameter string from the urlParams object.\r\n                const urlParamString = Object.entries(urlParams)\r\n                    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\r\n                    .join('&');\r\n                CalendarViewManager.refreshDayContent(root, year, month, day, courseId, categoryId, root,\r\n                    'core_calendar/calendar_day', isCalendarBlock).then(function() {\r\n                    e.preventDefault();\r\n                    // Update the URL if it's not calendar block.\r\n                    if (!isCalendarBlock) {\r\n                        CalendarViewManager.updateUrl('?' + urlParamString);\r\n                    }\r\n                    return;\r\n                }).catch(Notification.exception);\r\n            } else {\r\n                window.location.assign(Url.relativeUrl('calendar/view.php', urlParams));\r\n            }\r\n        });\r\n\r\n        root.on('change', CalendarSelectors.elements.courseSelector, function() {\r\n            var selectElement = $(this);\r\n            var courseId = selectElement.val();\r\n            const courseName = $(\"option:selected\", selectElement).text();\r\n            CalendarViewManager.reloadCurrentMonth(root, courseId, null)\r\n                .then(function() {\r\n                    // We need to get the selector again because the content has changed.\r\n                    return root.find(CalendarSelectors.elements.courseSelector).val(courseId);\r\n                })\r\n                .then(function() {\r\n                    CalendarViewManager.updateUrl('?view=month&course=' + courseId);\r\n                    CalendarViewManager.handleCourseChange(Number(courseId), courseName);\r\n                    return;\r\n                })\r\n                .catch(Notification.exception);\r\n        });\r\n\r\n        var eventFormPromise = CalendarCrud.registerEventFormModal(root),\r\n            contextId = $(SELECTORS.CALENDAR_MONTH_WRAPPER).data('context-id');\r\n        registerCalendarEventListeners(root, eventFormPromise);\r\n\r\n        if (contextId) {\r\n            // Bind click events to calendar days.\r\n            root.on('click', SELECTORS.DAY, function(e) {\r\n                var target = $(e.target);\r\n                const displayingSmallBlockCalendar = root.parents('aside').data('blockregion') === 'side-pre';\r\n\r\n                if (!viewingFullCalendar && displayingSmallBlockCalendar) {\r\n                    const dateContainer = target.closest(SELECTORS.DAY);\r\n                    const wrapper = target.closest(CalendarSelectors.wrapper);\r\n                    const courseId = wrapper.data('courseid');\r\n                    const params = {\r\n                        view: 'day',\r\n                        time: dateContainer.data('day-timestamp'),\r\n                        course: courseId,\r\n                    };\r\n                    window.location.assign(Url.relativeUrl('calendar/view.php', params));\r\n                } else {\r\n                    const hasViewDayLink = target.closest(SELECTORS.VIEW_DAY_LINK).length;\r\n                    const shouldShowNewEventModal = !hasViewDayLink;\r\n                    if (shouldShowNewEventModal) {\r\n                        var startTime = $(this).attr('data-new-event-timestamp');\r\n                        eventFormPromise.then(function(modal) {\r\n                            var wrapper = target.closest(CalendarSelectors.wrapper);\r\n                            modal.setCourseId(wrapper.data('courseid'));\r\n\r\n                            var categoryId = wrapper.data('categoryid');\r\n                            if (typeof categoryId !== 'undefined') {\r\n                                modal.setCategoryId(categoryId);\r\n                            }\r\n\r\n                            modal.setContextId(wrapper.data('contextId'));\r\n                            modal.setStartTime(startTime);\r\n                            modal.show();\r\n                            return;\r\n                        }).catch(Notification.exception);\r\n                    }\r\n                }\r\n                e.preventDefault();\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * Initializes the calendar view manager and registers event listeners.\r\n         *\r\n         * @param {HTMLElement} root - The root element where the calendar view manager and event listeners will be attached.\r\n         * @param {boolean} [isCalendarBlock=false] - A flag indicating whether this is a calendar block.\r\n         */\r\n        init: function(root, isCalendarBlock = false) {\r\n            root = $(root);\r\n            CalendarViewManager.init(root, 'month', isCalendarBlock);\r\n            registerEventListeners(root, isCalendarBlock);\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","Templates","Notification","CalendarRepository","CalendarEvents","CalendarViewManager","CalendarCrud","CalendarSelectors","Url","Str","SELECTORS","handleMoveEvent","e","eventId","originElement","destinationElement","originTimestamp","destinationTimestamp","attr","render","then","html","js","find","addClass","appendNodeContents","updateEventStartDay","trigger","eventMoved","always","destinationLoadingElement","removeClass","replaceNode","originLoadingElement","catch","exception","registerEventListeners","root","isCalendarBlock","viewingFullCalendar","document","getElementById","fullCalendarView","on","dayLink","target","closest","year","data","month","day","courseId","categoryId","urlParams","view","time","course","urlParamString","Object","entries","map","_ref","key","value","encodeURIComponent","join","refreshDayContent","preventDefault","updateUrl","window","location","assign","relativeUrl","elements","courseSelector","selectElement","this","val","courseName","text","reloadCurrentMonth","handleCourseChange","Number","eventFormPromise","registerEventFormModal","contextId","eventFormModalPromise","body","created","deleted","updated","editActionEvent","url","moveEvent","monthChanged","async","monthName","monthAnnoucement","get_string","registerEditListeners","registerCalendarEventListeners","displayingSmallBlockCalendar","parents","dateContainer","wrapper","params","length","startTime","modal","setCourseId","setCategoryId","setContextId","setStartTime","show","init","arguments","undefined"],"mappings":"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"}