{"version":3,"file":"summary_modal.min.js","sources":["../src/summary_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A javascript module to handle summary modal.\r\n *\r\n * @module     core_calendar/summary_modal\r\n * @copyright  2017 Simey Lameze <simey@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport $ from 'jquery';\r\nimport * as CustomEvents from 'core/custom_interaction_events';\r\nimport Modal from 'core/modal';\r\nimport CalendarEvents from './events';\r\nimport * as CalendarCrud from 'core_calendar/crud';\r\nimport * as ModalEvents from 'core/modal_events';\r\n\r\nconst SELECTORS = {\r\n    ROOT: \"[data-region='summary-modal-container']\",\r\n    EDIT_BUTTON: '[data-action=\"edit\"]',\r\n    DELETE_BUTTON: '[data-action=\"delete\"]',\r\n};\r\n\r\nexport default class ModalEventSummary extends Modal {\r\n    static TEMPLATE = 'core_calendar/event_summary_modal';\r\n    static TYPE = 'core_calendar-event_summary';\r\n\r\n    /**\r\n     * Get the edit button element from the footer. The button is cached\r\n     * as it's not expected to change.\r\n     *\r\n     * @method getEditButton\r\n     * @return {object} button element\r\n     */\r\n    getEditButton() {\r\n        if (typeof this.editButton == 'undefined') {\r\n            this.editButton = this.getFooter().find(SELECTORS.EDIT_BUTTON);\r\n        }\r\n\r\n        return this.editButton;\r\n    }\r\n\r\n    /**\r\n     * Get the delete button element from the footer. The button is cached\r\n     * as it's not expected to change.\r\n     *\r\n     * @method getDeleteButton\r\n     * @return {object} button element\r\n     */\r\n    getDeleteButton() {\r\n        if (typeof this.deleteButton == 'undefined') {\r\n            this.deleteButton = this.getFooter().find(SELECTORS.DELETE_BUTTON);\r\n        }\r\n\r\n        return this.deleteButton;\r\n    }\r\n\r\n    /**\r\n     * Get the id for the event being shown in this modal. This value is\r\n     * not cached because it will change depending on which event is\r\n     * being displayed.\r\n     *\r\n     * @method getEventId\r\n     * @return {int}\r\n     */\r\n    getEventId() {\r\n        return this.getBody().find(SELECTORS.ROOT).attr('data-event-id');\r\n    }\r\n\r\n    /**\r\n     * Get the title for the event being shown in this modal. This value is\r\n     * not cached because it will change depending on which event is\r\n     * being displayed.\r\n     *\r\n     * @method getEventTitle\r\n     * @return {String}\r\n     */\r\n    getEventTitle() {\r\n        return this.getBody().find(SELECTORS.ROOT).attr('data-event-title');\r\n    }\r\n\r\n    /**\r\n     * Get the number of events in the series for the event being shown in\r\n     * this modal. This value is not cached because it will change\r\n     * depending on which event is being displayed.\r\n     *\r\n     * @method getEventCount\r\n     * @return {int}\r\n     */\r\n    getEventCount() {\r\n        return this.getBody().find(SELECTORS.ROOT).attr('data-event-count');\r\n    }\r\n\r\n    /**\r\n     * Get the url for the event being shown in this modal.\r\n     *\r\n     * @method getEventUrl\r\n     * @return {String}\r\n     */\r\n    getEditUrl() {\r\n        return this.getBody().find(SELECTORS.ROOT).attr('data-edit-url');\r\n    }\r\n\r\n    /**\r\n     * Is this an action event.\r\n     *\r\n     * @method getEventUrl\r\n     * @return {String}\r\n     */\r\n    isActionEvent() {\r\n        return (this.getBody().find(SELECTORS.ROOT).attr('data-action-event') == 'true');\r\n    }\r\n\r\n    /**\r\n     * Set up all of the event handling for the modal.\r\n     *\r\n     * @method registerEventListeners\r\n     */\r\n    registerEventListeners() {\r\n        // Apply parent event listeners.\r\n        super.registerEventListeners(this);\r\n\r\n        // We have to wait for the modal to finish rendering in order to ensure that\r\n        // the data-event-title property is available to use as the modal title.\r\n        M.util.js_pending('core_calendar/summary_modal:registerEventListeners:bodyRendered');\r\n        this.getRoot().on(ModalEvents.bodyRendered, function() {\r\n            this.getModal().data({\r\n                eventTitle: this.getEventTitle(),\r\n                eventId: this.getEventId(),\r\n                eventCount: this.getEventCount(),\r\n            })\r\n            .attr('data-type', 'event');\r\n            CalendarCrud.registerRemove(this.getModal());\r\n            M.util.js_complete('core_calendar/summary_modal:registerEventListeners:bodyRendered');\r\n        }.bind(this));\r\n\r\n        $('body').on(CalendarEvents.deleted, function() {\r\n            // Close the dialogue on delete.\r\n            this.hide();\r\n        }.bind(this));\r\n\r\n        CustomEvents.define(this.getEditButton(), [\r\n            CustomEvents.events.activate\r\n        ]);\r\n\r\n        this.getEditButton().on(CustomEvents.events.activate, function(e, data) {\r\n            if (this.isActionEvent()) {\r\n                // Action events cannot be edited on the event form and must be redirected to the module UI.\r\n                $('body').trigger(CalendarEvents.editActionEvent, [this.getEditUrl()]);\r\n            } else {\r\n                // When the edit button is clicked we fire an event for the calendar UI to handle.\r\n                // We don't care how the UI chooses to handle it.\r\n                $('body').trigger(CalendarEvents.editEvent, [this.getEventId()]);\r\n            }\r\n\r\n            // There is nothing else for us to do so let's hide.\r\n            this.hide();\r\n\r\n            // We've handled this event so no need to propagate it.\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            data.originalEvent.preventDefault();\r\n            data.originalEvent.stopPropagation();\r\n        }.bind(this));\r\n    }\r\n}\r\n\r\nModalEventSummary.registerModalType();\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireDefault","_jquery","CustomEvents","_modal","_events","CalendarCrud","ModalEvents","SELECTORS","ModalEventSummary","Modal","static","getEditButton","this","editButton","getFooter","find","getDeleteButton","deleteButton","getEventId","getBody","attr","getEventTitle","getEventCount","getEditUrl","isActionEvent","registerEventListeners","super","M","util","js_pending","getRoot","on","bodyRendered","getModal","data","eventTitle","eventId","eventCount","registerRemove","js_complete","bind","$","CalendarEvents","deleted","hide","define","events","activate","trigger","editActionEvent","editEvent","preventDefault","stopPropagation","originalEvent","_exports","registerModalType"],"mappings":"6OA4BiD,SAAAA,yBAAAC,GAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAF,yBAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,EAAA,CAAA,SAAAI,wBAAAJ,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAAL,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAM,MAAAA,CAAAA,QAAAN,GAAAG,IAAAA,EAAAJ,yBAAAG,GAAA,GAAAC,GAAAA,EAAAI,IAAAP,GAAA,OAAAG,EAAAK,IAAAR,GAAA,IAAAS,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAf,EAAAe,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAjB,EAAAe,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAd,EAAAe,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAf,EAAAe,GAAAN,OAAAA,EAAAH,QAAAN,EAAAG,GAAAA,EAAAgB,IAAAnB,EAAAS,GAAAA,CAAA,CAAA,SAAAW,uBAAApB,GAAAA,OAAAA,GAAAA,EAAAK,WAAAL,EAAAM,CAAAA,QAAAN,EAAA;;;;;;;qFALjDqB,QAAAD,uBAAAC,SACAC,aAAAlB,wBAAAkB,cACAC,OAAAH,uBAAAG,QACAC,QAAAJ,uBAAAI,SACAC,aAAArB,wBAAAqB,cACAC,YAAAtB,wBAAAsB,aAEA,MAAMC,eACI,0CADJA,sBAEW,uBAFXA,wBAGa,yBAGJ,MAAMC,0BAA0BC,OAAAA,QAC3CC,gBAAkB,oCAClBA,YAAc,8BASdC,aAAAA,GAKI,YAJ8B,IAAnBC,KAAKC,aACZD,KAAKC,WAAaD,KAAKE,YAAYC,KAAKR,wBAGrCK,KAAKC,UAChB,CASAG,eAAAA,GAKI,YAJgC,IAArBJ,KAAKK,eACZL,KAAKK,aAAeL,KAAKE,YAAYC,KAAKR,0BAGvCK,KAAKK,YAChB,CAUAC,UAAAA,GACI,OAAON,KAAKO,UAAUJ,KAAKR,gBAAgBa,KAAK,gBACpD,CAUAC,aAAAA,GACI,OAAOT,KAAKO,UAAUJ,KAAKR,gBAAgBa,KAAK,mBACpD,CAUAE,aAAAA,GACI,OAAOV,KAAKO,UAAUJ,KAAKR,gBAAgBa,KAAK,mBACpD,CAQAG,UAAAA,GACI,OAAOX,KAAKO,UAAUJ,KAAKR,gBAAgBa,KAAK,gBACpD,CAQAI,aAAAA,GACI,MAAyE,QAAjEZ,KAAKO,UAAUJ,KAAKR,gBAAgBa,KAAK,oBACrD,CAOAK,sBAAAA,GAEIC,MAAMD,uBAAuBb,MAI7Be,EAAEC,KAAKC,WAAW,mEAClBjB,KAAKkB,UAAUC,GAAGzB,YAAY0B,aAAc,WACxCpB,KAAKqB,WAAWC,KAAK,CACjBC,WAAYvB,KAAKS,gBACjBe,QAASxB,KAAKM,aACdmB,WAAYzB,KAAKU,kBAEpBF,KAAK,YAAa,SACnBf,aAAaiC,eAAe1B,KAAKqB,YACjCN,EAAEC,KAAKW,YAAY,kEACvB,EAAEC,KAAK5B,QAEP,EAAA6B,QAAAA,SAAE,QAAQV,GAAGW,QAAcxD,QAACyD,QAAS,WAEjC/B,KAAKgC,MACT,EAAEJ,KAAK5B,OAEPV,aAAa2C,OAAOjC,KAAKD,gBAAiB,CACtCT,aAAa4C,OAAOC,WAGxBnC,KAAKD,gBAAgBoB,GAAG7B,aAAa4C,OAAOC,SAAU,SAASnE,EAAGsD,MAC1DtB,KAAKY,iBAEL,EAAAiB,iBAAE,QAAQO,QAAQN,QAAcxD,QAAC+D,gBAAiB,CAACrC,KAAKW,gBAIxD,EAAAkB,iBAAE,QAAQO,QAAQN,QAAcxD,QAACgE,UAAW,CAACtC,KAAKM,eAItDN,KAAKgC,OAGLhE,EAAEuE,iBACFvE,EAAEwE,kBACFlB,KAAKmB,cAAcF,iBACnBjB,KAAKmB,cAAcD,iBACvB,EAAEZ,KAAK5B,MACX,EAGkC,OAFrC0C,SAAApE,QAAAsB,kBAEDA,kBAAkB+C,oBAAoBD,SAAApE,OAAA"}