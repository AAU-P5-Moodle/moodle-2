{"version":3,"file":"autolinker.min.js","sources":["../src/autolinker.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module for auto-linking glossary entries.\r\n *\r\n * @module     filter_glossary/autolinker\r\n * @copyright  2023 Mihail Geshoski <mihail@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Ajax from 'core/ajax';\r\nimport ModalCancel from \"core/modal_cancel\";\r\nimport Templates from 'core/templates';\r\nimport {getString} from 'core/str';\r\n\r\n/** @constant {Object} The object containing the relevant selectors. */\r\nconst Selectors = {\r\n    glossaryEntryAutoLink: 'a.glossary.autolink.concept',\r\n};\r\n\r\n/**\r\n * Register the event listeners for the glossary entry auto-linker.\r\n *\r\n * @return {void}\r\n */\r\nconst registerEventListeners = () => {\r\n    document.addEventListener('click', async(e) => {\r\n        const glossaryEntryAutoLink = e.target.closest(Selectors.glossaryEntryAutoLink);\r\n        if (glossaryEntryAutoLink) {\r\n            e.preventDefault();\r\n            const entryId = glossaryEntryAutoLink.dataset.entryid;\r\n            await showGlossaryEntry(entryId);\r\n            await glossaryEntryViewed(entryId);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Show the linked glossary entry in a modal.\r\n *\r\n * @method showGlossaryEntry\r\n * @param {int} entryId The id of the linked glossary entry.\r\n * @returns {Promise} The modal promise.\r\n */\r\nconst showGlossaryEntry = async(entryId) => {\r\n    const entryData = await fetchGlossaryEntry(entryId);\r\n    // Obtain the HTML and JS used for rendering the auto-linked glossary entry.\r\n    const {html, js} = await Templates.renderForPromise('filter_glossary/linked_glossary_entry', {\r\n        definition: entryData.entry.definition,\r\n        taglistdata: await generateTagListData(entryData.entry.tags),\r\n        hasattachments: Boolean(entryData.entry.attachment),\r\n        attachments: entryData.entry.attachments\r\n    });\r\n    // Create the modal.\r\n    const modal = await ModalCancel.create({\r\n        title: entryData.entry.concept,\r\n        body: html,\r\n        isVerticallyCentered: true,\r\n        buttons: {\r\n            cancel: await getString('ok')\r\n        }\r\n    });\r\n    // Execute the JS code returned from the template once the modal is created.\r\n    Templates.runTemplateJS(js);\r\n    // Display the modal.\r\n    modal.show();\r\n\r\n    return modal;\r\n};\r\n\r\n/**\r\n * Fetch the linked glossary entry.\r\n *\r\n * @method fetchGlossaryEntry\r\n * @param {int} entryId The id of the linked glossary entry.\r\n * @returns {Promise} The glossary entry promise.\r\n */\r\nconst fetchGlossaryEntry = (entryId) => {\r\n    const request = {\r\n        methodname: 'mod_glossary_get_entry_by_id',\r\n        args: {\r\n            id: entryId,\r\n        },\r\n    };\r\n    return Ajax.call([request])[0];\r\n};\r\n\r\n/**\r\n * Notify that the linked glossary entry was viewed.\r\n *\r\n * @method glossaryEntryViewed\r\n * @param {int} entryId The id of the linked glossary entry.\r\n * @returns {Promise} The promise object.\r\n */\r\nconst glossaryEntryViewed = (entryId) => {\r\n    const request = {\r\n        methodname: 'mod_glossary_view_entry',\r\n        args: {\r\n            id: entryId,\r\n        },\r\n    };\r\n    return Ajax.call([request])[0];\r\n};\r\n\r\n/**\r\n * Generates an object that contains the data required to render a tag list.\r\n *\r\n * @method generateTagListData\r\n * @param {array} tags The array containing the tags related to the linked glossary entry.\r\n * @returns {Object} The data required to render a tag list.\r\n */\r\nconst generateTagListData = async(tags) => {\r\n    // Define the number of initially displayed tags.\r\n    const limit = 10;\r\n    const hasOverflow = tags.length > limit;\r\n    // If the total number of tags exceeds the defined limit, then we need to mark all the excess tags as over the limit.\r\n    // By specifying this, these tags will be initially hidden.\r\n    if (hasOverflow) {\r\n        for (let i = limit; i < tags.length; i++) {\r\n            tags[i].overlimit = true;\r\n        }\r\n    }\r\n\r\n    return {\r\n        tags: tags,\r\n        tagscount: tags.length,\r\n        overflow: hasOverflow,\r\n        label: await getString('tags')\r\n    };\r\n};\r\n\r\n/**\r\n * Initialize the module.\r\n */\r\nexport const init = () => {\r\n    registerEventListeners();\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_ajax","_modal_cancel","_templates","Selectors","showGlossaryEntry","async","entryData","fetchGlossaryEntry","entryId","html","js","Templates","renderForPromise","definition","entry","taglistdata","generateTagListData","tags","hasattachments","Boolean","attachment","attachments","modal","ModalCancel","create","title","concept","body","isVerticallyCentered","buttons","cancel","getString","runTemplateJS","show","request","methodname","args","id","Ajax","call","glossaryEntryViewed","hasOverflow","length","i","overlimit","tagscount","overflow","label","_exports","init","document","addEventListener","glossaryEntryAutoLink","target","closest","preventDefault","dataset","entryid"],"mappings":"oKAyBuC,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;kFAFvCG,MAAAJ,uBAAAI,OACAC,cAAAL,uBAAAK,eACAC,WAAAN,uBAAAM,YAIA,MAAMC,gCACqB,8BA2BrBC,kBAAoBC,gBACtB,MAAMC,gBAAkBC,mBAAmBC,UAErCC,KAACA,KAAIC,GAAEA,UAAYC,WAAAA,QAAUC,iBAAiB,wCAAyC,CACzFC,WAAYP,UAAUQ,MAAMD,WAC5BE,kBAAmBC,oBAAoBV,UAAUQ,MAAMG,MACvDC,eAAgBC,QAAQb,UAAUQ,MAAMM,YACxCC,YAAaf,UAAUQ,MAAMO,cAG3BC,YAAcC,cAAWxB,QAACyB,OAAO,CACnCC,MAAOnB,UAAUQ,MAAMY,QACvBC,KAAMlB,KACNmB,sBAAsB,EACtBC,QAAS,CACLC,aAAc,EAAAC,KAAAA,WAAU,SAQhC,OAJApB,WAAAA,QAAUqB,cAActB,IAExBY,MAAMW,OAECX,KAAK,EAUVf,mBAAsBC,UACxB,MAAM0B,QAAU,CACZC,WAAY,+BACZC,KAAM,CACFC,GAAI7B,UAGZ,OAAO8B,MAAAA,QAAKC,KAAK,CAACL,UAAU,EAAE,EAU5BM,oBAAuBhC,UACzB,MAAM0B,QAAU,CACZC,WAAY,0BACZC,KAAM,CACFC,GAAI7B,UAGZ,OAAO8B,MAAAA,QAAKC,KAAK,CAACL,UAAU,EAAE,EAU5BlB,oBAAsBX,aAExB,MACMoC,YAAcxB,KAAKyB,OADX,GAId,GAAID,YACA,IAAK,IAAIE,EALC,GAKUA,EAAI1B,KAAKyB,OAAQC,IACjC1B,KAAK0B,GAAGC,WAAY,EAI5B,MAAO,CACH3B,KAAMA,KACN4B,UAAW5B,KAAKyB,OAChBI,SAAUL,YACVM,YAAa,EAAAhB,KAAAA,WAAU,QAC1B,EAQHiB,SAAAC,KAFkBA,KA5GhBC,SAASC,iBAAiB,SAAS9C,UAC/B,MAAM+C,sBAAwBvD,EAAEwD,OAAOC,QAAQnD,iCAC/C,GAAIiD,sBAAuB,CACvBvD,EAAE0D,iBACF,MAAM/C,QAAU4C,sBAAsBI,QAAQC,cACxCrD,kBAAkBI,eAClBgC,oBAAoBhC,QAC9B,IAsGoB,CAC1B"}