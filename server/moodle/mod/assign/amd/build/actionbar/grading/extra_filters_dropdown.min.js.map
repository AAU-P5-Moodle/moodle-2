{"version":3,"file":"extra_filters_dropdown.min.js","sources":["../../../src/actionbar/grading/extra_filters_dropdown.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport {getDropdownDialog} from 'core/local/dropdown/dialog';\r\nimport {getUserPreference} from 'core_user/repository';\r\nimport $ from 'jquery';\r\n\r\n/**\r\n * Module for the extra filters dropdown on the submissions page.\r\n *\r\n * @module     mod_assign/actionbar/grading/extra_filters_dropdown\r\n * @copyright  2024 Mihail Geshoski <mihail@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/** @constant {Object} The object containing the relevant selectors. */\r\nconst Selectors = {\r\n    extraFiltersDropdown: '.dropdown.extrafilters',\r\n    extraFiltersClose: 'a[data-action=\"close\"]',\r\n    workflowFilterElement: 'select[name=\"workflowfilter\"]'\r\n};\r\n\r\n/**\r\n * Register event listeners for the extra filters dropdown.\r\n *\r\n * @param {DropdownDialog} extraFiltersDropdown The dropdown dialog instance.\r\n */\r\nconst registerEventListeners = (extraFiltersDropdown) => {\r\n    // Click event listener to the extra filters dropdown element.\r\n    extraFiltersDropdown.getElement().addEventListener('click', e => {\r\n        // The target is the 'Close' button.\r\n        if (e.target.closest(Selectors.extraFiltersClose)) {\r\n            e.preventDefault();\r\n            extraFiltersDropdown.setVisible(false);\r\n        }\r\n    });\r\n    // Event listener triggered upon hiding of the dropdown.\r\n    $(extraFiltersDropdown.getElement()).on('hide.bs.dropdown', () => {\r\n        // Restore the filters to their stored preference values once the dropdown is closed.\r\n        restoreAppliedWorkflowFilter(extraFiltersDropdown);\r\n    });\r\n};\r\n\r\n/**\r\n * Restores the currently applied workflow filter to its stored preference value.\r\n *\r\n * @param {DropdownDialog} extraFiltersDropdown The dropdown dialog instance.\r\n */\r\nconst restoreAppliedWorkflowFilter = async(extraFiltersDropdown) => {\r\n    const appliedWorkflowFilter = await getUserPreference('assign_workflowfilter');\r\n    const workflowFilterSelect = extraFiltersDropdown.getElement().querySelector(Selectors.workflowFilterElement);\r\n    workflowFilterSelect.value = appliedWorkflowFilter;\r\n};\r\n\r\n/**\r\n * Initialize module.\r\n */\r\nexport const init = () => {\r\n    const extraFiltersDropdown = getDropdownDialog(Selectors.extraFiltersDropdown);\r\n    if (extraFiltersDropdown) {\r\n        registerEventListeners(extraFiltersDropdown);\r\n    }\r\n};\r\n"],"names":["e","_jquery","__esModule","default","Selectors","restoreAppliedWorkflowFilter","async","appliedWorkflowFilter","getUserPreference","extraFiltersDropdown","getElement","querySelector","value","_exports","init","getDropdownDialog","addEventListener","target","closest","preventDefault","setVisible","$","on","registerEventListeners"],"mappings":"sLAiBuB,IAAAA;;;;;;;kFAAvBC,SAAuBD,EAAvBC,UAAuBD,EAAAE,WAAAF,EAAAG,CAAAA,QAAAH,GAWvB,MAAMI,+BACoB,yBADpBA,4BAEiB,yBAFjBA,gCAGqB,gCA6BrBC,6BAA+BC,6BACjC,MAAMC,4BAA8B,EAAAC,YAAiBA,mBAAC,yBACzBC,qBAAqBC,aAAaC,cAAcP,iCACxDQ,MAAQL,qBAAqB,EAWpDM,SAAAC,KALkBA,KAChB,MAAML,sBAAuB,EAAAM,QAAAA,mBAAkBX,gCAC3CK,sBAhCwBA,wBAE5BA,qBAAqBC,aAAaM,iBAAiB,SAAShB,IAEpDA,EAAEiB,OAAOC,QAAQd,+BACjBJ,EAAEmB,iBACFV,qBAAqBW,YAAW,GACpC,KAGJ,EAAAC,QAAClB,SAACM,qBAAqBC,cAAcY,GAAG,oBAAoB,KAExDjB,6BAA6BI,qBAAqB,GACpD,EAoBEc,CAAuBd,qBAC3B,CACF"}