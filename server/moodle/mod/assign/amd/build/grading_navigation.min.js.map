{"version":3,"file":"grading_navigation.min.js","sources":["../src/grading_navigation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript to handle changing users via the user selector in the header.\r\n *\r\n * @module     mod_assign/grading_navigation\r\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      3.1\r\n */\r\ndefine(['jquery', 'core/notification', 'core/str', 'core/form-autocomplete',\r\n        'core/ajax', 'core_user/repository', 'mod_assign/grading_form_change_checker'],\r\n       function($, notification, str, autocomplete, ajax, UserRepository, checker) {\r\n\r\n    /**\r\n     * GradingNavigation class.\r\n     *\r\n     * @class mod_assign/grading_navigation\r\n     * @param {String} selector The selector for the page region containing the user navigation.\r\n     */\r\n    var GradingNavigation = function(selector) {\r\n        this._regionSelector = selector;\r\n        this._region = $(selector);\r\n        this._filters = [];\r\n        this._users = [];\r\n        this._filteredUsers = [];\r\n        this._lastXofYUpdate = 0;\r\n        this._firstLoadUsers = true;\r\n\r\n        let url = new URL(window.location);\r\n        if (parseInt(url.searchParams.get('treset')) > 0) {\r\n            // Remove 'treset' url parameter to make sure that\r\n            // table preferences won't be reset on page refresh.\r\n            url.searchParams.delete('treset');\r\n            window.history.replaceState({}, \"\", url);\r\n        }\r\n\r\n        // Get the current user list from a webservice.\r\n        this._loadAllUsers();\r\n\r\n        // We do not allow navigation while ajax requests are pending.\r\n        // Attach listeners to the select and arrow buttons.\r\n\r\n        this._region.find('[data-action=\"previous-user\"]').on('click', this._handlePreviousUser.bind(this));\r\n        this._region.find('[data-action=\"next-user\"]').on('click', this._handleNextUser.bind(this));\r\n        this._region.find('[data-action=\"change-user\"]').on('change', this._handleChangeUser.bind(this));\r\n        this._region.find('[data-region=\"user-filters\"]').on('click', this._toggleExpandFilters.bind(this));\r\n        this._region.find('[data-region=\"user-resettable\"]').on('click', this._toggleResetTable.bind());\r\n\r\n        $(document).on('user-changed', this._refreshSelector.bind(this));\r\n        $(document).on('done-saving-show-next', this._handleNextUser.bind(this));\r\n\r\n        // Position the configure filters panel under the link that expands it.\r\n        var toggleLink = this._region.find('[data-region=\"user-filters\"]');\r\n        var configPanel = $(document.getElementById(toggleLink.attr('aria-controls')));\r\n\r\n        configPanel.on('change', 'select', this._filterChanged.bind(this));\r\n\r\n        var userid = $('[data-region=\"grading-navigation-panel\"]').data('first-userid');\r\n        if (userid) {\r\n            this._selectUserById(userid);\r\n        }\r\n\r\n        str.get_string('changeuser', 'mod_assign').done(function(s) {\r\n                autocomplete.enhance('[data-action=change-user]', false, 'mod_assign/participant_selector', s);\r\n            }\r\n        ).fail(notification.exception);\r\n\r\n        $(document).bind(\"start-loading-user\", function() {\r\n            this._isLoading = true;\r\n        }.bind(this));\r\n        $(document).bind(\"finish-loading-user\", function() {\r\n            this._isLoading = false;\r\n        }.bind(this));\r\n    };\r\n\r\n    /** @property {Boolean} Boolean tracking active ajax requests. */\r\n    GradingNavigation.prototype._isLoading = false;\r\n\r\n    /** @property {String} Selector for the page region containing the user navigation. */\r\n    GradingNavigation.prototype._regionSelector = null;\r\n\r\n    /** @property {Array} The list of active filter keys */\r\n    GradingNavigation.prototype._filters = null;\r\n\r\n    /** @property {Array} The list of users */\r\n    GradingNavigation.prototype._users = null;\r\n\r\n    /** @property {JQuery} JQuery node for the page region containing the user navigation. */\r\n    GradingNavigation.prototype._region = null;\r\n\r\n    /** @property {String} Last active filters */\r\n    GradingNavigation.prototype._lastFilters = '';\r\n\r\n    /**\r\n     * Load the list of all users for this assignment.\r\n     *\r\n     * @private\r\n     * @method _loadAllUsers\r\n     * @return {Boolean} True if the user list was fetched.\r\n     */\r\n    GradingNavigation.prototype._loadAllUsers = function() {\r\n        var select = this._region.find('[data-action=change-user]');\r\n        var assignmentid = select.attr('data-assignmentid');\r\n        var groupid = select.attr('data-groupid');\r\n\r\n        var filterPanel = this._region.find('[data-region=\"configure-filters\"]');\r\n        var filter = filterPanel.find('select[name=\"filter\"]').val();\r\n        var workflowFilter = filterPanel.find('select[name=\"workflowfilter\"]');\r\n        if (workflowFilter) {\r\n            filter += ',' + workflowFilter.val();\r\n        }\r\n        var markerFilter = filterPanel.find('select[name=\"markerfilter\"]');\r\n        if (markerFilter) {\r\n            filter += ',' + markerFilter.val();\r\n        }\r\n\r\n        if (this._lastFilters == filter) {\r\n            return false;\r\n        }\r\n        this._lastFilters = filter;\r\n\r\n        ajax.call([{\r\n            methodname: 'mod_assign_list_participants',\r\n            args: {assignid: assignmentid, groupid: groupid, filter: '', onlyids: true, tablesort: true},\r\n            done: this._usersLoaded.bind(this),\r\n            fail: notification.exception\r\n        }]);\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Call back to rebuild the user selector and x of y info when the user list is updated.\r\n     *\r\n     * @private\r\n     * @method _usersLoaded\r\n     * @param {Array} users\r\n     */\r\n    GradingNavigation.prototype._usersLoaded = function(users) {\r\n        this._firstLoadUsers = false;\r\n        this._filteredUsers = this._users = users;\r\n        if (this._users.length) {\r\n            // Position the configure filters panel under the link that expands it.\r\n            var toggleLink = this._region.find('[data-region=\"user-filters\"]');\r\n            var configPanel = $(document.getElementById(toggleLink.attr('aria-controls')));\r\n\r\n            configPanel.find('select[name=\"filter\"]').trigger('change');\r\n        } else {\r\n            this._selectNoUser();\r\n        }\r\n        this._triggerNextUserEvent();\r\n    };\r\n\r\n    /**\r\n     * Close the configure filters panel if a click is detected outside of it.\r\n     *\r\n     * @private\r\n     * @method _checkClickOutsideConfigureFilters\r\n     * @param {Event} event\r\n     */\r\n    GradingNavigation.prototype._checkClickOutsideConfigureFilters = function(event) {\r\n        var configPanel = this._region.find('[data-region=\"configure-filters\"]');\r\n\r\n        if (!configPanel.is(event.target) && configPanel.has(event.target).length === 0) {\r\n            var toggleLink = this._region.find('[data-region=\"user-filters\"]');\r\n\r\n            configPanel.hide();\r\n            configPanel.attr('aria-hidden', 'true');\r\n            toggleLink.attr('aria-expanded', 'false');\r\n            $(document).unbind('click.mod_assign_grading_navigation');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Close the configure filters panel if a click is detected outside of it.\r\n     *\r\n     * @private\r\n     * @method _updateFilterPreference\r\n     * @param {Number} userId The current user id.\r\n     * @param {Array} filterList The list of current filter values.\r\n     * @param {Array} preferenceNames The names of the preferences to update\r\n     * @return {Promise} Resolved when all the preferences are updated.\r\n     */\r\n    GradingNavigation.prototype._updateFilterPreferences = function(userId, filterList, preferenceNames) {\r\n        var preferences = [],\r\n            i = 0;\r\n\r\n        if (filterList.length == 0 || this._firstLoadUsers) {\r\n            // Nothing to update.\r\n            var deferred = $.Deferred();\r\n            deferred.resolve();\r\n            return deferred;\r\n        }\r\n        // General filter.\r\n        // Set the user preferences to the current filters.\r\n        for (i = 0; i < filterList.length; i++) {\r\n            var newValue = filterList[i];\r\n            if (newValue == 'none') {\r\n                newValue = '';\r\n            }\r\n\r\n            preferences.push({\r\n                userid: userId,\r\n                name: preferenceNames[i],\r\n                value: newValue\r\n            });\r\n        }\r\n\r\n        return UserRepository.setUserPreferences(preferences);\r\n    };\r\n    /**\r\n     * Turn a filter on or off.\r\n     *\r\n     * @private\r\n     * @method _filterChanged\r\n     */\r\n    GradingNavigation.prototype._filterChanged = function() {\r\n        // There are 3 types of filter right now.\r\n        var filterPanel = this._region.find('[data-region=\"configure-filters\"]');\r\n        var filters = filterPanel.find('select');\r\n        var preferenceNames = [];\r\n\r\n        this._filters = [];\r\n        filters.each(function(idx, ele) {\r\n            var element = $(ele);\r\n            this._filters.push(element.val());\r\n            preferenceNames.push('assign_' + element.prop('name'));\r\n        }.bind(this));\r\n\r\n        // Update the active filter string.\r\n        var filterlist = [];\r\n        filterPanel.find('option:checked').each(function(idx, ele) {\r\n            filterlist[filterlist.length] = $(ele).text();\r\n        });\r\n        if (filterlist.length) {\r\n            this._region.find('[data-region=\"user-filters\"] span').text(filterlist.join(', '));\r\n        } else {\r\n            str.get_string('nofilters', 'mod_assign').done(function(s) {\r\n                this._region.find('[data-region=\"user-filters\"] span').text(s);\r\n            }.bind(this)).fail(notification.exception);\r\n        }\r\n\r\n        var select = this._region.find('[data-action=change-user]');\r\n        var currentUserID = select.data('currentuserid');\r\n        this._updateFilterPreferences(currentUserID, this._filters, preferenceNames).then(function() {\r\n            // Reload the list of users to apply the new filters.\r\n            if (!this._loadAllUsers()) {\r\n                var userid = parseInt(select.attr('data-selected'));\r\n                let foundIndex = null;\r\n                // Search the returned users for the current selection.\r\n                $.each(this._filteredUsers, function(index, user) {\r\n                    if (userid == user.id) {\r\n                        foundIndex = index;\r\n                    }\r\n                });\r\n\r\n                if (this._filteredUsers.length && foundIndex !== null) {\r\n                    this._selectUserById(this._filteredUsers[foundIndex].id);\r\n                } else {\r\n                    this._selectNoUser();\r\n                }\r\n\r\n            }\r\n        }.bind(this)).catch(notification.exception);\r\n        this._refreshCount();\r\n    };\r\n\r\n    /**\r\n     * Select no users, because no users match the filters.\r\n     *\r\n     * @private\r\n     * @method _selectNoUser\r\n     */\r\n    GradingNavigation.prototype._selectNoUser = function() {\r\n        // Detect unsaved changes, and offer to save them - otherwise change user right now.\r\n        if (this._isLoading) {\r\n            return;\r\n        }\r\n        if (checker.checkFormForChanges('[data-region=\"grade-panel\"] .gradeform')) {\r\n            // Form has changes, so we need to confirm before switching users.\r\n            str.get_strings([\r\n                {key: 'unsavedchanges', component: 'mod_assign'},\r\n                {key: 'unsavedchangesquestion', component: 'mod_assign'},\r\n                {key: 'saveandcontinue', component: 'mod_assign'},\r\n                {key: 'cancel', component: 'core'},\r\n            ]).done(function(strs) {\r\n                notification.confirm(strs[0], strs[1], strs[2], strs[3], function() {\r\n                    $(document).trigger('save-changes', -1);\r\n                });\r\n            });\r\n        } else {\r\n            $(document).trigger('user-changed', -1);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Select the specified user by id.\r\n     *\r\n     * @private\r\n     * @method _selectUserById\r\n     * @param {Number} userid\r\n     */\r\n    GradingNavigation.prototype._selectUserById = function(userid) {\r\n        var select = this._region.find('[data-action=change-user]');\r\n        var useridnumber = parseInt(userid, 10);\r\n\r\n        // Detect unsaved changes, and offer to save them - otherwise change user right now.\r\n        if (this._isLoading) {\r\n            return;\r\n        }\r\n        if (checker.checkFormForChanges('[data-region=\"grade-panel\"] .gradeform')) {\r\n            // Form has changes, so we need to confirm before switching users.\r\n            str.get_strings([\r\n                {key: 'unsavedchanges', component: 'mod_assign'},\r\n                {key: 'unsavedchangesquestion', component: 'mod_assign'},\r\n                {key: 'saveandcontinue', component: 'mod_assign'},\r\n                {key: 'cancel', component: 'core'},\r\n            ]).done(function(strs) {\r\n                notification.confirm(strs[0], strs[1], strs[2], strs[3], function() {\r\n                    $(document).trigger('save-changes', useridnumber);\r\n                });\r\n            });\r\n        } else {\r\n            select.attr('data-selected', userid);\r\n\r\n            // If we have some filtered users, and userid is specified, then trigger change.\r\n            if (this._filteredUsers.length > 0 && !isNaN(useridnumber) && useridnumber > 0) {\r\n                $(document).trigger('user-changed', useridnumber);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Expand or collapse the filter config panel.\r\n     *\r\n     * @private\r\n     * @method _toggleExpandFilters\r\n     * @param {Event} event\r\n     */\r\n    GradingNavigation.prototype._toggleExpandFilters = function(event) {\r\n        event.preventDefault();\r\n        var toggleLink = $(event.target).closest('[data-region=\"user-filters\"]');\r\n        var expanded = toggleLink.attr('aria-expanded') == 'true';\r\n        var configPanel = $(document.getElementById(toggleLink.attr('aria-controls')));\r\n\r\n        if (expanded) {\r\n            configPanel.hide();\r\n            configPanel.attr('aria-hidden', 'true');\r\n            toggleLink.attr('aria-expanded', 'false');\r\n            $(document).unbind('click.mod_assign_grading_navigation');\r\n        } else {\r\n            configPanel.css('display', 'inline-block');\r\n            configPanel.attr('aria-hidden', 'false');\r\n            toggleLink.attr('aria-expanded', 'true');\r\n            event.stopPropagation();\r\n            $(document).on('click.mod_assign_grading_navigation', this._checkClickOutsideConfigureFilters.bind(this));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset table preferences.\r\n     *\r\n     * @private\r\n     * @method _toggleResetTable\r\n     */\r\n    GradingNavigation.prototype._toggleResetTable = function() {\r\n        let url = new URL(window.location);\r\n        url.searchParams.set('treset', '1');\r\n        window.location.href = url;\r\n    };\r\n\r\n    /**\r\n     * Change to the previous user in the grading list.\r\n     *\r\n     * @private\r\n     * @method _handlePreviousUser\r\n     * @param {Event} e\r\n     */\r\n    GradingNavigation.prototype._handlePreviousUser = function(e) {\r\n        e.preventDefault();\r\n        var select = this._region.find('[data-action=change-user]');\r\n        var currentUserId = select.attr('data-selected');\r\n        var i = 0;\r\n        var currentIndex = 0;\r\n\r\n        for (i = 0; i < this._filteredUsers.length; i++) {\r\n            if (this._filteredUsers[i].id == currentUserId) {\r\n                currentIndex = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        var count = this._filteredUsers.length;\r\n        var newIndex = (currentIndex - 1);\r\n        if (newIndex < 0) {\r\n            newIndex = count - 1;\r\n        }\r\n\r\n        if (count) {\r\n            this._selectUserById(this._filteredUsers[newIndex].id);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Change to the next user in the grading list.\r\n     *\r\n     * @param {Event} e\r\n     * @param {Boolean} saved Has the form already been saved? Skips checking for changes if true.\r\n     */\r\n    GradingNavigation.prototype._handleNextUser = function(e, saved) {\r\n        e.preventDefault();\r\n        var select = this._region.find('[data-action=change-user]');\r\n        var currentUserId = select.attr('data-selected');\r\n        var i = 0;\r\n        var currentIndex = 0;\r\n\r\n        for (i = 0; i < this._filteredUsers.length; i++) {\r\n            if (this._filteredUsers[i].id == currentUserId) {\r\n                currentIndex = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        var count = this._filteredUsers.length;\r\n        var newIndex = (currentIndex + 1) % count;\r\n\r\n        if (saved && count) {\r\n            // If we've already saved the grade, skip checking if we've made any changes.\r\n            var userid = this._filteredUsers[newIndex].id;\r\n            var useridnumber = parseInt(userid, 10);\r\n            select.attr('data-selected', userid);\r\n            if (!isNaN(useridnumber) && useridnumber > 0) {\r\n                $(document).trigger('user-changed', userid);\r\n            }\r\n        } else if (count) {\r\n            this._selectUserById(this._filteredUsers[newIndex].id);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set count string. This method only sets the value for the last time it was ever called to deal\r\n     * with promises that return in a non-predictable order.\r\n     *\r\n     * @private\r\n     * @method _setCountString\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    GradingNavigation.prototype._setCountString = function(x, y) {\r\n        var updateNumber = 0;\r\n        this._lastXofYUpdate++;\r\n        updateNumber = this._lastXofYUpdate;\r\n\r\n        var param = {x: x, y: y};\r\n        str.get_string('xofy', 'mod_assign', param).done(function(s) {\r\n            if (updateNumber == this._lastXofYUpdate) {\r\n                this._region.find('[data-region=\"user-count-summary\"]').text(s);\r\n            }\r\n        }.bind(this)).fail(notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Rebuild the x of y string.\r\n     *\r\n     * @private\r\n     * @method _refreshCount\r\n     */\r\n    GradingNavigation.prototype._refreshCount = function() {\r\n        var select = this._region.find('[data-action=change-user]');\r\n        var userid = select.attr('data-selected');\r\n        var i = 0;\r\n        var currentIndex = 0;\r\n\r\n        if (isNaN(userid) || userid <= 0) {\r\n            this._region.find('[data-region=\"user-count\"]').hide();\r\n        } else {\r\n            this._region.find('[data-region=\"user-count\"]').show();\r\n\r\n            for (i = 0; i < this._filteredUsers.length; i++) {\r\n                if (this._filteredUsers[i].id == userid) {\r\n                    currentIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            var count = this._filteredUsers.length;\r\n            if (count) {\r\n                currentIndex += 1;\r\n            }\r\n            this._setCountString(currentIndex, count);\r\n            // Update window URL\r\n            if (currentIndex > 0) {\r\n                var url = new URL(window.location);\r\n                if (parseInt(url.searchParams.get('blindid')) > 0) {\r\n                    var newid = this._filteredUsers[currentIndex - 1].recordid;\r\n                    url.searchParams.set('blindid', newid);\r\n                } else {\r\n                    url.searchParams.set('userid', userid);\r\n                }\r\n                // We do this so a browser refresh will return to the same user.\r\n                window.history.replaceState({}, \"\", url);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Respond to a user-changed event by updating the selector.\r\n     *\r\n     * @private\r\n     * @method _refreshSelector\r\n     * @param {Event} event\r\n     * @param {String} userid\r\n     */\r\n    GradingNavigation.prototype._refreshSelector = function(event, userid) {\r\n        var select = this._region.find('[data-action=change-user]');\r\n        userid = parseInt(userid, 10);\r\n\r\n        if (!isNaN(userid) && userid > 0) {\r\n            select.attr('data-selected', userid);\r\n        }\r\n        this._refreshCount();\r\n    };\r\n\r\n    /**\r\n     * Trigger the next user event depending on the number of filtered users\r\n     *\r\n     * @private\r\n     * @method _triggerNextUserEvent\r\n     */\r\n    GradingNavigation.prototype._triggerNextUserEvent = function() {\r\n        if (this._filteredUsers.length > 1) {\r\n            $(document).trigger('next-user', {nextUserId: null, nextUser: true});\r\n        } else {\r\n            $(document).trigger('next-user', {nextUser: false});\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Change to a different user in the grading list.\r\n     *\r\n     * @private\r\n     * @method _handleChangeUser\r\n     */\r\n    GradingNavigation.prototype._handleChangeUser = function() {\r\n        var select = this._region.find('[data-action=change-user]');\r\n        var userid = parseInt(select.val(), 10);\r\n\r\n        if (this._isLoading) {\r\n            return;\r\n        }\r\n        if (checker.checkFormForChanges('[data-region=\"grade-panel\"] .gradeform')) {\r\n            // Form has changes, so we need to confirm before switching users.\r\n            str.get_strings([\r\n                {key: 'unsavedchanges', component: 'mod_assign'},\r\n                {key: 'unsavedchangesquestion', component: 'mod_assign'},\r\n                {key: 'saveandcontinue', component: 'mod_assign'},\r\n                {key: 'cancel', component: 'core'},\r\n            ]).done(function(strs) {\r\n                notification.confirm(strs[0], strs[1], strs[2], strs[3], function() {\r\n                    $(document).trigger('save-changes', userid);\r\n                });\r\n            });\r\n        } else {\r\n            if (!isNaN(userid) && userid > 0) {\r\n                select.attr('data-selected', userid);\r\n\r\n                $(document).trigger('user-changed', userid);\r\n            }\r\n        }\r\n    };\r\n\r\n    return GradingNavigation;\r\n});\r\n"],"names":["define","$","notification","str","autocomplete","ajax","UserRepository","checker","GradingNavigation","selector","this","_regionSelector","_region","_filters","_users","_filteredUsers","_lastXofYUpdate","_firstLoadUsers","url","URL","window","location","parseInt","searchParams","get","delete","history","replaceState","_loadAllUsers","find","on","_handlePreviousUser","bind","_handleNextUser","_handleChangeUser","_toggleExpandFilters","_toggleResetTable","document","_refreshSelector","toggleLink","getElementById","attr","_filterChanged","userid","data","_selectUserById","get_string","done","s","enhance","fail","exception","_isLoading","prototype","_lastFilters","select","assignmentid","groupid","filterPanel","filter","val","workflowFilter","markerFilter","call","methodname","args","assignid","onlyids","tablesort","_usersLoaded","users","length","trigger","_selectNoUser","_triggerNextUserEvent","_checkClickOutsideConfigureFilters","event","configPanel","is","target","has","hide","unbind","_updateFilterPreferences","userId","filterList","preferenceNames","preferences","i","deferred","Deferred","resolve","newValue","push","name","value","setUserPreferences","filters","each","idx","ele","element","prop","filterlist","text","join","currentUserID","then","foundIndex","index","user","id","catch","_refreshCount","checkFormForChanges","get_strings","key","component","strs","confirm","useridnumber","isNaN","preventDefault","closest","expanded","css","stopPropagation","set","href","e","currentUserId","currentIndex","count","newIndex","saved","_setCountString","x","y","updateNumber","param","show","newid","recordid","nextUserId","nextUser"],"mappings":"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"}