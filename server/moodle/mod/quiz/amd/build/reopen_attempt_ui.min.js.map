{"version":3,"file":"reopen_attempt_ui.min.js","sources":["../src/reopen_attempt_ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * This module has the code to make the Re-open attempt button work, if present.\r\n *\r\n * That is, it looks for buttons with HTML like\r\n * &lt;button type=\"button\" data-action=\"reopen-attempt\" data-attempt-id=\"227000\" data-after-action-url=\"/mod/quiz/report.php\">\r\n * and if that is clicked, it first shows an 'Are you sure' pop-up, and if they are sure,\r\n * the attempt is re-opened, and then the page reloads.\r\n *\r\n * @module    mod_quiz/reopen_attempt_ui\r\n * @copyright 2023 The Open University\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {exception as displayException} from 'core/notification';\r\nimport {call as fetchMany} from 'core/ajax';\r\nimport {getString} from 'core/str';\r\nimport {saveCancelPromise} from 'core/notification';\r\n\r\n/**\r\n * Handle a click if it is on one of our buttons.\r\n *\r\n * @param {MouseEvent} e the click event.\r\n */\r\nconst reopenButtonClicked = async(e) => {\r\n    if (!(e.target instanceof HTMLElement) || !e.target.matches('button[data-action=\"reopen-attempt\"]')) {\r\n        return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    const attemptId = e.target.dataset.attemptId;\r\n\r\n    try {\r\n        // We fetch the confirmation message from the server now, so the message is based\r\n        // on the latest state of the attempt, rather than when the containing page loaded.\r\n        const messages = fetchMany([{\r\n            methodname: 'mod_quiz_get_reopen_attempt_confirmation',\r\n            args: {\r\n                \"attemptid\": attemptId,\r\n            },\r\n        }]);\r\n\r\n        await saveCancelPromise(\r\n            getString('reopenattemptareyousuretitle', 'mod_quiz'),\r\n            messages[0],\r\n            getString('reopenattempt', 'mod_quiz'),\r\n            {triggerElement: e.target},\r\n       );\r\n\r\n        await (fetchMany([{\r\n            methodname: 'mod_quiz_reopen_attempt',\r\n            args: {\r\n                \"attemptid\": attemptId,\r\n            },\r\n        }])[0]);\r\n        window.location = M.cfg.wwwroot + e.target.dataset.afterActionUrl;\r\n\r\n    } catch (error) {\r\n        if (error.type === 'modal-save-cancel:cancel') {\r\n            // User clicked Cancel, so do nothing.\r\n            return;\r\n        }\r\n        await displayException(error);\r\n    }\r\n};\r\n\r\nexport const init = () => {\r\n    document.addEventListener('click', reopenButtonClicked);\r\n};\r\n"],"names":["reopenButtonClicked","async","e","target","HTMLElement","matches","preventDefault","attemptId","dataset","messages","fetchMany","methodname","args","attemptid","saveCancelPromise","getString","triggerElement","call","window","location","M","cfg","wwwroot","afterActionUrl","error","type","displayException","_exports","init","document","addEventListener"],"mappings":";;;;;;;;;;;;;AAsCA,MAAMA,oBAAsBC,UACxB,KAAMC,EAAEC,kBAAkBC,aAAiBF,EAAEC,OAAOE,QAAQ,yCACxD,OAGJH,EAAEI,iBACF,MAAMC,UAAYL,EAAEC,OAAOK,QAAQD,UAEnC,IAGI,MAAME,UAAW,EAAAC,MAAAA,MAAU,CAAC,CACxBC,WAAY,2CACZC,KAAM,CACFC,UAAaN,oBAIf,EAAAO,kCACF,EAAAC,gBAAU,+BAAgC,YAC1CN,SAAS,IACT,EAAAM,KAAAA,WAAU,gBAAiB,YAC3B,CAACC,eAAgBd,EAAEC,eAGhB,EAAAO,MAASO,MAAC,CAAC,CACdN,WAAY,0BACZC,KAAM,CACFC,UAAaN,cAEjB,GACJW,OAAOC,SAAWC,EAAEC,IAAIC,QAAUpB,EAAEC,OAAOK,QAAQe,cAEtD,CAAC,MAAOC,OACL,GAAmB,6BAAfA,MAAMC,KAEN,aAEE,EAAAC,cAAAA,WAAiBF,MAC3B,GAKFG,SAAAC,KAFkBA,KAChBC,SAASC,iBAAiB,QAAS9B,oBAAoB,CACzD"}