{"version":3,"file":"modal_quiz_question_bank.min.js","sources":["../src/modal_quiz_question_bank.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Contain the logic for the question bank modal.\r\n *\r\n * @module     mod_quiz/modal_quiz_question_bank\r\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport $ from 'jquery';\r\nimport Modal from './add_question_modal';\r\nimport * as Fragment from 'core/fragment';\r\nimport * as FormChangeChecker from 'core_form/changechecker';\r\nimport * as ModalEvents from 'core/modal_events';\r\n\r\nconst SELECTORS = {\r\n    ADD_TO_QUIZ_CONTAINER: 'td.addtoquizaction',\r\n    ANCHOR: 'a[href]',\r\n    PREVIEW_CONTAINER: 'td.previewquestionaction',\r\n    ADD_QUESTIONS_FORM: 'form#questionsubmit',\r\n    SORTERS: '.sorters',\r\n};\r\n\r\nexport default class ModalQuizQuestionBank extends Modal {\r\n    static TYPE = 'mod_quiz-quiz-question-bank';\r\n\r\n    /**\r\n     * Create the question bank modal.\r\n     *\r\n     * @param {Number} contextId Current context id.\r\n     */\r\n    static init(contextId) {\r\n        const selector = '.menu [data-action=\"questionbank\"]';\r\n        document.addEventListener('click', (e) => {\r\n            const trigger = e.target.closest(selector);\r\n            if (!trigger) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n\r\n            ModalQuizQuestionBank.create({\r\n                contextId,\r\n                title: trigger.dataset.header,\r\n                addOnPage: trigger.dataset.addonpage,\r\n                templateContext: {\r\n                    hidden: true,\r\n                },\r\n                large: true,\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Override the parent show function.\r\n     *\r\n     * Reload the body contents when the modal is shown. The current\r\n     * window URL is used to inform the new content that should be\r\n     * displayed.\r\n     *\r\n     * @method show\r\n     * @return {void}\r\n     */\r\n    show() {\r\n        this.reloadBodyContent(window.location.search);\r\n        return super.show(this);\r\n    }\r\n\r\n    /**\r\n     * Replaces the current body contents with a new version of the question\r\n     * bank.\r\n     *\r\n     * The contents of the question bank are generated using the provided\r\n     * query string.\r\n     *\r\n     * @method reloadBodyContent\r\n     * @param {string} querystring URL encoded string.\r\n     */\r\n    reloadBodyContent(querystring) {\r\n        // Load the question bank fragment to be displayed in the modal.\r\n        this.setBody(Fragment.loadFragment(\r\n            'mod_quiz',\r\n            'quiz_question_bank',\r\n            this.getContextId(),\r\n            {\r\n                querystring,\r\n            }\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Update the URL of the anchor element that the user clicked on to make\r\n     * sure that the question is added to the correct page.\r\n     *\r\n     * @method handleAddToQuizEvent\r\n     * @param {event} e A JavaScript event\r\n     * @param {object} anchorElement The anchor element that was triggered\r\n     */\r\n    handleAddToQuizEvent(e, anchorElement) {\r\n        // If the user clicks the plus icon to add the question to the page\r\n        // directly then we need to intercept the click in order to adjust the\r\n        // href and include the correct add on page id before the page is\r\n        // redirected.\r\n        const href = new URL(anchorElement.attr('href'));\r\n        href.searchParams.set('addonpage', this.getAddOnPageId());\r\n        anchorElement.attr('href', href);\r\n    }\r\n\r\n    /**\r\n     * Set up all of the event handling for the modal.\r\n     *\r\n     * @method registerEventListeners\r\n     */\r\n    registerEventListeners() {\r\n        // Apply parent event listeners.\r\n        super.registerEventListeners(this);\r\n\r\n        this.getModal().on('submit', SELECTORS.ADD_QUESTIONS_FORM, (e) => {\r\n            // If the user clicks on the \"Add selected questions to the quiz\" button to add some questions to the page\r\n            // then we need to intercept the submit in order to include the correct \"add on page id\" before the form is\r\n            // submitted.\r\n            const formElement = $(e.currentTarget);\r\n\r\n            $('<input />').attr('type', 'hidden')\r\n                .attr('name', \"addonpage\")\r\n                .attr('value', this.getAddOnPageId())\r\n                .appendTo(formElement);\r\n        });\r\n\r\n        this.getModal().on('click', SELECTORS.ANCHOR, (e) => {\r\n            const anchorElement = $(e.currentTarget);\r\n\r\n            // If the anchor element was the add to quiz link.\r\n            if (anchorElement.closest(SELECTORS.ADD_TO_QUIZ_CONTAINER).length) {\r\n                this.handleAddToQuizEvent(e, anchorElement);\r\n                return;\r\n            }\r\n\r\n            // If the anchor element was a preview question link.\r\n            if (anchorElement.closest(SELECTORS.PREVIEW_CONTAINER).length) {\r\n                return;\r\n            }\r\n\r\n            // Sorting links have their own handler.\r\n            if (anchorElement.closest(SELECTORS.SORTERS).length) {\r\n                return;\r\n            }\r\n\r\n            // Anything else means reload the pop-up contents.\r\n            e.preventDefault();\r\n            this.reloadBodyContent(anchorElement.prop('search'));\r\n        });\r\n\r\n        // Disable the form change checker when the body is rendered.\r\n        this.getRoot().on(ModalEvents.bodyRendered, () => {\r\n            // Make sure the form change checker is disabled otherwise it'll stop the user from navigating away from the\r\n            // page once the modal is hidden.\r\n            FormChangeChecker.disableAllChecks();\r\n        });\r\n    }\r\n}\r\n\r\nModalQuizQuestionBank.registerModalType();\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireDefault","_jquery","_add_question_modal","Fragment","FormChangeChecker","ModalEvents","SELECTORS","ModalQuizQuestionBank","Modal","static","init","contextId","document","addEventListener","trigger","target","closest","preventDefault","create","title","dataset","header","addOnPage","addonpage","templateContext","hidden","large","show","this","reloadBodyContent","window","location","search","super","querystring","setBody","loadFragment","getContextId","handleAddToQuizEvent","anchorElement","href","URL","attr","searchParams","getAddOnPageId","registerEventListeners","getModal","on","formElement","$","currentTarget","appendTo","length","prop","getRoot","bodyRendered","disableAllChecks","_exports","registerModalType"],"mappings":"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"}