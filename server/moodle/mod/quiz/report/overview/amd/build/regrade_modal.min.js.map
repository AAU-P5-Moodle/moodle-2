{"version":3,"file":"regrade_modal.min.js","sources":["../src/regrade_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Regrade modal form is used to regrade or dryrun the attempts and questions.\r\n *\r\n * @module quiz_overview/regrade_modal\r\n * @copyright 2024 The Open University\r\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Modal from 'core/modal';\r\nimport Templates from 'core/templates';\r\nimport {getString} from 'core/str';\r\nimport Notification from 'core/notification';\r\n\r\n/**\r\n * @type {Object} selectors used in this code.\r\n */\r\nconst SELECTORS = {\r\n    'allQuestionsButton': '#regradeallquestions',\r\n    'dryRunButton': '#dryrunbutton',\r\n    'mainTableForm': '#attemptsform',\r\n    'questionCheckbox': '[id^=\"regradeslot\"]',\r\n    'regradeAttemptsButtonId': 'regradeattempts',\r\n    'regradeButton': '#regradebutton',\r\n    'reportTableSelectedAttempts': '[id^=\"attemptid_\"]:checked',\r\n};\r\n\r\n/**\r\n * Show the regrade modal.\r\n *\r\n * @param {Event} e click event that opened the modal.\r\n * @returns {Promise<void>}\r\n */\r\nconst showModal = async(e) => {\r\n    e.preventDefault();\r\n    try {\r\n        let hiddenInputs = [];\r\n        document.querySelectorAll(SELECTORS.mainTableForm + ' input[type=hidden]').forEach((hiddenInput) => {\r\n            hiddenInputs.push({'name': hiddenInput.name, 'value': hiddenInput.value});\r\n        });\r\n        document.querySelectorAll(SELECTORS.reportTableSelectedAttempts).forEach((selectedAttempt) => {\r\n            hiddenInputs.push({'name': selectedAttempt.name, 'value': selectedAttempt.value});\r\n        });\r\n        const modal = await Modal.create({\r\n            title: getString('regrade', 'quiz_overview'),\r\n            body: Templates.render('quiz_overview/regrade_modal_body', {\r\n                'actionurl': document.querySelector(SELECTORS.mainTableForm).action,\r\n                'hasselectedattempts': document.querySelector(SELECTORS.reportTableSelectedAttempts) !== null,\r\n                'questions': JSON.parse(document.getElementById(SELECTORS.regradeAttemptsButtonId).dataset.slots),\r\n                'hiddeninputs': hiddenInputs,\r\n            }),\r\n            isVerticallyCentered: true,\r\n            removeOnClose: true,\r\n            show: true,\r\n        });\r\n        modal.getRoot()[0].addEventListener('change', updateButtonStates);\r\n        modal.getBodyPromise().then(updateButtonStates).catch(Notification.exception);\r\n\r\n        // TODO MDL-82204 - there is not currently a good way to add a help icon to a modal overall, so we do it this way.\r\n        modal.getTitlePromise().then((title) => {\r\n            title.append(' ' + document.getElementById(SELECTORS.regradeAttemptsButtonId).dataset.helpIcon);\r\n            // The next line is necessary to get a nice layout of the help icon.\r\n            title[0].querySelector('a').classList.add('align-baseline');\r\n            return title[0];\r\n        }).catch(Notification.exception);\r\n    } catch (ex) {\r\n        await Notification.exception(ex);\r\n    }\r\n};\r\n\r\n/**\r\n * Enables and disables controls when the selected options are changed.\r\n */\r\nconst updateButtonStates = () => {\r\n    const allQuestionsButton = document.querySelector(SELECTORS.allQuestionsButton);\r\n\r\n    // Question checkboxes enabled only if Selected questions is checked.\r\n    document.querySelectorAll(SELECTORS.questionCheckbox).forEach((questionCheckbox) => {\r\n        questionCheckbox.disabled = allQuestionsButton.checked;\r\n    });\r\n\r\n    // State of submit buttons.\r\n    const isAnyQuestionSelected = document.querySelector(SELECTORS.questionCheckbox + ':checked') !== null;\r\n    const canSubmit = allQuestionsButton.checked || isAnyQuestionSelected;\r\n    document.querySelector(SELECTORS.regradeButton).disabled = !canSubmit;\r\n    document.querySelector(SELECTORS.dryRunButton).disabled = !canSubmit;\r\n};\r\n\r\n/**\r\n * Initialize the regrade button to open the modal.\r\n */\r\nexport const init = () => {\r\n    const regradeButton = document.getElementById(SELECTORS.regradeAttemptsButtonId);\r\n    if (!regradeButton) {\r\n        return;\r\n    }\r\n\r\n    regradeButton.addEventListener('click', showModal);\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_modal","_templates","_notification","SELECTORS","showModal","async","preventDefault","hiddenInputs","document","querySelectorAll","forEach","hiddenInput","push","name","value","selectedAttempt","modal","Modal","create","title","getString","body","Templates","render","actionurl","querySelector","action","hasselectedattempts","questions","JSON","parse","getElementById","dataset","slots","hiddeninputs","isVerticallyCentered","removeOnClose","show","getRoot","addEventListener","updateButtonStates","getBodyPromise","then","catch","Notification","exception","getTitlePromise","append","helpIcon","classList","add","ex","allQuestionsButton","questionCheckbox","disabled","checked","isAnyQuestionSelected","canSubmit","_exports","init","regradeButton"],"mappings":"uKA0B6C,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;kFAH7CG,OAAAJ,uBAAAI,QACAC,WAAAL,uBAAAK,YAEAC,cAAAN,uBAAAM,eAKA,MAAMC,6BACoB,uBADpBA,uBAEc,gBAFdA,wBAGe,gBAHfA,2BAIkB,sBAJlBA,kCAKyB,kBALzBA,wBAMe,iBANfA,sCAO6B,6BAS7BC,UAAYC,UACdR,EAAES,iBACF,IACI,IAAIC,aAAe,GACnBC,SAASC,iBAAiBN,wBAA0B,uBAAuBO,SAASC,cAChFJ,aAAaK,KAAK,CAACC,KAAQF,YAAYE,KAAMC,MAASH,YAAYG,OAAO,IAE7EN,SAASC,iBAAiBN,uCAAuCO,SAASK,kBACtER,aAAaK,KAAK,CAACC,KAAQE,gBAAgBF,KAAMC,MAASC,gBAAgBD,OAAO,IAErF,MAAME,YAAcC,OAAKlB,QAACmB,OAAO,CAC7BC,OAAO,EAAAC,KAAAA,WAAU,UAAW,iBAC5BC,KAAMC,WAASvB,QAACwB,OAAO,mCAAoC,CACvDC,UAAahB,SAASiB,cAActB,yBAAyBuB,OAC7DC,oBAAyF,OAAlEnB,SAASiB,cAActB,uCAC9CyB,UAAaC,KAAKC,MAAMtB,SAASuB,eAAe5B,mCAAmC6B,QAAQC,OAC3FC,aAAgB3B,eAEpB4B,sBAAsB,EACtBC,eAAe,EACfC,MAAM,IAEVrB,MAAMsB,UAAU,GAAGC,iBAAiB,SAAUC,oBAC9CxB,MAAMyB,iBAAiBC,KAAKF,oBAAoBG,MAAMC,cAAY7C,QAAC8C,WAGnE7B,MAAM8B,kBAAkBJ,MAAMvB,QAC1BA,MAAM4B,OAAO,IAAMvC,SAASuB,eAAe5B,mCAAmC6B,QAAQgB,UAEtF7B,MAAM,GAAGM,cAAc,KAAKwB,UAAUC,IAAI,kBACnC/B,MAAM,MACdwB,MAAMC,cAAY7C,QAAC8C,UACzB,CAAC,MAAOM,UACCP,cAAY7C,QAAC8C,UAAUM,GACjC,GAMEX,mBAAqBA,KACvB,MAAMY,mBAAqB5C,SAASiB,cAActB,8BAGlDK,SAASC,iBAAiBN,4BAA4BO,SAAS2C,mBAC3DA,iBAAiBC,SAAWF,mBAAmBG,OAAO,IAI1D,MAAMC,sBAA4F,OAApEhD,SAASiB,cAActB,2BAA6B,YAC5EsD,UAAYL,mBAAmBG,SAAWC,sBAChDhD,SAASiB,cAActB,yBAAyBmD,UAAYG,UAC5DjD,SAASiB,cAActB,wBAAwBmD,UAAYG,SAAS,EAatEC,SAAAC,KAPkBA,KAChB,MAAMC,cAAgBpD,SAASuB,eAAe5B,mCACzCyD,eAILA,cAAcrB,iBAAiB,QAASnC,UAAU,CACpD"}