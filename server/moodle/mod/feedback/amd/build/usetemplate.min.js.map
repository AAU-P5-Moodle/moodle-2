{"version":3,"file":"usetemplate.min.js","sources":["../src/usetemplate.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript module for using an existing template\r\n *\r\n * @module      mod_feedback/usetemplate\r\n * @copyright   2021 Peter Dias\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport ModalForm from 'core_form/modalform';\r\nimport Notification from 'core/notification';\r\nimport {getString} from 'core/str';\r\n\r\nconst selectors = {\r\n    modaltrigger: '[data-action=\"usetemplate\"]',\r\n};\r\n\r\n/**\r\n * Initialize module\r\n */\r\nexport const init = () => {\r\n    const trigger = document.querySelector(selectors.modaltrigger);\r\n\r\n    trigger.addEventListener('click', event => {\r\n        event.preventDefault();\r\n\r\n        const modalForm = new ModalForm({\r\n            modalConfig: {\r\n                title: getString('use_this_template', 'mod_feedback'),\r\n            },\r\n            formClass: 'mod_feedback\\\\form\\\\use_template_form',\r\n            args: {\r\n                id: trigger.getAttribute('data-dataid'),\r\n                templateid: trigger.getAttribute('data-templateid')\r\n            },\r\n            saveButtonText: getString('save', 'core')\r\n        });\r\n\r\n        // Show a toast notification when the form is submitted.\r\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, event => {\r\n            if (event.detail.result) {\r\n                window.location.assign(event.detail.url);\r\n            } else {\r\n                Notification.addNotification({\r\n                    type: 'error',\r\n                    message:  getString('saving_failed', 'mod_feedback')\r\n                });\r\n            }\r\n        });\r\n\r\n        modalForm.show();\r\n    });\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_modalform","_notification","selectors","_exports","init","trigger","document","querySelector","addEventListener","event","preventDefault","modalForm","ModalForm","modalConfig","title","getString","formClass","args","id","getAttribute","templateid","saveButtonText","events","FORM_SUBMITTED","detail","result","window","location","assign","url","Notification","addNotification","type","message","show"],"mappings":"qJAwB6C,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;kFAD7CG,WAAAJ,uBAAAI,YACAC,cAAAL,uBAAAK,eAGA,MAAMC,uBACY,8BAsChBC,SAAAC,KAhCkBA,KAChB,MAAMC,QAAUC,SAASC,cAAcL,wBAEvCG,QAAQG,iBAAiB,SAASC,QAC9BA,MAAMC,iBAEN,MAAMC,UAAY,IAAIC,WAAAA,QAAU,CAC5BC,YAAa,CACTC,OAAO,EAAAC,KAAAA,WAAU,oBAAqB,iBAE1CC,UAAW,wCACXC,KAAM,CACFC,GAAIb,QAAQc,aAAa,eACzBC,WAAYf,QAAQc,aAAa,oBAErCE,gBAAgB,EAAAN,KAAAA,WAAU,OAAQ,UAItCJ,UAAUH,iBAAiBG,UAAUW,OAAOC,gBAAgBd,QACpDA,MAAMe,OAAOC,OACbC,OAAOC,SAASC,OAAOnB,MAAMe,OAAOK,KAEpCC,cAAY/B,QAACgC,gBAAgB,CACzBC,KAAM,QACNC,SAAU,EAAAlB,KAAAA,WAAU,gBAAiB,iBAE7C,IAGJJ,UAAUuB,MAAM,GAClB,CACJ"}