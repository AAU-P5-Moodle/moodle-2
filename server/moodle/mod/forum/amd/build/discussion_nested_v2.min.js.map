{"version":3,"file":"discussion_nested_v2.min.js","sources":["../src/discussion_nested_v2.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module for viewing a discussion in nested v2 view.\r\n *\r\n * @module mod_forum/discussion_nested_v2\r\n * @copyright  2019 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport $ from 'jquery';\r\nimport AutoRows from 'core/auto_rows';\r\nimport CustomEvents from 'core/custom_interaction_events';\r\nimport * as FormChangeChecker from 'core_form/changechecker';\r\nimport Notification from 'core/notification';\r\nimport Templates from 'core/templates';\r\nimport Discussion from 'mod_forum/discussion';\r\nimport InPageReply from 'mod_forum/inpage_reply';\r\nimport LockToggle from 'mod_forum/lock_toggle';\r\nimport FavouriteToggle from 'mod_forum/favourite_toggle';\r\nimport Pin from 'mod_forum/pin_toggle';\r\nimport Selectors from 'mod_forum/selectors';\r\nimport Subscribe from 'mod_forum/subscription_toggle';\r\n\r\nconst ANIMATION_DURATION = 150;\r\n\r\n/**\r\n * Get the closest post container element from the given element.\r\n *\r\n * @param {Object} element jQuery element to search from\r\n * @return {Object} jQuery element\r\n */\r\nconst getPostContainer = (element) => {\r\n    return element.closest(Selectors.post.post);\r\n};\r\n\r\n/**\r\n * Get the closest post container element from the given element.\r\n *\r\n * @param {Object} element jQuery element to search from\r\n * @param {Number} id Id of the post to find.\r\n * @return {Object} jQuery element\r\n */\r\nconst getPostContainerById = (element, id) => {\r\n    return element.find(`${Selectors.post.post}[data-post-id=${id}]`);\r\n};\r\n\r\n/**\r\n * Get the parent post container elements from the given element.\r\n *\r\n * @param {Object} element jQuery element to search from\r\n * @return {Object} jQuery element\r\n */\r\nconst getParentPostContainers = (element) => {\r\n    return element.parents(Selectors.post.post);\r\n};\r\n\r\n/**\r\n * Get the post content container element from the post container element.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery element\r\n */\r\nconst getPostContentContainer = (postContainer) => {\r\n    return postContainer.children().not(Selectors.post.repliesContainer).find(Selectors.post.forumCoreContent);\r\n};\r\n\r\n/**\r\n * Get the in page reply container element from the post container element.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery element\r\n */\r\nconst getInPageReplyContainer = (postContainer) => {\r\n    return postContainer.children().filter(Selectors.post.inpageReplyContainer);\r\n};\r\n\r\n/**\r\n * Get the in page reply form element from the post container element.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery element\r\n */\r\nconst getInPageReplyForm = (postContainer) => {\r\n    return getInPageReplyContainer(postContainer).find(Selectors.post.inpageReplyContent);\r\n};\r\n\r\n/**\r\n * Get the in page reply create (reply) button element from the post container element.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery element\r\n */\r\nconst getInPageReplyCreateButton = (postContainer) => {\r\n    return getPostContentContainer(postContainer).find(Selectors.post.inpageReplyCreateButton);\r\n};\r\n\r\n/**\r\n * Get the replies visibility toggle container (show/hide replies button container) element\r\n * from the post container element.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery element\r\n */\r\nconst getRepliesVisibilityToggleContainer = (postContainer) => {\r\n    return postContainer.children(Selectors.post.repliesVisibilityToggleContainer);\r\n};\r\n\r\n/**\r\n * Get the replies container element from the post container element.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery element\r\n */\r\nconst getRepliesContainer = (postContainer) => {\r\n    return postContainer.children(Selectors.post.repliesContainer);\r\n};\r\n\r\n/**\r\n * Check if the post has any replies.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Bool}\r\n */\r\nconst hasReplies = (postContainer) => {\r\n    return getRepliesContainer(postContainer).children().length > 0;\r\n};\r\n\r\n/**\r\n * Get the show replies button element from the replies visibility toggle container element.\r\n *\r\n * @param {Object} replyVisibilityToggleContainer jQuery element for the toggle container\r\n * @return {Object} jQuery element\r\n */\r\nconst getShowRepliesButton = (replyVisibilityToggleContainer) => {\r\n    return replyVisibilityToggleContainer.find(Selectors.post.showReplies);\r\n};\r\n\r\n/**\r\n * Get the hide replies button element from the replies visibility toggle container element.\r\n *\r\n * @param {Object} replyVisibilityToggleContainer jQuery element for the toggle container\r\n * @return {Object} jQuery element\r\n */\r\nconst getHideRepliesButton = (replyVisibilityToggleContainer) => {\r\n    return replyVisibilityToggleContainer.find(Selectors.post.hideReplies);\r\n};\r\n\r\n/**\r\n * Check if the replies are visible.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Bool}\r\n */\r\nconst repliesVisible = (postContainer) => {\r\n    const repliesContainer = getRepliesContainer(postContainer);\r\n    return repliesContainer.is(':visible');\r\n};\r\n\r\n/**\r\n * Show the post replies.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @param {Number|null} postIdToSee Id of the post to scroll into view (if any)\r\n */\r\nconst showReplies = (postContainer, postIdToSee = null) => {\r\n    const repliesContainer = getRepliesContainer(postContainer);\r\n    const replyVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\r\n    const showButton = getShowRepliesButton(replyVisibilityToggleContainer);\r\n    const hideButton = getHideRepliesButton(replyVisibilityToggleContainer);\r\n\r\n    showButton.addClass('hidden');\r\n    hideButton.removeClass('hidden');\r\n\r\n    repliesContainer.slideDown({\r\n        duration: ANIMATION_DURATION,\r\n        queue: false,\r\n        complete: () => {\r\n            if (postIdToSee) {\r\n                const postContainerToSee = getPostContainerById(repliesContainer, postIdToSee);\r\n                if (postContainerToSee.length) {\r\n                    postContainerToSee[0].scrollIntoView();\r\n                }\r\n            }\r\n        }\r\n    }).css('display', 'none').fadeIn(ANIMATION_DURATION);\r\n};\r\n\r\n/**\r\n * Hide the post replies.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n */\r\nconst hideReplies = (postContainer) => {\r\n    const repliesContainer = getRepliesContainer(postContainer);\r\n    const replyVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\r\n    const showButton = getShowRepliesButton(replyVisibilityToggleContainer);\r\n    const hideButton = getHideRepliesButton(replyVisibilityToggleContainer);\r\n\r\n    showButton.removeClass('hidden');\r\n    hideButton.addClass('hidden');\r\n\r\n    repliesContainer.slideUp({\r\n        duration: ANIMATION_DURATION,\r\n        queue: false\r\n    }).fadeOut(ANIMATION_DURATION);\r\n};\r\n\r\n/** Variable to hold the showInPageReplyForm function after it's built. */\r\nlet showInPageReplyForm = null;\r\n\r\n/**\r\n * Build the showInPageReplyForm function with the given additional template context.\r\n *\r\n * @param {Object} additionalTemplateContext Additional render context for the in page reply template.\r\n * @return {Function}\r\n */\r\nconst buildShowInPageReplyFormFunction = (additionalTemplateContext) => {\r\n    /**\r\n     * Show the in page reply form in the given in page reply container. The form\r\n     * display will be animated.\r\n     *\r\n     * @param {Object} postContainer jQuery element for the post container\r\n     */\r\n    return async(postContainer) => {\r\n\r\n        const inPageReplyContainer = getInPageReplyContainer(postContainer);\r\n        const repliesVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\r\n        const inPageReplyCreateButton = getInPageReplyCreateButton(postContainer);\r\n\r\n        if (!hasInPageReplyForm(inPageReplyContainer)) {\r\n            try {\r\n                const html = await renderInPageReplyTemplate(additionalTemplateContext, inPageReplyCreateButton, postContainer);\r\n                Templates.appendNodeContents(inPageReplyContainer, html, '');\r\n            } catch (e) {\r\n                Notification.exception(e);\r\n            }\r\n\r\n            FormChangeChecker.watchForm(postContainer[0].querySelector('form'));\r\n        }\r\n\r\n        inPageReplyCreateButton.fadeOut(ANIMATION_DURATION, () => {\r\n            const inPageReplyForm = getInPageReplyForm(postContainer);\r\n            inPageReplyForm.slideDown({\r\n                duration: ANIMATION_DURATION,\r\n                queue: false,\r\n                complete: () => {\r\n                    inPageReplyForm.find('textarea').focus();\r\n                }\r\n            }).css('display', 'none').fadeIn(ANIMATION_DURATION);\r\n\r\n            if (repliesVisibilityToggleContainer.length && hasReplies(postContainer)) {\r\n                repliesVisibilityToggleContainer.fadeIn(ANIMATION_DURATION);\r\n                hideReplies(postContainer);\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n/**\r\n * Hide the in page reply form in the given in page reply container. The form\r\n * display will be animated.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @param {Number|null} postIdToSee Id of the post to scroll into view (if any)\r\n */\r\nconst hideInPageReplyForm = (postContainer, postIdToSee = null) => {\r\n    const inPageReplyForm = getInPageReplyForm(postContainer);\r\n    const inPageReplyCreateButton = getInPageReplyCreateButton(postContainer);\r\n    const repliesVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\r\n\r\n    if (repliesVisibilityToggleContainer.length && hasReplies(postContainer)) {\r\n        repliesVisibilityToggleContainer.fadeOut(ANIMATION_DURATION);\r\n        if (!repliesVisible(postContainer)) {\r\n            showReplies(postContainer, postIdToSee);\r\n        }\r\n    }\r\n\r\n    inPageReplyForm.slideUp({\r\n        duration: ANIMATION_DURATION,\r\n        queue: false,\r\n        complete: () => {\r\n            inPageReplyCreateButton.fadeIn(ANIMATION_DURATION);\r\n        }\r\n    }).fadeOut(200);\r\n};\r\n\r\n/**\r\n * Check if the in page reply container contains the in page reply form.\r\n *\r\n * @param {Object} inPageReplyContainer jQuery element for the in page reply container\r\n * @return {Bool}\r\n */\r\nconst hasInPageReplyForm = (inPageReplyContainer) => {\r\n    return inPageReplyContainer.find(Selectors.post.inpageReplyContent).length > 0;\r\n};\r\n\r\n/**\r\n * Render the template to generate the in page reply form HTML.\r\n *\r\n * @param {Object} additionalTemplateContext Additional render context for the in page reply template\r\n * @param {Object} button jQuery element for the reply button that was clicked\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery promise\r\n */\r\nconst renderInPageReplyTemplate = (additionalTemplateContext, button, postContainer) => {\r\n    const postContentContainer = getPostContentContainer(postContainer);\r\n    const currentSubject = postContentContainer.find(Selectors.post.forumSubject).text();\r\n    const currentAuthorName = postContentContainer.find(Selectors.post.authorName).text();\r\n    const context = {\r\n        postid: postContainer.data('post-id'),\r\n        \"reply_url\": button.attr('data-href'),\r\n        sesskey: M.cfg.sesskey,\r\n        parentsubject: currentSubject,\r\n        parentauthorname: currentAuthorName,\r\n        canreplyprivately: button.data('can-reply-privately'),\r\n        postformat: InPageReply.CONTENT_FORMATS.MOODLE,\r\n        ...additionalTemplateContext\r\n    };\r\n\r\n    return Templates.render('mod_forum/inpage_reply_v2', context);\r\n};\r\n\r\n/**\r\n * Increment the total reply count in the show/hide replies buttons for the post.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n */\r\nconst incrementTotalReplyCount = (postContainer) => {\r\n    getRepliesVisibilityToggleContainer(postContainer).find(Selectors.post.replyCount).each((index, element) => {\r\n        const currentCount = parseInt(element.innerText, 10);\r\n        element.innerText = currentCount + 1;\r\n    });\r\n};\r\n\r\n/**\r\n * Create all of the event listeners for the discussion.\r\n *\r\n * @param {Object} root jQuery element for the discussion container\r\n */\r\nconst registerEventListeners = (root) => {\r\n    CustomEvents.define(root, [CustomEvents.events.activate]);\r\n    // Auto expanding text area for in page reply.\r\n    AutoRows.init(root);\r\n\r\n    // Reply button is clicked.\r\n    root.on(CustomEvents.events.activate, Selectors.post.inpageReplyCreateButton, (e, data) => {\r\n        data.originalEvent.preventDefault();\r\n        const postContainer = getPostContainer($(e.currentTarget));\r\n        showInPageReplyForm(postContainer);\r\n    });\r\n\r\n    // Cancel in page reply button.\r\n    root.on(CustomEvents.events.activate, Selectors.post.inpageReplyCancelButton, (e, data) => {\r\n        data.originalEvent.preventDefault();\r\n        const postContainer = getPostContainer($(e.currentTarget));\r\n        hideInPageReplyForm(postContainer);\r\n    });\r\n\r\n    // Show replies button clicked.\r\n    root.on(CustomEvents.events.activate, Selectors.post.showReplies, (e, data) => {\r\n        data.originalEvent.preventDefault();\r\n        const postContainer = getPostContainer($(e.target));\r\n        showReplies(postContainer);\r\n    });\r\n\r\n    // Hide replies button clicked.\r\n    root.on(CustomEvents.events.activate, Selectors.post.hideReplies, (e, data) => {\r\n        data.originalEvent.preventDefault();\r\n        const postContainer = getPostContainer($(e.target));\r\n        hideReplies(postContainer);\r\n    });\r\n\r\n    // Post created with in page reply.\r\n    root.on(InPageReply.EVENTS.POST_CREATED, Selectors.post.inpageSubmitBtn, (e, newPostId) => {\r\n        const currentTarget = $(e.currentTarget);\r\n        const postContainer = getPostContainer(currentTarget);\r\n        const postContainers = getParentPostContainers(currentTarget);\r\n        hideInPageReplyForm(postContainer, newPostId);\r\n\r\n        postContainers.each((index, container) => {\r\n            incrementTotalReplyCount($(container));\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\n * Initialise the javascript for the discussion in nested v2 display mode.\r\n *\r\n * @param {Object} root jQuery element for the discussion container\r\n * @param {Object} context Additional render context for the in page reply template\r\n */\r\nexport const init = (root, context) => {\r\n    // Build the showInPageReplyForm function with the additional render context.\r\n    showInPageReplyForm = buildShowInPageReplyFormFunction(context);\r\n    // Add discussion event listeners.\r\n    registerEventListeners(root);\r\n    // Initialise default discussion javascript (keyboard nav etc).\r\n    Discussion.init(root);\r\n    // Add in page reply javascript.\r\n    InPageReply.init(root);\r\n\r\n    // Initialise the settings menu javascript.\r\n    const discussionToolsContainer = root.find(Selectors.discussion.tools);\r\n    LockToggle.init(discussionToolsContainer, false);\r\n    FavouriteToggle.init(discussionToolsContainer, false, (toggleElement, response) => {\r\n        const newTargetState = response.userstate.favourited ? 0 : 1;\r\n        return toggleElement.data('targetstate', newTargetState);\r\n    });\r\n    Pin.init(discussionToolsContainer, false, (toggleElement, response) => {\r\n        const newTargetState = response.pinned ? 0 : 1;\r\n        return toggleElement.data('targetstate', newTargetState);\r\n    });\r\n    Subscribe.init(discussionToolsContainer, false, (toggleElement, response) => {\r\n        const newTargetState = response.userstate.subscribed ? 0 : 1;\r\n        toggleElement.data('targetstate', newTargetState);\r\n    });\r\n};\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","__esModule","default","_jquery","_auto_rows","_custom_interaction_events","FormChangeChecker","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_notification","_templates","_discussion","_inpage_reply","_lock_toggle","_favourite_toggle","_pin_toggle","_selectors","_subscription_toggle","getPostContainer","element","closest","Selectors","post","getPostContentContainer","postContainer","children","not","repliesContainer","find","forumCoreContent","getInPageReplyContainer","filter","inpageReplyContainer","getInPageReplyForm","inpageReplyContent","getInPageReplyCreateButton","inpageReplyCreateButton","getRepliesVisibilityToggleContainer","repliesVisibilityToggleContainer","getRepliesContainer","hasReplies","length","getShowRepliesButton","replyVisibilityToggleContainer","showReplies","getHideRepliesButton","hideReplies","postIdToSee","arguments","undefined","showButton","hideButton","addClass","removeClass","slideDown","duration","queue","complete","postContainerToSee","id","scrollIntoView","getPostContainerById","css","fadeIn","slideUp","fadeOut","showInPageReplyForm","hideInPageReplyForm","inPageReplyForm","inPageReplyCreateButton","is","repliesVisible","hasInPageReplyForm","inPageReplyContainer","renderInPageReplyTemplate","additionalTemplateContext","button","postContentContainer","currentSubject","forumSubject","text","currentAuthorName","authorName","context","postid","data","reply_url","attr","sesskey","M","cfg","parentsubject","parentauthorname","canreplyprivately","postformat","InPageReply","CONTENT_FORMATS","MOODLE","Templates","render","registerEventListeners","root","CustomEvents","define","events","activate","AutoRows","init","on","originalEvent","preventDefault","$","currentTarget","inpageReplyCancelButton","target","EVENTS","POST_CREATED","inpageSubmitBtn","newPostId","postContainers","parents","each","index","container","replyCount","currentCount","parseInt","innerText","incrementTotalReplyCount","_exports","async","html","appendNodeContents","Notification","exception","watchForm","querySelector","focus","Discussion","discussionToolsContainer","discussion","tools","LockToggle","FavouriteToggle","toggleElement","response","newTargetState","userstate","favourited","Pin","pinned","Subscribe","subscribed"],"mappings":"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"}