{"version":3,"file":"gradingpanel.min.js","sources":["../../../../../src/local/grades/local/grader/gradingpanel.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Grading panel functions.\r\n *\r\n * @module     mod_forum/local/grades/local/grader/gradingpanel\r\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/**\r\n * Get the grade panel setter and getter for the current component.\r\n * This function dynamically pulls the relevant gradingpanel JS file defined in the grading method.\r\n * We do this because we do not know until execution time what the grading type is and we do not want to import unused files.\r\n *\r\n * @method\r\n * @param {String} component The component being graded\r\n * @param {Number} context The contextid of the thing being graded\r\n * @param {String} gradingComponent The thing providing the grading type\r\n * @param {String} gradingSubtype The subtype fo the grading component\r\n * @param {String} itemName The name of the thing being graded\r\n * @return {Object}\r\n */\r\nexport default async(component, context, gradingComponent, gradingSubtype, itemName) => {\r\n    let gradingMethodHandler = `${gradingComponent}/grades/grader/gradingpanel`;\r\n    if (gradingSubtype) {\r\n        gradingMethodHandler += `/${gradingSubtype}`;\r\n    }\r\n\r\n    const GradingMethod = await import(gradingMethodHandler);\r\n\r\n    return {\r\n        getter: (userId) => GradingMethod.fetchCurrentGrade(component, context, itemName, userId),\r\n        setter: (userId, notifyStudent, formData) => GradingMethod.storeCurrentGrade(\r\n            component, context, itemName, userId, notifyStudent, formData),\r\n    };\r\n};\r\n\r\n"],"names":["_exports","default","async","component","context","gradingComponent","gradingSubtype","itemName","gradingMethodHandler","GradingMethod","_systemImportTransformerGlobalIdentifier","define","amd","Promise","resolve","reject","require","module","exports","loader","getter","userId","fetchCurrentGrade","setter","notifyStudent","formData","storeCurrentGrade"],"mappings":";;;;;;;KAiDC,OAAAA,SAAAC,QAbcC,MAAMC,UAAWC,QAASC,iBAAkBC,eAAgBC,YACvE,IAAIC,qBAAuB,GAAGH,8CAC1BC,iBACAE,sBAAwB,IAAIF,kBAGhC,MAAMG,oBAAgBC,mBAAAA,yCAAAC,QAAAD,yCAAAC,OAAAC,IAAA,IAAAC,SAAAC,SAAAA,QAAAC,QAAAL,yCAAAM,QAAA,CAAaR,sBAAoBM,QAAAC,OAAA,IAAAE,oBAAAA,QAAAA,OAAAC,SAAA,oBAAAF,SAAA,oBAAAC,QAAAA,OAAAd,WAAAO,yCAAAM,SAAA,cAAAN,yCAAAM,QAAAG,OAAAN,QAAAC,QAAAE,QAAA,uBAAAH,QAAAC,QAAAJ,yCAApBF,wBAEnC,MAAO,CACHY,OAASC,QAAWZ,cAAca,kBAAkBnB,UAAWC,QAASG,SAAUc,QAClFE,OAAQA,CAACF,OAAQG,cAAeC,WAAahB,cAAciB,kBACvDvB,UAAWC,QAASG,SAAUc,OAAQG,cAAeC,UAC5D,EACJzB,SAAAC,OAAA"}