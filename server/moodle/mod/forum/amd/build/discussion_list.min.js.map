{"version":3,"file":"discussion_list.min.js","sources":["../src/discussion_list.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module for the list of discussions on when viewing a forum.\r\n *\r\n * @module     mod_forum/discussion_list\r\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine([\r\n    'jquery',\r\n    'core/templates',\r\n    'core/str',\r\n    'core/notification',\r\n    'mod_forum/subscription_toggle',\r\n    'mod_forum/selectors',\r\n    'mod_forum/repository',\r\n    'core/pubsub',\r\n    'mod_forum/forum_events',\r\n    'core_form/changechecker',\r\n], function(\r\n    $,\r\n    Templates,\r\n    Str,\r\n    Notification,\r\n    SubscriptionToggle,\r\n    Selectors,\r\n    Repository,\r\n    PubSub,\r\n    ForumEvents,\r\n    FormChangeChecker\r\n) {\r\n    var registerEventListeners = function(root) {\r\n        PubSub.subscribe(ForumEvents.SUBSCRIPTION_TOGGLED, function(data) {\r\n            var discussionId = data.discussionId;\r\n            var subscribed = data.subscriptionState;\r\n            var discussionListItem = root.find(Selectors.discussion.item + '[data-discussionid= ' + discussionId + ']');\r\n            var subscribedLabel = discussionListItem.find(Selectors.discussion.subscribedLabel);\r\n            if (subscribed) {\r\n                discussionListItem.addClass('subscribed');\r\n                subscribedLabel.removeAttr('hidden');\r\n            } else {\r\n                discussionListItem.removeClass('subscribed');\r\n                subscribedLabel.attr('hidden', true);\r\n            }\r\n        });\r\n\r\n        root.on('click', Selectors.post.inpageCancelButton, function(e) {\r\n            // Tell formchangechecker to reset the form state.\r\n            FormChangeChecker.resetFormDirtyState(e.currentTarget);\r\n        });\r\n\r\n        root.on('click', Selectors.favourite.toggle, function(e) {\r\n            e.preventDefault();\r\n\r\n            var toggleElement = $(this);\r\n            var forumId = toggleElement.data('forumid');\r\n            var discussionId = toggleElement.data('discussionid');\r\n            var subscriptionState = toggleElement.data('targetstate');\r\n            Repository.setFavouriteDiscussionState(forumId, discussionId, subscriptionState)\r\n                .then(function() {\r\n                    return location.reload();\r\n                })\r\n                .catch(Notification.exception);\r\n        });\r\n\r\n        root.on('click', Selectors.pin.toggle, function(e) {\r\n            e.preventDefault();\r\n            var toggleElement = $(this);\r\n            var forumId = toggleElement.data('forumid');\r\n            var discussionId = toggleElement.data('discussionid');\r\n            var state = toggleElement.data('targetstate');\r\n            Repository.setPinDiscussionState(forumId, discussionId, state)\r\n                .then(function() {\r\n                    return location.reload();\r\n                })\r\n                .catch(Notification.exception);\r\n        });\r\n\r\n        root.on('click', Selectors.lock.toggle, function(e) {\r\n            var toggleElement = $(this);\r\n            var forumId = toggleElement.data('forumid');\r\n            var discussionId = toggleElement.data('discussionid');\r\n            var state = toggleElement.data('state');\r\n\r\n            Repository.setDiscussionLockState(forumId, discussionId, state)\r\n                .then(function(context) {\r\n                    var icon = toggleElement.parents(Selectors.summary.actions).find(Selectors.lock.icon);\r\n                    var lockedLabel = toggleElement.parents(Selectors.discussion.item).find(Selectors.discussion.lockedLabel);\r\n                    if (context.locked) {\r\n                        icon.removeClass('hidden');\r\n                        lockedLabel.removeAttr('hidden');\r\n                    } else {\r\n                        icon.addClass('hidden');\r\n                        lockedLabel.attr('hidden', true);\r\n                    }\r\n                    return context;\r\n                })\r\n                .then(function(context) {\r\n                    context.forumid = forumId;\r\n                    return Templates.render('mod_forum/discussion_lock_toggle', context);\r\n                })\r\n                .then(function(html, js) {\r\n                    return Templates.replaceNode(toggleElement, html, js);\r\n                })\r\n                .then(function() {\r\n                    return Str.get_string('lockupdated', 'forum')\r\n                        .done(function(s) {\r\n                            return Notification.addNotification({\r\n                                message: s,\r\n                                type: \"info\"\r\n                            });\r\n                        });\r\n                })\r\n                .catch(Notification.exception);\r\n\r\n            e.preventDefault();\r\n        });\r\n    };\r\n\r\n    return {\r\n        init: function(root) {\r\n            SubscriptionToggle.init(root, false, function(toggleElement, context) {\r\n                var toggleId = toggleElement.attr('id');\r\n                var newTargetState = context.userstate.subscribed ? 0 : 1;\r\n                toggleElement.data('targetstate', newTargetState);\r\n\r\n                var stringKey = context.userstate.subscribed ? 'unsubscribediscussion' : 'subscribediscussion';\r\n                return Str.get_string(stringKey, 'mod_forum')\r\n                    .then(function(string) {\r\n                        toggleElement.closest('td').find('label[for=\"' + toggleId + '\"]').find('span').text(string);\r\n                        return string;\r\n                    });\r\n            });\r\n            registerEventListeners(root);\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","Templates","Str","Notification","SubscriptionToggle","Selectors","Repository","PubSub","ForumEvents","FormChangeChecker","init","root","toggleElement","context","toggleId","attr","newTargetState","userstate","subscribed","data","stringKey","get_string","then","string","closest","find","text","subscribe","SUBSCRIPTION_TOGGLED","discussionId","subscriptionState","discussionListItem","discussion","item","subscribedLabel","addClass","removeAttr","removeClass","on","post","inpageCancelButton","e","resetFormDirtyState","currentTarget","favourite","toggle","preventDefault","this","forumId","setFavouriteDiscussionState","location","reload","catch","exception","pin","state","setPinDiscussionState","lock","setDiscussionLockState","icon","parents","summary","actions","lockedLabel","locked","forumid","render","html","js","replaceNode","done","s","addNotification","message","type","registerEventListeners"],"mappings":"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"}