define("mod_homework/homeworkchooser",["exports","jquery","core/ajax","mod_homework/modal_homework","core/modal_events"],(function(_exports,_jquery,_ajax,_modal_homework,_modal_events){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_jquery=_interopRequireDefault(_jquery),_ajax=_interopRequireDefault(_ajax),_modal_homework=_interopRequireDefault(_modal_homework),_modal_events=_interopRequireDefault(_modal_events);_exports.init=async(cmid,title)=>{(0,_jquery.default)("#open-homework-chooser").on("click",(()=>{_ajax.default.call([{methodname:"mod_homework_get_homework_chooser",args:{cmid:cmid},done:async function(response){const modal=await _modal_homework.default.create({title:title,body:"".concat(response.html),large:!0,removeOnClose:!0});modal.show(),modal.getRoot().on(_modal_events.default.shown,(()=>{const startPageInput=modal.getRoot().find("#startPage")[0],endPageInput=modal.getRoot().find("#endPage")[0],radioButtons=modal.getRoot().find('input[name="option"]'),testTextarea=modal.getRoot().find("#page-range-input")[0],testLink=modal.getRoot().find("#linkDiv")[0];function validatePageRange(){const startPage=parseInt(startPageInput.value,10),endPage=parseInt(endPageInput.value,10);""!==endPageInput.value&&""!==startPageInput.value&&endPage<startPage?endPageInput.setCustomValidity("End Page must be greater than or equal to Start Page"):endPageInput.setCustomValidity("")}function toggleInputs(){document.getElementById("option1").checked?(testTextarea.style.display="block",testLink.style.display="none"):document.getElementById("option2").checked&&(testTextarea.style.display="none",testLink.style.display="block")}startPageInput.addEventListener("input",validatePageRange),endPageInput.addEventListener("input",validatePageRange),radioButtons.each(((_,radio)=>{radio.addEventListener("change",toggleInputs)}))})),modal.getRoot().on(_modal_events.default.hidden,(()=>{console.log("Modal closed!")})),modal.getRoot().on("click",'[data-action="submit"]',(e=>{e.preventDefault(),handleFormSubmit(modal)})),modal.getRoot().on("click",'[data-action="cancel"]',(e=>{e.preventDefault(),modal.destroy()}))},fail:error=>{console.error("Failed to load homework chooser content:",error)}}])}))};const handleFormSubmit=modal=>{let inputField=modal.getRoot().find("#inputField").val();if(""!==inputField){if(modal.getRoot().find("#option1").is(":checked")){let startPage=modal.getRoot().find("#startPage").val(),endPage=modal.getRoot().find("#endPage").val();_ajax.default.call([{methodname:"mod_homework_save_homework_literature",args:{inputfield:inputField,startpage:startPage,endpage:endPage},done:function(response){console.log("Data saved successfully:",response),modal.hide()},fail:function(error){console.error("Failed to save data:",error)}}])}else if(modal.getRoot().find("#option2").is(":checked")){let link=modal.getRoot().find("#link").val();_ajax.default.call([{methodname:"mod_homework_save_homework_link",args:{inputfield:inputField,link:link},done:function(response){console.log("Data saved successfully:",response),modal.hide()},fail:function(error){console.error("Failed to save data:",error)}}])}}else alert("Please fill in input field.")}}));

//# sourceMappingURL=homeworkchooser.min.js.map