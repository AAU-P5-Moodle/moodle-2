{"version":3,"file":"homeworkchooseredit.min.js","sources":["../src/homeworkchooseredit.js"],"sourcesContent":["// homeworkchooseredit.js (Updated Version)\n\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport MyModal from 'mod_homework/modal_homework';\nimport ModalEvents from 'core/modal_events';\nimport Dropzone from 'core/dropzone';\n\nlet dropZoneFiles = []; // Store files to upload later\nlet uploadedFileIds = []; // Store file IDs after successful upload\n\n/**\n * Initializes the Homework Edit Modal.\n *\n * @param {int} cmid\n * @param {string} title\n * @param {int} currentHomework\n * @param {array} homeworkids\n * @returns {Promise<void>}\n */\nexport const init = async(cmid, title, currentHomework, homeworkids) => {\n    Object.values(homeworkids).forEach(homeworkid => {\n        $('#open-homework-chooser-' + homeworkid.id).on('click', () => {\n            Ajax.call([{\n                methodname: 'mod_homework_get_homework_chooser',\n                args: {cmid: cmid},\n                done: async function (response) {\n                    const modal = await MyModal.create({\n                        title: title,\n                        body: `${response.html}`,\n                        // footer: 'An example footer content',\n                        large: true,\n                        removeOnClose: true\n                    });\n\n                    // Show the modal\n                    modal.show();\n\n                    // Initialize elements once the modal content is rendered\n                    modal.getRoot().on(ModalEvents.shown, () => {\n                        // Initialize the elements after modal is displayed\n                        const dropzoneContainer = modal.getRoot().find('#dropzone-container')[0];\n\n                        modal.getRoot().find('#inputField')[0].value = homeworkid.description;\n                        modal.getRoot().find('#link')[0].value = homeworkid.link;\n                        modal.getRoot().find('#startPage')[0].value = homeworkid.startpage;\n                        modal.getRoot().find('#endPage')[0].value = homeworkid.endpage;\n                        modal.getRoot().find('#startTime')[0].value = homeworkid.starttime;\n                        modal.getRoot().find('#endTime')[0].value = homeworkid.endtime;\n\n                        if (homeworkid.file_id) {\n                            uploadedFileIds.push(homeworkid.file_id);\n                        }\n\n                        initializeDropzone(dropzoneContainer);\n                        displayUploadedFile(homeworkid);\n                    });\n\n                    // Attach an event listener to handle the modal hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, () => {\n                        console.log('Modal closed!');\n                    });\n\n                    // Attach event listeners for buttons\n                    modal.getRoot().on('click', '[data-action=\"submit\"]', (e) => {\n                        e.preventDefault();\n\n                        handleFormSubmit(modal, currentHomework, homeworkid[\"id\"]);\n                    });\n\n                    modal.getRoot().on('click', '[data-action=\"cancel\"]', (e) => {\n                        e.preventDefault();\n                        modal.destroy();\n\n                        location.reload();\n                    });\n                },\n                fail: (error) => {\n                    console.error(\"Failed to load homework chooser content:\", error);\n                }\n            }]);\n        });\n    })\n};\n\nconst initializeDropzone = (container) => {\n    const dropZone = new Dropzone(container, \"*/*\", (files) => {\n        dropZoneFiles.push(files[0]); // Store file for later upload\n\n        displayUploadedFile(files[0]);\n    });\n\n    dropZone.setLabel(\"Drop file here (Optional)\");\n    dropZone.init();\n};\n\n// Function to display the uploaded file with a delete button\nconst displayUploadedFile = (file) => {\n    const previewContainer = document.getElementById(\"file-content\"); // Container for preview\n\n    // Clear previous preview\n    previewContainer.innerHTML = \"\";\n\n    if (file.name || file.filename) {\n        // Create wrapper div for the preview and delete button\n        const fileWrapper = document.createElement(\"div\");\n        fileWrapper.style.position = \"relative\";\n        fileWrapper.style.display = \"ruby\";\n\n        // Add the file preview\n        const paragraph = document.createElement(\"p\");\n        if (file.name) {\n            paragraph.textContent = `${file.name}`;\n        } else if (file.filename) {\n            paragraph.textContent = `${file.filename}`;\n        }\n        fileWrapper.appendChild(paragraph);\n\n        // Create the delete \"X\" button\n        const deleteButton = document.createElement(\"span\");\n        deleteButton.textContent = \"X\";\n        deleteButton.style.cursor = \"pointer\";\n        deleteButton.style.background = \"red\";\n        deleteButton.style.color = \"white\";\n        deleteButton.style.padding = \"2px 5px\";\n        deleteButton.style.fontWeight = \"bold\";\n        deleteButton.style.marginLeft = \"5px\";\n\n        // Handle file deletion when \"X\" is clicked\n        deleteButton.addEventListener(\"click\", () => {\n            if (confirm(\"Are you sure you want to delete this file?\")) {\n                // AJAX call to delete the file on the server\n                Ajax.call([{\n                    methodname: 'mod_homework_delete_file',\n                    args: {\n                        id: file.id,\n                        file_id: file.file_id\n                    }, // Pass the correct file ID\n                    done: function(response) {\n                        console.log(\"File deleted successfully\");\n                        dropZoneFiles = []; // Clear the files array\n                        previewContainer.innerHTML = \"\"; // Remove the preview\n                        uploadedFileIds = []; // Clear the files array\n                    },\n                    fail: function(error) {\n                        console.error(\"Failed to delete file:\", error);\n                    }\n                }]);\n            }\n        });\n\n        fileWrapper.appendChild(deleteButton);\n        previewContainer.appendChild(fileWrapper);\n    }\n};\n\n\nconst uploadDropzoneFile = async () => {\n    for (let file of dropZoneFiles) {\n        try {\n            const formData = new FormData();\n            formData.append(\"file\", file);\n\n            const response = await fetch(\"/mod/homework/upload_file.php\", {\n                method: \"POST\",\n                body: formData\n            });\n\n            const result = await response.json();\n\n            if (response.ok && result.status === 'success') {\n                console.log(\"File uploaded successfully:\", file.name);\n                console.log(result);\n                uploadedFileIds.push(result.fileid); // Store the file ID\n            } else {\n                console.error(\"Failed to upload file:\", file.name);\n            }\n        } catch (error) {\n            console.error(\"Error uploading file:\", file.name, error);\n        }\n    }\n    dropZoneFiles = []; // Clear stored file after upload\n};\n\n/**\n * Handles form submission inside the modal.\n * @param {Modal} modal - The instance of the modal containing the form.\n * @param currentHomework - The id of the homework which is being edited.\n */\nconst handleFormSubmit = async (modal, currentHomework, homeworkid) => {\n    let inputField = modal.getRoot().find('#inputField')[0];\n    let linkField = modal.getRoot().find('#link')[0];\n    let startPageInput = modal.getRoot().find('#startPage')[0];\n    let endPageInput = modal.getRoot().find('#endPage')[0];\n    let startTimeInput = modal.getRoot().find('#startTime')[0];\n    let endTimeInput = modal.getRoot().find('#endTime')[0];\n\n    // Set up a custom validity message if the field is empty\n    if (inputField.value.trim() === \"\") {\n        inputField.setCustomValidity(\"Input field must not be empty\");\n    } else {\n        inputField.setCustomValidity(\"\"); // Clear the custom message when input is valid\n    }\n\n    // Manually check the validity of the input field\n    inputField.reportValidity();\n\n    // If the field is invalid, stop the function execution\n    if (!inputField.checkValidity()) {\n        return; // Exit if input field is invalid\n    }\n\n    if (!validatePageRange(startPageInput, endPageInput)) {\n        return;\n    }\n\n    if (!validateTimeRange(startTimeInput, endTimeInput)) {\n        return;\n    }\n\n    await uploadDropzoneFile();\n\n    Ajax.call([{\n        methodname: 'mod_homework_edit_homework_material',\n        args: {\n            id: homeworkid,\n            inputfield: inputField.value,\n            link: linkField.value.trim() !== \"\" ? linkField.value.trim() : null,\n            startpage: startPageInput.value.trim() !== \"\" ? startPageInput.value.trim() : null,\n            endpage: endPageInput.value.trim() !== \"\" ? endPageInput.value.trim() : null,\n            starttime: startTimeInput.value.trim() !== \"\" ? startTimeInput.value.trim() : null,\n            endtime: endTimeInput.value.trim() !== \"\" ? endTimeInput.value.trim() : null,\n            homeworkid: currentHomework,\n            fileid: uploadedFileIds.length ? uploadedFileIds[0] : null\n        },\n        done: function(response) {\n            console.log(\"Data saved successfully:\", response);\n            modal.destroy();\n\n            location.reload();\n        },\n        fail: function(error) {\n            console.error(\"Failed to save data:\", error);\n        }\n    }]);\n\n    function validatePageRange(startPageInput, endPageInput) {\n        const startPage = parseInt(startPageInput.value, 10);\n        const endPage = parseInt(endPageInput.value, 10);\n\n        if (endPageInput.value !== \"\" && startPageInput.value !== \"\") {\n            if (endPage < startPage) {\n                endPageInput.setCustomValidity(\"End Page must be greater than or equal to Start Page\");\n                endPageInput.reportValidity();\n                return false;\n            } else {\n                endPageInput.setCustomValidity(\"\"); // Clear error message if valid\n            }\n        } else {\n            endPageInput.setCustomValidity(\"\"); // Clear error if either field is empty\n        }\n\n        endPageInput.reportValidity();\n        return endPageInput.checkValidity(); // Return true if valid\n    }\n\n    function validateTimeRange(startTimeInput, endTimeInput) {\n        const startTime = parseInt(startTimeInput.value, 10);\n        const endTime = parseInt(endTimeInput.value, 10);\n\n        if (endTimeInput.value !== \"\" && startTimeInput.value !== \"\") {\n            if (endTime < startTime) {\n                endTimeInput.setCustomValidity(\"End Time must be greater than or equal to Start Time\");\n                endTimeInput.reportValidity();\n                return false;\n            } else {\n                endTimeInput.setCustomValidity(\"\"); // Clear error message if valid\n            }\n        } else {\n            endTimeInput.setCustomValidity(\"\"); // Clear error if either field is empty\n        }\n\n        endTimeInput.reportValidity();\n        return endTimeInput.checkValidity(); // Return true if valid\n    }\n};"],"names":["_interopRequireDefault","e","__esModule","default","_jquery","_ajax","_modal_homework","_modal_events","_dropzone","dropZoneFiles","uploadedFileIds","_exports","init","async","cmid","title","currentHomework","homeworkids","Object","values","forEach","homeworkid","$","id","on","Ajax","call","methodname","args","done","response","modal","MyModal","create","body","html","large","removeOnClose","show","getRoot","ModalEvents","shown","dropzoneContainer","find","value","description","link","startpage","endpage","starttime","endtime","file_id","push","initializeDropzone","displayUploadedFile","hidden","console","log","preventDefault","handleFormSubmit","destroy","location","reload","fail","error","container","dropZone","Dropzone","files","setLabel","file","previewContainer","document","getElementById","innerHTML","name","filename","fileWrapper","createElement","style","position","display","paragraph","textContent","appendChild","deleteButton","cursor","background","color","padding","fontWeight","marginLeft","addEventListener","confirm","inputField","linkField","startPageInput","endPageInput","startTimeInput","endTimeInput","trim","setCustomValidity","reportValidity","checkValidity","startPage","parseInt","endPage","validatePageRange","startTime","endTime","validateTimeRange","formData","FormData","append","fetch","method","result","json","ok","status","fileid","uploadDropzoneFile","inputfield","length"],"mappings":"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"}