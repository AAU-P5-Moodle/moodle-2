{"version":3,"file":"homeworkchooser.min.js","sources":["../src/homeworkchooser.js"],"sourcesContent":["// homeworkchooser.js (Updated Version)\n\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport MyModal from 'mod_homework/modal_homework';\nimport ModalEvents from 'core/modal_events';\n// import ModalCancel from 'core/modal_cancel';\n/**\n * Initializes the Homework Chooser Modal.\n *\n * @param {int} cmid - Course Module ID\n * @param {string} title - Title for the modal\n */\nexport const init = async (cmid, title) => {\n    $('#open-homework-chooser').on('click', () => {\n        Ajax.call([{\n            methodname: 'mod_homework_get_homework_chooser',\n            args: {cmid: cmid},\n            done: async function(response) {\n                const modal = await MyModal.create({\n                    title: title,\n                    body: `${response.html}`,\n                    // footer: 'An example footer content',\n                    large: true,\n                    removeOnClose: true,\n                });\n\n                // Show the modal\n                modal.show();\n\n                // Initialize elements once the modal content is rendered\n                modal.getRoot().on(ModalEvents.shown, () => {\n                    // Initialize the elements after modal is displayed\n                    const startPageInput = modal.getRoot().find('#startPage')[0];\n                    const endPageInput = modal.getRoot().find('#endPage')[0];\n                    const radioButtons = modal.getRoot().find('input[name=\"option\"]');\n                    const testTextarea = modal.getRoot().find('#page-range-input')[0];\n                    const testLink = modal.getRoot().find('#linkDiv')[0];\n\n                    // Attach event listeners for page input validation\n                    startPageInput.addEventListener('input', validatePageRange);\n                    endPageInput.addEventListener('input', validatePageRange);\n\n                    // Attach event listeners for radio buttons\n                    radioButtons.each((_, radio) => {\n                        radio.addEventListener('change', toggleInputs);\n                    });\n\n                    // Function to validate page range\n                    /**\n                     *\n                     */\n                    function validatePageRange() {\n                        const startPage = parseInt(startPageInput.value, 10);\n                        const endPage = parseInt(endPageInput.value, 10);\n\n                        if (endPageInput.value !== \"\" && startPageInput.value !== \"\") {\n                            if (endPage < startPage) {\n                                endPageInput.setCustomValidity(\"End Page must be greater than or equal to Start Page\");\n                            } else {\n                                endPageInput.setCustomValidity(\"\"); // Clear error message if valid\n                            }\n                        } else {\n                            endPageInput.setCustomValidity(\"\"); // Clear error if either field is empty\n                        }\n                    }\n\n                    // Function to toggle between text and link inputs\n                    /**\n                     *\n                     */\n                    function toggleInputs() {\n                        if (document.getElementById(\"option1\").checked) {\n                            testTextarea.style.display = \"block\";\n                            testLink.style.display = \"none\";\n                        } else if (document.getElementById(\"option2\").checked) {\n                            testTextarea.style.display = \"none\";\n                            testLink.style.display = \"block\";\n                        }\n                    }\n                });\n\n                // Attach an event listener to handle the modal hidden event\n                modal.getRoot().on(ModalEvents.hidden, () => {\n                    console.log('Modal closed!');\n                });\n\n                // Attach event listeners for buttons\n                modal.getRoot().on('click', '[data-action=\"submit\"]', (e) => {\n                    e.preventDefault();\n                    handleFormSubmit(modal);\n                });\n\n                modal.getRoot().on('click', '[data-action=\"cancel\"]', (e) => {\n                    e.preventDefault();\n                    modal.destroy();\n                });\n            },\n            fail: (error) => {\n                console.error(\"Failed to load homework chooser content:\", error);\n            }\n        }]);\n    });\n};\n\n/**\n * Handles form submission inside the modal.\n *\n * @param {Modal} modal - The instance of the modal containing the form.\n */\nconst handleFormSubmit = (modal) => {\n    let inputField = modal.getRoot().find('#inputField').val();\n\n    if (inputField === \"\") {\n        alert(\"Please fill in input field.\");\n        return;\n    }\n\n    if (modal.getRoot().find('#option1').is(':checked')) {\n\n        let startPage = modal.getRoot().find('#startPage').val();\n        let endPage = modal.getRoot().find('#endPage').val();\n\n        // AJAX call to send data to the server\n        Ajax.call([{\n            methodname: 'mod_homework_save_homework_literature',  // Your PHP function that will handle the data\n            args: {\n                inputfield: inputField,\n                startpage: startPage,\n                endpage: endPage,\n            },\n            done: function(response) {\n                console.log(\"Data saved successfully:\", response);\n                // Close the modal after successful submission\n                modal.hide();\n            },\n            fail: function(error) {\n                console.error(\"Failed to save data:\", error);\n            }\n        }]);\n\n    } else if (modal.getRoot().find('#option2').is(':checked')) {\n\n        let link = modal.getRoot().find('#link').val();\n\n        // AJAX call to send data to the server\n        Ajax.call([{\n            methodname: 'mod_homework_save_homework_link',  // Your PHP function that will handle the data\n            args: {\n                inputfield: inputField,\n                link: link,\n            },\n            done: function(response) {\n                console.log(\"Data saved successfully:\", response);\n                // Close the modal after successful submission\n                modal.hide();\n            },\n            fail: function(error) {\n                console.error(\"Failed to save data:\", error);\n            }\n        }]);\n    }\n};"],"names":["async","cmid","title","on","call","methodname","args","done","response","modal","MyModal","create","body","html","large","removeOnClose","show","getRoot","ModalEvents","shown","startPageInput","find","endPageInput","radioButtons","testTextarea","testLink","validatePageRange","startPage","parseInt","value","endPage","setCustomValidity","toggleInputs","document","getElementById","checked","style","display","addEventListener","each","_","radio","hidden","console","log","e","preventDefault","handleFormSubmit","destroy","fail","error","inputField","val","is","inputfield","startpage","endpage","hide","link","alert"],"mappings":"8hBAaoBA,MAAOC,KAAMC,6BAC3B,0BAA0BC,GAAG,SAAS,mBAC/BC,KAAK,CAAC,CACPC,WAAY,oCACZC,KAAM,CAACL,KAAMA,MACbM,KAAMP,eAAeQ,gBACXC,YAAcC,wBAAQC,OAAO,CAC/BT,MAAOA,MACPU,eAASJ,SAASK,MAElBC,OAAO,EACPC,eAAe,IAInBN,MAAMO,OAGNP,MAAMQ,UAAUd,GAAGe,sBAAYC,OAAO,WAE5BC,eAAiBX,MAAMQ,UAAUI,KAAK,cAAc,GACpDC,aAAeb,MAAMQ,UAAUI,KAAK,YAAY,GAChDE,aAAed,MAAMQ,UAAUI,KAAK,wBACpCG,aAAef,MAAMQ,UAAUI,KAAK,qBAAqB,GACzDI,SAAWhB,MAAMQ,UAAUI,KAAK,YAAY,YAezCK,0BACCC,UAAYC,SAASR,eAAeS,MAAO,IAC3CC,QAAUF,SAASN,aAAaO,MAAO,IAElB,KAAvBP,aAAaO,OAAyC,KAAzBT,eAAeS,OACxCC,QAAUH,UACVL,aAAaS,kBAAkB,wDAKnCT,aAAaS,kBAAkB,aAQ9BC,eACDC,SAASC,eAAe,WAAWC,SACnCX,aAAaY,MAAMC,QAAU,QAC7BZ,SAASW,MAAMC,QAAU,QAClBJ,SAASC,eAAe,WAAWC,UAC1CX,aAAaY,MAAMC,QAAU,OAC7BZ,SAASW,MAAMC,QAAU,SArCjCjB,eAAekB,iBAAiB,QAASZ,mBACzCJ,aAAagB,iBAAiB,QAASZ,mBAGvCH,aAAagB,MAAK,CAACC,EAAGC,SAClBA,MAAMH,iBAAiB,SAAUN,oBAsCzCvB,MAAMQ,UAAUd,GAAGe,sBAAYwB,QAAQ,KACnCC,QAAQC,IAAI,oBAIhBnC,MAAMQ,UAAUd,GAAG,QAAS,0BAA2B0C,IACnDA,EAAEC,iBACFC,iBAAiBtC,UAGrBA,MAAMQ,UAAUd,GAAG,QAAS,0BAA2B0C,IACnDA,EAAEC,iBACFrC,MAAMuC,cAGdC,KAAOC,QACHP,QAAQO,MAAM,2CAA4CA,qBAWpEH,iBAAoBtC,YAClB0C,WAAa1C,MAAMQ,UAAUI,KAAK,eAAe+B,SAElC,KAAfD,eAKA1C,MAAMQ,UAAUI,KAAK,YAAYgC,GAAG,YAAa,KAE7C1B,UAAYlB,MAAMQ,UAAUI,KAAK,cAAc+B,MAC/CtB,QAAUrB,MAAMQ,UAAUI,KAAK,YAAY+B,oBAG1ChD,KAAK,CAAC,CACPC,WAAY,wCACZC,KAAM,CACFgD,WAAYH,WACZI,UAAW5B,UACX6B,QAAS1B,SAEbvB,KAAM,SAASC,UACXmC,QAAQC,IAAI,2BAA4BpC,UAExCC,MAAMgD,QAEVR,KAAM,SAASC,OACXP,QAAQO,MAAM,uBAAwBA,gBAI3C,GAAIzC,MAAMQ,UAAUI,KAAK,YAAYgC,GAAG,YAAa,KAEpDK,KAAOjD,MAAMQ,UAAUI,KAAK,SAAS+B,oBAGpChD,KAAK,CAAC,CACPC,WAAY,kCACZC,KAAM,CACFgD,WAAYH,WACZO,KAAMA,MAEVnD,KAAM,SAASC,UACXmC,QAAQC,IAAI,2BAA4BpC,UAExCC,MAAMgD,QAEVR,KAAM,SAASC,OACXP,QAAQO,MAAM,uBAAwBA,iBA5C9CS,MAAM"}