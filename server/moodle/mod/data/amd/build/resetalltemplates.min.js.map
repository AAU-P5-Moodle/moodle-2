{"version":3,"file":"resetalltemplates.min.js","sources":["../src/resetalltemplates.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript module for reseting all templates.\r\n *\r\n * @module      mod_data/resetalltemplates\r\n * @copyright   2022 Ferran Recio <ferran@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Notification from 'core/notification';\r\nimport {prefetchStrings} from 'core/prefetch';\r\nimport {getString} from 'core/str';\r\n\r\nconst selectors = {\r\n    resetAllTemplatesAction: '[data-action=\"resetalltemplates\"]',\r\n};\r\n\r\n/**\r\n * Initialize module\r\n */\r\nexport const init = () => {\r\n    prefetchStrings('mod_data', [\r\n        'resetalltemplatesconfirmtitle',\r\n        'resetalltemplatesconfirm',\r\n    ]);\r\n    prefetchStrings('core', [\r\n        'reset',\r\n    ]);\r\n    registerEventListeners();\r\n};\r\n\r\n/**\r\n * Register events for option in action menu.\r\n */\r\nconst registerEventListeners = () => {\r\n    document.addEventListener('click', (event) => {\r\n        const actionLink = event.target.closest(selectors.resetAllTemplatesAction);\r\n        if (actionLink) {\r\n            event.preventDefault();\r\n            resetAllTemplatesConfirm(actionLink);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Show the confirmation modal to reset all the templates.\r\n *\r\n * @param {HTMLElement} actionLink the element that triggers the action.\r\n */\r\nconst resetAllTemplatesConfirm = async(actionLink) => {\r\n    try {\r\n        await Notification.deleteCancelPromise(\r\n            getString('resetalltemplatesconfirmtitle', 'mod_data'),\r\n            getString('resetalltemplatesconfirm', 'mod_data'),\r\n            getString('reset', 'core'),\r\n        );\r\n        window.location = actionLink.href;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n"],"names":["e","_notification","__esModule","default","selectors","_exports","init","prefetchStrings","registerEventListeners","document","addEventListener","event","actionLink","target","closest","preventDefault","resetAllTemplatesConfirm","async","Notification","deleteCancelPromise","getString","window","location","href","error"],"mappings":"gJAuB6C,IAAAA;;;;;;;kFAA7CC,eAA6CD,EAA7CC,gBAA6CD,EAAAE,WAAAF,EAAAG,CAAAA,QAAAH,GAI7C,MAAMI,kCACuB,oCAe3BC,SAAAC,KATkBA,MAChB,EAAAC,UAAAA,iBAAgB,WAAY,CACxB,gCACA,8BAEJ,EAAAA,2BAAgB,OAAQ,CACpB,UAEJC,wBAAwB,EAM5B,MAAMA,uBAAyBA,KAC3BC,SAASC,iBAAiB,SAAUC,QAChC,MAAMC,WAAaD,MAAME,OAAOC,QAAQV,mCACpCQ,aACAD,MAAMI,iBACNC,yBAAyBJ,YAC7B,GACF,EAQAI,yBAA2BC,mBAC7B,UACUC,cAAAA,QAAaC,qBACf,EAAAC,KAASA,WAAC,gCAAiC,aAC3C,EAAAA,KAASA,WAAC,2BAA4B,aACtC,EAAAA,KAASA,WAAC,QAAS,SAEvBC,OAAOC,SAAWV,WAAWW,IAChC,CAAC,MAAOC,OACL,MACJ,EACF"}