{"version":3,"file":"importpresets.min.js","sources":["../src/importpresets.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript module for importing presets.\r\n *\r\n * @module     mod_data/importpresets\r\n * @copyright  2022 Laurent David <laurent.david@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport ModalForm from 'core_form/modalform';\r\nimport Notification from 'core/notification';\r\nimport {getString} from 'core/str';\r\n\r\nconst selectors = {\r\n    importPresetButton: '[data-action=\"importpresets\"]',\r\n};\r\n\r\n/**\r\n * Initialize module\r\n */\r\nexport const init = () => {\r\n    document.addEventListener('click', (event) => {\r\n        const importPresetButton = event.target.closest(selectors.importPresetButton);\r\n\r\n        if (!importPresetButton) {\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n        const modalForm = new ModalForm({\r\n            modalConfig: {\r\n                title: getString('importpreset', 'mod_data'),\r\n            },\r\n            formClass: 'mod_data\\\\form\\\\import_presets',\r\n            args: {cmid: importPresetButton.dataset.dataid},\r\n            saveButtonText: getString('importandapply', 'mod_data'),\r\n        });\r\n\r\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, event => {\r\n            if (event.detail.result) {\r\n                window.location.assign(event.detail.url);\r\n            } else {\r\n                Notification.addNotification({\r\n                    type: 'error',\r\n                    message: event.detail.errors.join('<br>')\r\n                });\r\n            }\r\n        });\r\n        modalForm.show();\r\n    });\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_modalform","_notification","selectors","_exports","init","document","addEventListener","event","importPresetButton","target","closest","preventDefault","modalForm","ModalForm","modalConfig","title","getString","formClass","args","cmid","dataset","dataid","saveButtonText","events","FORM_SUBMITTED","detail","result","window","location","assign","url","Notification","addNotification","type","message","errors","join","show"],"mappings":"mJAwB6C,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;kFAD7CG,WAAAJ,uBAAAI,YACAC,cAAAL,uBAAAK,eAGA,MAAMC,6BACkB,gCAoCtBC,SAAAC,KA9BkBA,KAChBC,SAASC,iBAAiB,SAAUC,QAChC,MAAMC,mBAAqBD,MAAME,OAAOC,QAAQR,8BAEhD,IAAKM,mBACD,OAGJD,MAAMI,iBACN,MAAMC,UAAY,IAAIC,WAAAA,QAAU,CAC5BC,YAAa,CACTC,OAAO,EAAAC,KAAAA,WAAU,eAAgB,aAErCC,UAAW,iCACXC,KAAM,CAACC,KAAMX,mBAAmBY,QAAQC,QACxCC,gBAAgB,EAAAN,KAAAA,WAAU,iBAAkB,cAGhDJ,UAAUN,iBAAiBM,UAAUW,OAAOC,gBAAgBjB,QACpDA,MAAMkB,OAAOC,OACbC,OAAOC,SAASC,OAAOtB,MAAMkB,OAAOK,KAEpCC,cAAYhC,QAACiC,gBAAgB,CACzBC,KAAM,QACNC,QAAS3B,MAAMkB,OAAOU,OAAOC,KAAK,SAE1C,IAEJxB,UAAUyB,MAAM,GAClB,CACJ"}