{"version":3,"file":"view_nav.min.js","sources":["../src/view_nav.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Manage the timeline view navigation for the overview block.\r\n *\r\n * @copyright  2018 Bas Brands <bas@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport $ from 'jquery';\r\nimport * as CustomEvents from 'core/custom_interaction_events';\r\nimport Notification from 'core/notification';\r\nimport {setUserPreference} from 'core_user/repository';\r\nimport * as View from 'block_myoverview/view';\r\nimport SELECTORS from 'block_myoverview/selectors';\r\n\r\n/**\r\n * Update the user preference for the block.\r\n *\r\n * @param {String} filter The type of filter: display/sort/grouping.\r\n * @param {String} value The current preferred value.\r\n * @return {Promise}\r\n */\r\nconst updatePreferences = (filter, value) => {\r\n    let type = null;\r\n    if (filter === 'display') {\r\n        type = 'block_myoverview_user_view_preference';\r\n    } else if (filter === 'sort') {\r\n        type = 'block_myoverview_user_sort_preference';\r\n    } else if (filter === 'customfieldvalue') {\r\n        type = 'block_myoverview_user_grouping_customfieldvalue_preference';\r\n    } else {\r\n        type = 'block_myoverview_user_grouping_preference';\r\n    }\r\n\r\n    return setUserPreference(type, value)\r\n        .catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Event listener for the Display filter (cards, list).\r\n *\r\n * @param {object} root The root element for the overview block\r\n */\r\nconst registerSelector = root => {\r\n\r\n    const Selector = root.find(SELECTORS.FILTERS);\r\n\r\n    CustomEvents.define(Selector, [CustomEvents.events.activate]);\r\n    Selector.on(\r\n        CustomEvents.events.activate,\r\n        SELECTORS.FILTER_OPTION,\r\n        (e, data) => {\r\n            const option = $(e.target);\r\n\r\n            if (option.hasClass('active')) {\r\n                // If it's already active then we don't need to do anything.\r\n                return;\r\n            }\r\n\r\n            const filter = option.attr('data-filter');\r\n            const pref = option.attr('data-pref');\r\n            const customfieldvalue = option.attr('data-customfieldvalue');\r\n\r\n            root.find(SELECTORS.courseView.region).attr('data-' + filter, option.attr('data-value'));\r\n            updatePreferences(filter, pref);\r\n\r\n            if (customfieldvalue) {\r\n                root.find(SELECTORS.courseView.region).attr('data-customfieldvalue', customfieldvalue);\r\n                updatePreferences('customfieldvalue', customfieldvalue);\r\n            }\r\n\r\n            // Reset the views.\r\n\r\n            // Check if the user is currently in a searching state, if so we'll reset it.\r\n            const page = document.querySelector(SELECTORS.region.selectBlock);\r\n            const input = page.querySelector(SELECTORS.region.searchInput);\r\n            if (input.value !== '') {\r\n                const clearIcon = page.querySelector(SELECTORS.region.clearIcon);\r\n                input.value = '';\r\n                // Triggers the init so wont need to call it again.\r\n                View.clearSearch(clearIcon, root);\r\n            } else {\r\n                View.init(root);\r\n            }\r\n\r\n            data.originalEvent.preventDefault();\r\n        }\r\n    );\r\n\r\n    Selector.on(\r\n        CustomEvents.events.activate,\r\n        SELECTORS.DISPLAY_OPTION,\r\n        (e, data) => {\r\n            const option = $(e.target);\r\n\r\n            if (option.hasClass('active')) {\r\n                return;\r\n            }\r\n\r\n            const filter = option.attr('data-display-option');\r\n            const pref = option.attr('data-pref');\r\n\r\n            root.find(SELECTORS.courseView.region).attr('data-display', option.attr('data-value'));\r\n            updatePreferences(filter, pref);\r\n            View.reset(root);\r\n            data.originalEvent.preventDefault();\r\n        }\r\n    );\r\n};\r\n\r\n/**\r\n * Initialise the timeline view navigation by adding event listeners to\r\n * the navigation elements.\r\n *\r\n * @param {object} root The root element for the myoverview block\r\n */\r\nexport const init = root => {\r\n    root = $(root);\r\n    registerSelector(root);\r\n};\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireDefault","_jquery","CustomEvents","_notification","View","_selectors","updatePreferences","filter","value","type","setUserPreference","catch","Notification","exception","_exports","init","root","Selector","find","SELECTORS","FILTERS","define","events","activate","on","FILTER_OPTION","data","option","$","target","hasClass","attr","pref","customfieldvalue","courseView","region","page","document","querySelector","selectBlock","input","searchInput","clearIcon","clearSearch","originalEvent","preventDefault","DISPLAY_OPTION","reset","registerSelector"],"mappings":"4QA2BmD,SAAAA,yBAAAC,GAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAF,yBAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,EAAA,CAAA,SAAAI,wBAAAJ,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAAL,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAM,MAAAA,CAAAA,QAAAN,GAAAG,IAAAA,EAAAJ,yBAAAG,GAAA,GAAAC,GAAAA,EAAAI,IAAAP,GAAA,OAAAG,EAAAK,IAAAR,GAAA,IAAAS,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAf,EAAAe,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAjB,EAAAe,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAd,EAAAe,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAf,EAAAe,GAAAN,OAAAA,EAAAH,QAAAN,EAAAG,GAAAA,EAAAgB,IAAAnB,EAAAS,GAAAA,CAAA,CAAA,SAAAW,uBAAApB,GAAAA,OAAAA,GAAAA,EAAAK,WAAAL,EAAAM,CAAAA,QAAAN,EAAA;;;;;;kFALnDqB,QAAAD,uBAAAC,SACAC,aAAAlB,wBAAAkB,cACAC,cAAAH,uBAAAG,eAEAC,KAAApB,wBAAAoB,MACAC,WAAAL,uBAAAK,YASA,MAAMC,kBAAoBA,CAACC,OAAQC,SAC/B,IAAIC,KAAO,KAWX,OATIA,KADW,YAAXF,OACO,wCACW,SAAXA,OACA,wCACW,qBAAXA,OACA,6DAEA,6CAGJ,EAAAG,YAAAA,mBAAkBD,KAAMD,OAC1BG,MAAMC,cAAY1B,QAAC2B,UAAU,EAoFpCC,SAAAC,KAHkBC,OAzEKA,QAErB,MAAMC,SAAWD,KAAKE,KAAKC,WAAAA,QAAUC,SAErClB,aAAamB,OAAOJ,SAAU,CAACf,aAAaoB,OAAOC,WACnDN,SAASO,GACLtB,aAAaoB,OAAOC,SACpBJ,WAAAA,QAAUM,eACV,CAAC7C,EAAG8C,QACA,MAAMC,QAAS,EAAAC,QAAAA,SAAEhD,EAAEiD,QAEnB,GAAIF,OAAOG,SAAS,UAEhB,OAGJ,MAAMvB,OAASoB,OAAOI,KAAK,eACrBC,KAAOL,OAAOI,KAAK,aACnBE,iBAAmBN,OAAOI,KAAK,yBAErCf,KAAKE,KAAKC,WAAAA,QAAUe,WAAWC,QAAQJ,KAAK,QAAUxB,OAAQoB,OAAOI,KAAK,eAC1EzB,kBAAkBC,OAAQyB,MAEtBC,mBACAjB,KAAKE,KAAKC,WAAAA,QAAUe,WAAWC,QAAQJ,KAAK,wBAAyBE,kBACrE3B,kBAAkB,mBAAoB2B,mBAM1C,MAAMG,KAAOC,SAASC,cAAcnB,WAAAA,QAAUgB,OAAOI,aAC/CC,MAAQJ,KAAKE,cAAcnB,WAAAA,QAAUgB,OAAOM,aAClD,GAAoB,KAAhBD,MAAMhC,MAAc,CACpB,MAAMkC,UAAYN,KAAKE,cAAcnB,WAAAA,QAAUgB,OAAOO,WACtDF,MAAMhC,MAAQ,GAEdJ,KAAKuC,YAAYD,UAAW1B,KAChC,MACIZ,KAAKW,KAAKC,MAGdU,KAAKkB,cAAcC,gBAAgB,IAI3C5B,SAASO,GACLtB,aAAaoB,OAAOC,SACpBJ,WAAAA,QAAU2B,gBACV,CAAClE,EAAG8C,QACA,MAAMC,QAAS,EAAAC,QAAAA,SAAEhD,EAAEiD,QAEnB,GAAIF,OAAOG,SAAS,UAChB,OAGJ,MAAMvB,OAASoB,OAAOI,KAAK,uBACrBC,KAAOL,OAAOI,KAAK,aAEzBf,KAAKE,KAAKC,WAAAA,QAAUe,WAAWC,QAAQJ,KAAK,eAAgBJ,OAAOI,KAAK,eACxEzB,kBAAkBC,OAAQyB,MAC1B5B,KAAK2C,MAAM/B,MACXU,KAAKkB,cAAcC,gBAAgB,GAE1C,EAWDG,CADAhC,MAAO,EAAAY,QAAC1C,SAAC8B,MACa,CACxB"}