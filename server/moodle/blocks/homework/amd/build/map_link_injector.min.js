define("block_homework/map_link_injector",(function(){return{init:function(){if(!document.querySelector('[data-region="calendar"]'))return;function DisplayMapLink(){setTimeout((()=>{const locationContent=document.querySelector(".location-content");if(!locationContent)return;const regex=/,\s*(([a-zA-Zæøå 0-9]|-[^\s])+)\s*[^)]*\),\s*(.*)/,realLocation=locationContent.textContent.split("\n").map((str=>{const match=str.match(regex);if(match){return`${match[1]}, ${match[3]}`}return str})).join("\n"),link=document.createElement("a");link.href=`https://www.google.com/maps/search/?api=1&query=${realLocation}`,link.textContent=locationContent.textContent,link.target="_blank",locationContent.innerHTML="",locationContent.appendChild(link)}),500)}const observer=new MutationObserver((mutations=>{mutations.forEach((mutation=>{mutation.target.classList.contains("show")&&DisplayMapLink()}))})),observeBackdrop=()=>{const modalBackdrop=document.querySelector('[data-region="modal-backdrop"]');modalBackdrop?observer.observe(modalBackdrop,{attributes:!0,attributeFilter:["class"]}):setTimeout(observeBackdrop,100)};function addEventListenerToButtons(event){const target=event.target;(target.classList.contains("eventname")||target.closest(".eventname"))&&(DisplayMapLink(),observeBackdrop(),document.querySelectorAll("[data-region]").forEach((element=>{element.removeEventListener("click",addEventListenerToButtons)})))}DisplayMapLink(),document.querySelectorAll("[data-region]").forEach((element=>{element.addEventListener("click",addEventListenerToButtons)}))}}}));

//# sourceMappingURL=map_link_injector.min.js.map