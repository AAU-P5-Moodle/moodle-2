{"version":3,"file":"clickInfo.min.js","sources":["../src/clickInfo.js"],"sourcesContent":["import $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport MyModal from 'block_homework/modals';\nimport ModalEvents from 'core/modal_events';\n\n/**\n * Homework/amd/src/modal_homework.js\n *\n * @package\n * @copyright 2024, cs-24-sw-5-01 <cs-24-sw-5-01@student.aau.dk>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n */\n\n\n/**\n * Fetches and initializes the completion modal for the homework module that was clicked on.\n * @param title Title of modal to be displayed on click\n * @param data Data retrieved from the database for the homework module and its materials\n * @param user_id ID of currently logged in user.\n * @param completions The completions of the currently logged in user.\n * @returns {Promise<void>} A promise that, when fulfilled, opens the modal\n */\nexport const init = async(title, data, user_id, completions) => {\n    let homeworkid;\n    let literaturelist = [];\n    let linkslist = [];\n    let videoslist =[];\n\n    const buttons = document.getElementsByClassName(\"timebutton\");\n\n    //For each button, retrieve the ID, as it points to the homework material\n    for(let i = 0; i < buttons.length; i++) {\n        (function(index) {\n            buttons[index].addEventListener(\"click\", function(event) {\n                homeworkid = event.target.id;\n                literaturelist = [];\n                linkslist = [];\n                videoslist = [];\n                // Finding the ID of the homework module that matches the button ID.\n                for (let item of data) {\n                    if(!(item.hasOwnProperty('id'))){\n                        throw new Error(\"missing id in homework\")\n                    }\n                    if (item.id !== homeworkid){\n                        continue;\n                    }\n                        if(!(item.hasOwnProperty('literature'))) {\n                            throw new Error(\"missing id in homework\")\n                        }\n                        // For each literature item, push it to the literature list if it is not in completions\n                        for (let literature of Object.values(item.literature)) {\n                            let foundLiterature =  Object.values(completions).some(entry => entry.literature_id === literature.id);\n                            if (!foundLiterature) {\n                                literaturelist.push(literature);\n                            }\n                        }\n                        if(!(item.hasOwnProperty('links'))) {\n                            throw new Error(\"missing id in homework\")\n                        }\n                    // For each link item, push it to the link list if it is not in completions\n                        for (let links of Object.values(item.links)) {\n                        let foundLinks =  Object.values(completions).some(entry => entry.link_id === links.id);\n                        if (!foundLinks) {\n                        linkslist.push(links);\n                        }\n                    }\n                        if(!item.hasOwnProperty('videos')) {\n                            throw new Error(\"missing id in homework\")\n                        }\n                    // For each video item, push it to the video list if it is not in completions\n                    for (let videos of Object.values(item.videos)) {\n                        let foundVideos =  Object.values(completions).some(entry => entry.video_id === videos.id);\n                        if (!foundVideos) {\n                        videoslist.push(videos);\n                        }\n                    }\n\n                }\n            })\n        })(i);\n    }\n\n    // Create the modal using block_homework_get_infohomework_modal\n    $(document).ready(function() {\n        $('.timebutton').on('click', () => {\n            Ajax.call([{\n                methodname: 'block_homework_get_infohomework_modal',\n                args:{\n                    homework_id: homeworkid,\n                    data1: literaturelist,\n                    data2: linkslist,\n                    data3: videoslist,\n                },\n                done: async function(response) {\n                    const modal = await MyModal.create({\n                        title: response.course + \": \" + response.title,\n                        body: `${response.html}`,\n                        large: true,\n                        removeOnClose: true,\n                    });\n                    // Show the modal.\n                    await modal.show();\n\n                    // Initialize elements once the modal content is rendered.\n                    modal.getRoot().on(ModalEvents.shown, () => {\n                        // Initialize the elements after modal is displayed.\n\n                        // Attach event listeners for page input validation.\n\n\n\n                    });\n\n                    // Attach event listeners for buttons\n                    modal.getRoot().on('click', '[data-action=\"submit\"]', (e) => {\n                        e.preventDefault();\n                        handleFormSubmit(user_id, modal);\n\n\n                    });\n\n                    modal.getRoot().on('click', '[data-action=\"cancel\"]', (e) => {\n                        e.preventDefault();\n                        modal.destroy();\n                    });\n                },\n                fail: (error) => {\n                    throw new Error(`Failed to load info homework content: ${JSON.stringify(error)}`);\n                }\n            }]);\n        });\n    });\n};\n\n/**\n * Handle clicking the submit button of the form and updating the database with completion and times\n * @param user_id ID of currently logged in user\n * @param modal The modal that is being submitted\n */\nconst handleFormSubmit = (user_id, modal) => {\n    let literatureInputFields = document.querySelectorAll('.homework-time-literature');\n    let linksInputFields = document.querySelectorAll('.homework-time-links');\n    let videosInputFields = document.querySelectorAll('.homework-time-videos');\n    let timeData1 = [];\n    let timeData2 = [];\n    let timeData3 = [];\n    // Finds the data of all input fields, both literature, link and video, and adds the ID and time to an array.\n    for (let inputField of literatureInputFields) {\n        if(inputField.value !== \"\") {\n            timeData1.push({\n                id: inputField.id,\n                time: inputField.value,\n            })\n        }\n    }\n    for (let inputField of linksInputFields) {\n        if(inputField.value !== \"\") {\n            timeData2.push({\n                id: inputField.id,\n                time: inputField.value,\n            })\n        }\n    }\n    for (let inputField of videosInputFields) {\n        if(inputField.value !==\"\") {\n            timeData3.push({\n                id: inputField.id,\n                time: inputField.value,\n            })\n        }\n    }\n\n    // If no data has been filled, do nothing.\n    if(!timeData1.length && !timeData2.length && !timeData3.length){\n        modal.destroy();\n        return;\n    }\n\n    // If data has been filled, call block_homework_save_homeworktime with the user ID and data\n    Ajax.call([{\n        methodname: 'block_homework_save_homeworktime',  // Your PHP function that will handle the data\n        args: {\n            user: user_id,\n            timeCompletedLiterature: timeData1,\n            timeCompletedLinks: timeData2,\n            timeCompletedVideos: timeData3,\n        },\n        done: function(response) {\n            console.log(\"Data saved successfully:\", response);\n            // Close the modal after successful submission\n            modal.destroy();\n            location.reload();\n        },\n        fail: function(error) {\n            console.error(\"Failed to save data:\", error);\n\n        }\n    }]);\n}"],"names":["_interopRequireDefault","e","__esModule","default","_jquery","_ajax","_modals","_modal_events","_exports","init","async","title","data","user_id","completions","homeworkid","literaturelist","linkslist","videoslist","buttons","document","getElementsByClassName","i","length","addEventListener","event","target","id","item","hasOwnProperty","Error","literature","Object","values","some","entry","literature_id","push","links","link_id","videos","video_id","$","ready","on","Ajax","call","methodname","args","homework_id","data1","data2","data3","done","response","modal","MyModal","create","course","body","html","large","removeOnClose","show","getRoot","ModalEvents","shown","preventDefault","handleFormSubmit","destroy","fail","error","JSON","stringify","literatureInputFields","querySelectorAll","linksInputFields","videosInputFields","timeData1","timeData2","timeData3","inputField","value","time","user","timeCompletedLiterature","timeCompletedLinks","timeCompletedVideos","console","log","location","reload"],"mappings":"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"}