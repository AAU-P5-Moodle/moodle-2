{"version":3,"file":"homework_injector.min.js","sources":["../src/homework_injector.js"],"sourcesContent":["define(function() {\r\n    return {\r\n        init: function(homework) {\r\n            console.log(\"Script initialized\");\r\n\r\n            console.log(\"Homework\"+ JSON.stringify(homework));\r\n            //Check that the current page contains a calendar to stop the code on other pages with homework block.\r\n            if (document.querySelector('[data-region=\"calendar\"]') && JSON.stringify(homework).length > 1) {\r\n                console.log('Page contains data-region=\"calendar\"');\r\n\r\n                // Function that shows the content in the moodle modal.\r\n                const addContentToModal = () => {\r\n                    //Run a timeout of 500ms to make sure the modal and content are there.\r\n                    setTimeout(() => {\r\n                        //Get the modal and determine if is there\r\n                        const modalContent = document.querySelector('.modal-content');\r\n                        if (modalContent) {\r\n                            console.log('Modal content detected.');\r\n                            //Get the inlaying container and determine if it's there.\r\n                            const summaryContainer = modalContent.querySelector('.summary-modal-container');\r\n                            if (summaryContainer) {\r\n                                // Get the container that contains text data\r\n                                const containerFluid = summaryContainer.querySelector('.container-fluid');\r\n                                console.log('Container fluid:', containerFluid);\r\n\r\n                                //Loop through all links in the text area to see if one contains a link to a course and if so what is the course id\r\n                                let foundCourseLink = false;\r\n                                let Courseid;\r\n                                containerFluid.querySelectorAll('a').forEach((element) => {\r\n                                    if (element.href.includes('/course')) {\r\n                                        console.log(\"in here\");\r\n                                        const regex = /course\\/view\\.php\\?id=(\\d+)/;\r\n                                        const match = element.href.match(regex);\r\n                                        if (match) {\r\n                                            Courseid = match[1]; // Extract the ID\r\n                                            console.log(\"/course was found with ID:\", Courseid);\r\n                                        }\r\n                                        foundCourseLink = true;\r\n                                        return false; // Break out of the forEach loop\r\n                                    }\r\n                                });\r\n\r\n\r\n                                //Filter out courses from incorrect course\r\n                                let filteredHomework = Object.values(homework).filter((work) => {\r\n                                    return work.course === Courseid;\r\n                                })\r\n                                console.log(\"new homework\" + JSON.stringify(filteredHomework));\r\n\r\n                                // Determine if the modal is in the dashboard, a course link and a there isn't already a homeworkrow\r\n                                if (foundCourseLink && window.location.href.includes(\"/my\") && !document.getElementById(\"homeworkRow\")) {\r\n                                    //set the div up accoring to the moodle standard\r\n                                    const homeworkDiv = document.createElement('div');\r\n                                    homeworkDiv.className = 'row mt-1';\r\n                                    homeworkDiv.id = 'homeworkRow';\r\n\r\n                                    const homeworkIconDiv = document.createElement('div');\r\n                                    homeworkIconDiv.className = 'col-1';\r\n                                    homeworkIconDiv.innerHTML = '<i class=\"icon fa fa-align-left fa-fw\" title=\"Description\" role=\"img\" aria-label=\"Description\"></i>';\r\n\r\n                                    const homeworkLinkDiv = document.createElement('div');\r\n                                    homeworkLinkDiv.className = 'description-content col-11';\r\n                                    // Create the new string with all homework info for that course\r\n                                    let newString ='';\r\n                                    Object.values(filteredHomework).forEach((homeworkInfo) => {\r\n                                        newString += `<p>HomeWork name = ${homeworkInfo.name} Intro = ${homeworkInfo.intro} link = <a href=\"https://localhost/mod/homework/view.php?id=${homeworkInfo.id}\">link to homework</a>` +\r\n                                            ` dueDate = ${homeworkInfo.duedate ? `Duedate is ${Date(homeworkInfo.duedate)}` : 'No duedate'}</p>`;\r\n                                    });\r\n                                    console.log(\"new string = \" + newString)\r\n                                    homeworkLinkDiv.innerHTML = newString;\r\n\r\n                                    //Add the divs to each other\r\n                                    homeworkDiv.appendChild(homeworkIconDiv);\r\n                                    homeworkDiv.appendChild(homeworkLinkDiv);\r\n\r\n                                    containerFluid.appendChild(homeworkDiv);\r\n                                    console.log(\"New content added to modal.\");\r\n                                }\r\n                            }\r\n                        }\r\n                    }, 500);\r\n                };\r\n\r\n                // Observer setup\r\n                const observer = new MutationObserver((mutations) => {\r\n                    mutations.forEach((mutation) => {\r\n                        //determine if the modal is shown based on the show class\r\n                        if (mutation.target.classList.contains('show')) {\r\n                            addContentToModal();\r\n                        }\r\n                    });\r\n                });\r\n\r\n                //Observe function called when the event button is clicked\r\n                const observeBackdrop = () => {\r\n                    // get the modal\r\n                    const modalBackdrop = document.querySelector('[data-region=\"modal-backdrop\"]');\r\n                    //Determine if the modalback is there\r\n                    if (modalBackdrop) {\r\n                        //Start observing when the modal has appeared\r\n                        observer.observe(modalBackdrop, { attributes: true, attributeFilter: ['class'] });\r\n                    } else {\r\n                        //If the modal was not found then try agian every 100 ms\r\n                        setTimeout(observeBackdrop, 100);\r\n                    }\r\n                };\r\n\r\n                // Perform an initial check for the modal\r\n                addContentToModal();\r\n\r\n                //Add a eventlisnter to all event buttons\r\n                document.querySelectorAll('[data-region]').forEach(element => {\r\n                    element.addEventListener('click', addEventListenerToButtons);\r\n                });\r\n\r\n                function addEventListenerToButtons(event) {\r\n                    //Determine if the data region is an event button\r\n                    const target = event.target;\r\n                    if (target.classList.contains('eventname') || target.closest('.eventname')) {\r\n                        console.log('Class \"eventname\" found on the clicked element or its parent.');\r\n                        addContentToModal();\r\n                        observeBackdrop();\r\n                        //Remove the eventlistner after moodle has appeared due to the observer being better\r\n                        removeEventListeners();\r\n                    }\r\n                    console.log('Element with data-region clicked:', event.target);\r\n                }\r\n\r\n                function removeEventListeners() {\r\n                    document.querySelectorAll('[data-region]').forEach(element => {\r\n                        element.removeEventListener('click', addEventListenerToButtons);\r\n                    });\r\n                }\r\n            } else {\r\n                console.log('Page does not contain data-region=\"calendar\"');\r\n            }\r\n        }\r\n    };\r\n});\r\n"],"names":["define","init","homework","console","log","JSON","stringify","document","querySelector","length","addContentToModal","setTimeout","modalContent","summaryContainer","containerFluid","Courseid","foundCourseLink","querySelectorAll","forEach","element","href","includes","regex","match","filteredHomework","Object","values","filter","work","course","window","location","getElementById","homeworkDiv","createElement","className","id","homeworkIconDiv","innerHTML","homeworkLinkDiv","newString","homeworkInfo","name","intro","duedate","Date","appendChild","observer","MutationObserver","mutations","mutation","target","classList","contains","observeBackdrop","modalBackdrop","observe","attributes","attributeFilter","addEventListenerToButtons","event","closest","removeEventListener","addEventListener"],"mappings":"AAAAA,2CAAO,WACH,MAAO,CACHC,KAAM,SAASC,UAKX,GAJAC,QAAQC,IAAI,sBAEZD,QAAQC,IAAI,WAAYC,KAAKC,UAAUJ,WAEnCK,SAASC,cAAc,6BAA+BH,KAAKC,UAAUJ,UAAUO,OAAS,EAAG,CAC3FN,QAAQC,IAAI,wCAGZ,MAAMM,kBAAoBA,KAEtBC,YAAW,KAEP,MAAMC,aAAeL,SAASC,cAAc,kBAC5C,GAAII,aAAc,CACdT,QAAQC,IAAI,2BAEZ,MAAMS,iBAAmBD,aAAaJ,cAAc,4BACpD,GAAIK,iBAAkB,CAElB,MAAMC,eAAiBD,iBAAiBL,cAAc,oBACtDL,QAAQC,IAAI,mBAAoBU,gBAGhC,IACIC,SADAC,iBAAkB,EAEtBF,eAAeG,iBAAiB,KAAKC,SAASC,UAC1C,GAAIA,QAAQC,KAAKC,SAAS,WAAY,CAClClB,QAAQC,IAAI,WACZ,MAAMkB,MAAQ,8BACRC,MAAQJ,QAAQC,KAAKG,MAAMD,OAMjC,OALIC,QACAR,SAAWQ,MAAM,GACjBpB,QAAQC,IAAI,6BAA8BW,WAE9CC,iBAAkB,GACX,CACX,KAKJ,IAAIQ,iBAAmBC,OAAOC,OAAOxB,UAAUyB,QAAQC,MAC5CA,KAAKC,SAAWd,WAK3B,GAHAZ,QAAQC,IAAI,eAAiBC,KAAKC,UAAUkB,mBAGxCR,iBAAmBc,OAAOC,SAASX,KAAKC,SAAS,SAAWd,SAASyB,eAAe,eAAgB,CAEpG,MAAMC,YAAc1B,SAAS2B,cAAc,OAC3CD,YAAYE,UAAY,WACxBF,YAAYG,GAAK,cAEjB,MAAMC,gBAAkB9B,SAAS2B,cAAc,OAC/CG,gBAAgBF,UAAY,QAC5BE,gBAAgBC,UAAY,sGAE5B,MAAMC,gBAAkBhC,SAAS2B,cAAc,OAC/CK,gBAAgBJ,UAAY,6BAE5B,IAAIK,UAAW,GACff,OAAOC,OAAOF,kBAAkBN,SAASuB,eACrCD,WAAa,sBAAsBC,aAAaC,gBAAgBD,aAAaE,oEAAoEF,aAAaL,sCAC5IK,aAAaG,QAAU,cAAcC,KAAKJ,aAAaG,WAAa,kBAAkB,IAE5GzC,QAAQC,IAAI,gBAAkBoC,WAC9BD,gBAAgBD,UAAYE,UAG5BP,YAAYa,YAAYT,iBACxBJ,YAAYa,YAAYP,iBAExBzB,eAAegC,YAAYb,aAC3B9B,QAAQC,IAAI,8BAChB,CACJ,CACJ,IACD,IAAI,EAIL2C,SAAW,IAAIC,kBAAkBC,YACnCA,UAAU/B,SAASgC,WAEXA,SAASC,OAAOC,UAAUC,SAAS,SACnC3C,mBACJ,GACF,IAIA4C,gBAAkBA,KAEpB,MAAMC,cAAgBhD,SAASC,cAAc,kCAEzC+C,cAEAR,SAASS,QAAQD,cAAe,CAAEE,YAAY,EAAMC,gBAAiB,CAAC,WAGtE/C,WAAW2C,gBAAiB,IAChC,EAWJ,SAASK,0BAA0BC,OAE/B,MAAMT,OAASS,MAAMT,QACjBA,OAAOC,UAAUC,SAAS,cAAgBF,OAAOU,QAAQ,iBACzD1D,QAAQC,IAAI,iEACZM,oBACA4C,kBAQJ/C,SAASU,iBAAiB,iBAAiBC,SAAQC,UAC/CA,QAAQ2C,oBAAoB,QAASH,0BAA0B,KALnExD,QAAQC,IAAI,oCAAqCwD,MAAMT,OAC3D,CAlBAzC,oBAGAH,SAASU,iBAAiB,iBAAiBC,SAAQC,UAC/CA,QAAQ4C,iBAAiB,QAASJ,0BAA0B,GAqBpE,MACIxD,QAAQC,IAAI,+CAEpB,EAER"}