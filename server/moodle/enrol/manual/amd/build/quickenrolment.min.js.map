{"version":3,"file":"quickenrolment.min.js","sources":["../src/quickenrolment.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Quick enrolment AMD module.\r\n *\r\n * @module     enrol_manual/quickenrolment\r\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport * as DynamicTable from 'core_table/dynamic';\r\nimport * as Str from 'core/str';\r\nimport * as Toast from 'core/toast';\r\nimport Config from 'core/config';\r\nimport Fragment from 'core/fragment';\r\nimport ModalEvents from 'core/modal_events';\r\nimport Notification from 'core/notification';\r\nimport jQuery from 'jquery';\r\nimport Pending from 'core/pending';\r\nimport Prefetch from 'core/prefetch';\r\nimport ModalSaveCancel from 'core/modal_save_cancel';\r\n\r\nconst Selectors = {\r\n    cohortSelector: \"#id_cohortlist\",\r\n    triggerButtons: \".enrolusersbutton.enrol_manual_plugin [type='submit']\",\r\n    unwantedHiddenFields: \"input[value='_qf__force_multiselect_submission']\",\r\n    buttonWrapper: '[data-region=\"wrapper\"]',\r\n};\r\n\r\n/**\r\n * Get the content of the body for the specified context.\r\n *\r\n * @param {Number} contextId\r\n * @returns {Promise}\r\n */\r\nconst getBodyForContext = contextId => {\r\n    return Fragment.loadFragment('enrol_manual', 'enrol_users_form', contextId, {});\r\n};\r\n\r\n/**\r\n * Get the dynamic table for the button.\r\n *\r\n * @param {HTMLElement} element\r\n * @returns {HTMLElement}\r\n */\r\nconst getDynamicTableForElement = element => {\r\n    const wrapper = element.closest(Selectors.buttonWrapper);\r\n\r\n    return DynamicTable.getTableFromId(wrapper.dataset.tableUniqueid);\r\n};\r\n\r\n/**\r\n * Register the event listeners for this contextid.\r\n *\r\n * @param {Number} contextId\r\n */\r\nconst registerEventListeners = contextId => {\r\n    document.addEventListener('click', e => {\r\n        if (e.target.closest(Selectors.triggerButtons)) {\r\n            e.preventDefault();\r\n\r\n            showModal(getDynamicTableForElement(e.target), contextId);\r\n\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Display the modal for this contextId.\r\n *\r\n * @param {HTMLElement} dynamicTable The table to beb refreshed when changes are made\r\n * @param {Number} contextId\r\n * @returns {Promise}\r\n */\r\nconst showModal = (dynamicTable, contextId) => {\r\n    const pendingPromise = new Pending('enrol_manual/quickenrolment:showModal');\r\n\r\n    return ModalSaveCancel.create({\r\n        large: true,\r\n        title: Str.get_string('enrolusers', 'enrol_manual'),\r\n        body: getBodyForContext(contextId),\r\n        buttons: {\r\n            save: Str.get_string('enrolusers', 'enrol_manual'),\r\n        },\r\n        show: true,\r\n    })\r\n    .then(modal => {\r\n        modal.getRoot().on(ModalEvents.save, e => {\r\n            // Trigger a form submission, so that any mform elements can do final tricks before the form submission\r\n            // is processed.\r\n            // The actual submit even tis captured in the next handler.\r\n\r\n            e.preventDefault();\r\n            modal.getRoot().find('form').submit();\r\n        });\r\n\r\n        modal.getRoot().on('submit', 'form', e => {\r\n            e.preventDefault();\r\n\r\n            submitFormAjax(dynamicTable, modal);\r\n        });\r\n\r\n        modal.getRoot().on(ModalEvents.hidden, () => {\r\n            modal.destroy();\r\n        });\r\n\r\n        return modal;\r\n    })\r\n    .then(modal => Promise.all([modal, modal.getBodyPromise()]))\r\n    .then(([modal, body]) => {\r\n        if (body.get(0).querySelector(Selectors.cohortSelector)) {\r\n            return modal.setSaveButtonText(Str.get_string('enroluserscohorts', 'enrol_manual')).then(() => modal);\r\n        }\r\n\r\n        return modal;\r\n    })\r\n    .then(modal => {\r\n        pendingPromise.resolve();\r\n\r\n        return modal;\r\n    })\r\n    .catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Submit the form via ajax.\r\n *\r\n * @param {HTMLElement} dynamicTable\r\n * @param {Object} modal\r\n */\r\nconst submitFormAjax = (dynamicTable, modal) => {\r\n    // Note: We use a jQuery object here so that we can use its serialize functionality.\r\n    const form = modal.getRoot().find('form');\r\n\r\n    // Before send the data through AJAX, we need to parse and remove some unwanted hidden fields.\r\n    // This hidden fields are added automatically by mforms and when it reaches the AJAX we get an error.\r\n    form.get(0).querySelectorAll(Selectors.unwantedHiddenFields).forEach(hiddenField => hiddenField.remove());\r\n\r\n    modal.hide();\r\n    modal.destroy();\r\n\r\n    jQuery.ajax(\r\n        `${Config.wwwroot}/enrol/manual/ajax.php?${form.serialize()}`,\r\n        {\r\n            type: 'GET',\r\n            processData: false,\r\n            contentType: \"application/json\",\r\n        }\r\n    )\r\n    .then(response => {\r\n        if (response.error) {\r\n            throw new Error(response.error);\r\n        }\r\n\r\n        return response.count;\r\n    })\r\n    .then(count => {\r\n        return Promise.all([\r\n            Str.get_string('totalenrolledusers', 'enrol', count),\r\n            DynamicTable.refreshTableContent(dynamicTable),\r\n        ]);\r\n    })\r\n    .then(([notificationBody]) => notificationBody)\r\n    .then(notificationBody => Toast.add(notificationBody))\r\n    .catch(error => {\r\n        Notification.addNotification({\r\n            message: error.message,\r\n            type: 'error',\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\n * Set up quick enrolment for the manual enrolment plugin.\r\n *\r\n * @param {Number} contextid The context id to setup for\r\n */\r\nexport const init = ({contextid}) => {\r\n    registerEventListeners(contextid);\r\n\r\n    Prefetch.prefetchStrings('enrol_manual', [\r\n        'enrolusers',\r\n        'enroluserscohorts',\r\n    ]);\r\n\r\n    Prefetch.prefetchString('enrol', 'totalenrolledusers');\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","_interopRequireWildcard","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","DynamicTable","Str","Toast","_config","_fragment","_modal_events","_notification","_jquery","_pending","_prefetch","_modal_save_cancel","Selectors","getBodyForContext","contextId","Fragment","loadFragment","registerEventListeners","document","addEventListener","target","closest","preventDefault","showModal","element","wrapper","getTableFromId","dataset","tableUniqueid","getDynamicTableForElement","dynamicTable","pendingPromise","Pending","ModalSaveCancel","create","large","title","get_string","body","buttons","save","show","then","modal","getRoot","on","ModalEvents","find","submit","submitFormAjax","hidden","destroy","Promise","all","getBodyPromise","_ref","querySelector","setSaveButtonText","resolve","catch","Notification","exception","form","querySelectorAll","forEach","hiddenField","remove","hide","jQuery","ajax","Config","wwwroot","serialize","type","processData","contentType","response","error","Error","count","refreshTableContent","_ref2","notificationBody","add","addNotification","message","_exports","init","_ref3","contextid","Prefetch","prefetchStrings","prefetchString"],"mappings":"4WAgCqD,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA,CAAA,SAAAG,yBAAAH,GAAA,GAAA,mBAAAI,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAD,yBAAA,SAAAH,GAAAA,OAAAA,EAAAM,EAAAD,IAAAL,EAAA,CAAA,SAAAO,wBAAAP,EAAAK,GAAAA,IAAAA,GAAAL,GAAAA,EAAAC,WAAAD,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAE,MAAAA,CAAAA,QAAAF,GAAAM,IAAAA,EAAAH,yBAAAE,GAAA,GAAAC,GAAAA,EAAAE,IAAAR,GAAA,OAAAM,EAAAG,IAAAT,GAAA,IAAAU,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAhB,EAAAgB,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAlB,EAAAgB,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAf,EAAAgB,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAhB,EAAAgB,GAAAN,OAAAA,EAAAR,QAAAF,EAAAM,GAAAA,EAAAc,IAAApB,EAAAU,GAAAA;;;;;;;KAAA,8EAVrDW,aAAAd,wBAAAc,cACAC,IAAAf,wBAAAe,KACAC,MAAAhB,wBAAAgB,OACAC,QAAAzB,uBAAAyB,SACAC,UAAA1B,uBAAA0B,WACAC,cAAA3B,uBAAA2B,eACAC,cAAA5B,uBAAA4B,eACAC,QAAA7B,uBAAA6B,SACAC,SAAA9B,uBAAA8B,UACAC,UAAA/B,uBAAA+B,WACAC,mBAAAhC,uBAAAgC,oBAEA,MAAMC,yBACc,iBADdA,yBAEc,wDAFdA,+BAGoB,mDAHpBA,wBAIa,0BASbC,kBAAoBC,WACfC,UAAQjC,QAACkC,aAAa,eAAgB,mBAAoBF,UAAW,CAAA,GAoB1EG,uBAAyBH,YAC3BI,SAASC,iBAAiB,SAASvC,IAC/B,GAAIA,EAAEwC,OAAOC,QAAQT,0BAKjB,OAJAhC,EAAE0C,sBAEFC,UAhBsBC,WAC9B,MAAMC,QAAUD,QAAQH,QAAQT,yBAEhC,OAAOX,aAAayB,eAAeD,QAAQE,QAAQC,cAAc,EAa/CC,CAA0BjD,EAAEwC,QAASN,UAGnD,GACF,EAUAS,UAAYA,CAACO,aAAchB,aAC7B,MAAMiB,eAAiB,IAAIC,SAAOlD,QAAC,yCAEnC,OAAOmD,mBAAAA,QAAgBC,OAAO,CAC1BC,OAAO,EACPC,MAAOlC,IAAImC,WAAW,aAAc,gBACpCC,KAAMzB,kBAAkBC,WACxByB,QAAS,CACLC,KAAMtC,IAAImC,WAAW,aAAc,iBAEvCI,MAAM,IAETC,MAAKC,QACFA,MAAMC,UAAUC,GAAGC,cAAAA,QAAYN,MAAM5D,IAKjCA,EAAE0C,iBACFqB,MAAMC,UAAUG,KAAK,QAAQC,QAAQ,IAGzCL,MAAMC,UAAUC,GAAG,SAAU,QAAQjE,IACjCA,EAAE0C,iBAEF2B,eAAenB,aAAca,MAAM,IAGvCA,MAAMC,UAAUC,GAAGC,cAAWhE,QAACoE,QAAQ,KACnCP,MAAMQ,SAAS,IAGZR,SAEVD,MAAKC,OAASS,QAAQC,IAAI,CAACV,MAAOA,MAAMW,qBACxCZ,MAAKa,OAAmB,IAAjBZ,MAAOL,MAAKiB,KAChB,OAAIjB,KAAKjD,IAAI,GAAGmE,cAAc5C,0BACnB+B,MAAMc,kBAAkBvD,IAAImC,WAAW,oBAAqB,iBAAiBK,MAAK,IAAMC,QAG5FA,KAAK,IAEfD,MAAKC,QACFZ,eAAe2B,UAERf,SAEVgB,MAAMC,cAAY9E,QAAC+E,UAAU,EAS5BZ,eAAiBA,CAACnB,aAAca,SAElC,MAAMmB,KAAOnB,MAAMC,UAAUG,KAAK,QAIlCe,KAAKzE,IAAI,GAAG0E,iBAAiBnD,gCAAgCoD,SAAQC,aAAeA,YAAYC,WAEhGvB,MAAMwB,OACNxB,MAAMQ,UAENiB,QAAAA,QAAOC,KACH,GAAGC,gBAAOC,iCAAiCT,KAAKU,cAChD,CACIC,KAAM,MACNC,aAAa,EACbC,YAAa,qBAGpBjC,MAAKkC,WACF,GAAIA,SAASC,MACT,MAAM,IAAIC,MAAMF,SAASC,OAG7B,OAAOD,SAASG,KAAK,IAExBrC,MAAKqC,OACK3B,QAAQC,IAAI,CACfnD,IAAImC,WAAW,qBAAsB,QAAS0C,OAC9C9E,aAAa+E,oBAAoBlD,kBAGxCY,MAAKuC,QAAA,IAAEC,kBAAiBD,MAAA,OAAKC,gBAAgB,IAC7CxC,MAAKwC,kBAAoB/E,MAAMgF,IAAID,oBACnCvB,OAAMkB,QACHjB,cAAY9E,QAACsG,gBAAgB,CACzBC,QAASR,MAAMQ,QACfZ,KAAM,SACR,GACJ,EAiBJa,SAAAC,KATkBC,QAAiB,IAAhBC,UAACA,WAAUD,MAC5BvE,uBAAuBwE,WAEvBC,UAAQ5G,QAAC6G,gBAAgB,eAAgB,CACrC,aACA,sBAGJD,UAAAA,QAASE,eAAe,QAAS,qBAAqB,CACxD"}