{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Option helper for TinyMCE Editor Manager.\r\n *\r\n * @module editor_tiny/options\r\n * @copyright  2022 Andrew Lyons <andrew@nicols.co.uk>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nconst optionContextId = 'moodle:contextid';\r\nconst optionDraftItemId = 'moodle:draftitemid';\r\nconst filePickers = 'moodle:filepickers';\r\nconst optionsMoodleLang = 'moodle:language';\r\nconst currentLanguage = 'moodle:currentLanguage';\r\nconst optionPlaceholderSelectors = 'moodle:placeholderSelectors';\r\n\r\nexport const register = (editor, options) => {\r\n    const registerOption = editor.options.register;\r\n    const setOption = editor.options.set;\r\n\r\n    registerOption(optionContextId, {\r\n        processor: 'number',\r\n        \"default\": 0,\r\n    });\r\n    setOption(optionContextId, options.context);\r\n\r\n    registerOption(filePickers, {\r\n        processor: 'object',\r\n        \"default\": {},\r\n    });\r\n    setOption(filePickers, Object.assign({}, options.filepicker));\r\n\r\n    registerOption(optionDraftItemId, {\r\n        processor: 'number',\r\n        \"default\": 0,\r\n    });\r\n    setOption(optionDraftItemId, options.draftitemid);\r\n\r\n    registerOption(currentLanguage, {\r\n        processor: 'string',\r\n        \"default\": 'en',\r\n    });\r\n    setOption(currentLanguage, options.currentLanguage);\r\n\r\n    // This is primarily used by the media plugin, but it may be re-used elsewhere so is included here as it is large.\r\n    registerOption(optionsMoodleLang, {\r\n        processor: 'object',\r\n        \"default\": {},\r\n    });\r\n    setOption(optionsMoodleLang, options.language);\r\n\r\n    registerOption(optionPlaceholderSelectors, {\r\n        processor: 'array',\r\n        \"default\": [],\r\n    });\r\n    setOption(optionPlaceholderSelectors, options.placeholderSelectors);\r\n};\r\n\r\nexport const getContextId = (editor) => editor.options.get(optionContextId);\r\nexport const getDraftItemId = (editor) => editor.options.get(optionDraftItemId);\r\nexport const getFilepickers = (editor) => editor.options.get(filePickers);\r\nexport const getFilePicker = (editor, type) => getFilepickers(editor)[type];\r\nexport const getMoodleLang = (editor) => editor.options.get(optionsMoodleLang);\r\nexport const getCurrentLanguage = (editor) => editor.options.get(currentLanguage);\r\n\r\n/**\r\n * Get a set of namespaced options for all defined plugins.\r\n *\r\n * @param {object} options\r\n * @returns {object}\r\n */\r\nexport const getInitialPluginConfiguration = (options) => {\r\n    const config = {};\r\n\r\n    Object.entries(options.plugins).forEach(([pluginName, pluginConfig]) => {\r\n        const values = Object.entries(pluginConfig.config ?? {});\r\n        values.forEach(([optionName, value]) => {\r\n            config[getPluginOptionName(pluginName, optionName)] = value;\r\n        });\r\n    });\r\n\r\n    return config;\r\n};\r\n\r\n/**\r\n * Get the namespaced option name for a plugin.\r\n *\r\n * @param {string} pluginName\r\n * @param {string} optionName\r\n * @returns {string}\r\n */\r\nexport const getPluginOptionName = (pluginName, optionName) => `${pluginName}:${optionName}`;\r\n\r\n/**\r\n * Get the placeholder selectors.\r\n *\r\n * @param {TinyMCE} editor\r\n * @returns {array}\r\n */\r\nexport const getPlaceholderSelectors = (editor) => editor.options.get(optionPlaceholderSelectors);\r\n\r\n/**\r\n * Register placeholder selectos.\r\n *\r\n * @param {TinyMCE} editor\r\n * @param {array} selectors\r\n */\r\nexport const registerPlaceholderSelectors = (editor, selectors) => {\r\n    if (selectors.length) {\r\n        let existingData = getPlaceholderSelectors(editor);\r\n        existingData = existingData.concat(selectors);\r\n        editor.options.set(optionPlaceholderSelectors, existingData);\r\n    }\r\n};\r\n"],"names":["_exports","register","editor","options","registerOption","setOption","set","processor","default","context","Object","assign","filepicker","draftitemid","currentLanguage","language","placeholderSelectors","getContextId","get","getDraftItemId","getFilepickers","getFilePicker","type","getMoodleLang","getCurrentLanguage","getInitialPluginConfiguration","config","entries","plugins","forEach","_ref","pluginName","pluginConfig","_ref2","optionName","value","getPluginOptionName","getPlaceholderSelectors","registerPlaceholderSelectors","selectors","length","existingData","concat"],"mappings":"yaAsEEA,SAAAC,SAxCsBA,CAACC,OAAQC,WAC7B,MAAMC,eAAiBF,OAAOC,QAAQF,SAChCI,UAAYH,OAAOC,QAAQG,IAEjCF,eAXoB,mBAWY,CAC5BG,UAAW,SACXC,QAAW,IAEfH,UAfoB,mBAeOF,QAAQM,SAEnCL,eAfgB,qBAeY,CACxBG,UAAW,SACXC,QAAW,CAAC,IAEhBH,UAnBgB,qBAmBOK,OAAOC,OAAO,CAAA,EAAIR,QAAQS,aAEjDR,eAtBsB,qBAsBY,CAC9BG,UAAW,SACXC,QAAW,IAEfH,UA1BsB,qBA0BOF,QAAQU,aAErCT,eAzBoB,yBAyBY,CAC5BG,UAAW,SACXC,QAAW,OAEfH,UA7BoB,yBA6BOF,QAAQW,iBAGnCV,eAjCsB,kBAiCY,CAC9BG,UAAW,SACXC,QAAW,CAAC,IAEhBH,UArCsB,kBAqCOF,QAAQY,UAErCX,eArC+B,8BAqCY,CACvCG,UAAW,QACXC,QAAW,KAEfH,UAzC+B,8BAyCOF,QAAQa,qBAAqB,EAGKhB,SAAAiB,aAA/Cf,QAAWA,OAAOC,QAAQe,IAjD/B,oBAkDwDlB,SAAAmB,eAAjDjB,QAAWA,OAAOC,QAAQe,IAjD/B,sBAkDnB,MAAME,eAAkBlB,QAAWA,OAAOC,QAAQe,IAjDrC,sBAiDsDlB,SAAAoB,eAAAA,eACEpB,SAAAqB,cAA/CA,CAACnB,OAAQoB,OAASF,eAAelB,QAAQoB,MACStB,SAAAuB,cAAjDrB,QAAWA,OAAOC,QAAQe,IAlD9B,mBAmDwDlB,SAAAwB,mBAA/CtB,QAAWA,OAAOC,QAAQe,IAlDrC,0BAqEtBlB,SAAAyB,8BAX4CtB,UAC1C,MAAMuB,OAAS,CAAA,EASf,OAPAhB,OAAOiB,QAAQxB,QAAQyB,SAASC,SAAQC,OAAgC,IAA9BC,WAAYC,cAAaF,KAChDpB,OAAOiB,QAAQK,aAAaN,QAAU,CAAA,GAC9CG,SAAQI,QAAyB,IAAvBC,WAAYC,OAAMF,MAC/BP,OAAOU,oBAAoBL,WAAYG,aAAeC,KAAK,GAC7D,IAGCT,MAAM,EAUV,MAAMU,oBAAsBA,CAACL,WAAYG,aAAe,GAAGH,cAAcG,aAAalC,SAAAoC,oBAAAA,oBAQtF,MAAMC,wBAA2BnC,QAAWA,OAAOC,QAAQe,IArF/B,+BAqF+DlB,SAAAqC,wBAAAA,wBAchGrC,SAAAsC,6BAN0CA,CAACpC,OAAQqC,aACjD,GAAIA,UAAUC,OAAQ,CAClB,IAAIC,aAAeJ,wBAAwBnC,QAC3CuC,aAAeA,aAAaC,OAAOH,WACnCrC,OAAOC,QAAQG,IAjGY,8BAiGoBmC,aACnD,EACF"}