{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny Equation plugin for Moodle.\r\n *\r\n * @module      tiny_equation/plugin\r\n * @copyright   2022 Huong Nguyen <huongnv13@gmail.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {getTinyMCE} from 'editor_tiny/loader';\r\nimport {getPluginMetadata} from 'editor_tiny/utils';\r\n\r\nimport {component, pluginName} from 'tiny_equation/common';\r\nimport * as Commands from 'tiny_equation/commands';\r\nimport * as Configuration from 'tiny_equation/configuration';\r\nimport * as Options from 'tiny_equation/options';\r\n\r\n// eslint-disable-next-line no-async-promise-executor\r\nexport default new Promise(async(resolve) => {\r\n    const [\r\n        tinyMCE,\r\n        setupCommands,\r\n        pluginMetadata,\r\n    ] = await Promise.all([\r\n        getTinyMCE(),\r\n        Commands.getSetup(),\r\n        getPluginMetadata(component, pluginName),\r\n    ]);\r\n\r\n    tinyMCE.PluginManager.add(`${component}/plugin`, (editor) => {\r\n        // Register options.\r\n        Options.register(editor);\r\n\r\n        // Setup the Commands (buttons, menu items, and so on).\r\n        setupCommands(editor);\r\n\r\n        return pluginMetadata;\r\n    });\r\n\r\n    // Resolve the Equation Plugin and include configuration.\r\n    resolve([`${component}/plugin`, Configuration]);\r\n});\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","Commands","Configuration","Options","_exports","Promise","async","tinyMCE","setupCommands","pluginMetadata","all","getTinyMCE","getSetup","getPluginMetadata","component","pluginName","PluginManager","add","editor","register","resolve"],"mappings":"mQA6BiD,SAAAA,yBAAAC,GAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAF,yBAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,EAAA,CAAA,SAAAI,wBAAAJ,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAAL,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAM,MAAAA,CAAAA,QAAAN,GAAAG,IAAAA,EAAAJ,yBAAAG,GAAA,GAAAC,GAAAA,EAAAI,IAAAP,GAAA,OAAAG,EAAAK,IAAAR,GAAA,IAAAS,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAf,EAAAe,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAjB,EAAAe,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAd,EAAAe,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAf,EAAAe,GAAAN,OAAAA,EAAAH,QAAAN,EAAAG,GAAAA,EAAAgB,IAAAnB,EAAAS,GAAAA;;;;;;;KAAA,iFAFjDW,SAAAhB,wBAAAgB,UACAC,cAAAjB,wBAAAiB,eACAC,QAAAlB,wBAAAkB,SAdAC,SAAAjB,QAiBe,IAAIkB,SAAQC,gBACvB,MACIC,QACAC,cACAC,sBACMJ,QAAQK,IAAI,EAClB,EAAAC,QAAAA,cACAV,SAASW,YACT,EAAAC,OAAAA,mBAAkBC,QAASA,UAAEC,QAAUA,cAG3CR,QAAQS,cAAcC,IAAI,GAAGH,QAASA,oBAAYI,SAE9Cf,QAAQgB,SAASD,QAGjBV,cAAcU,QAEPT,kBAIXW,QAAQ,CAAC,GAAGN,QAAAA,mBAAoBZ,eAAe,IACjD,OAAAE,SAAAjB,OAAA"}