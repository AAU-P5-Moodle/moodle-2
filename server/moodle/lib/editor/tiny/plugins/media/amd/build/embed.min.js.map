{"version":3,"file":"embed.min.js","sources":["../src/embed.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny Media plugin Embed class for Moodle.\r\n *\r\n * @module      tiny_media/embed\r\n * @copyright   2022 Huong Nguyen <huongnv13@gmail.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Templates from 'core/templates';\r\nimport {\r\n    getString,\r\n    getStrings,\r\n} from 'core/str';\r\nimport * as ModalEvents from 'core/modal_events';\r\nimport {displayFilepicker} from 'editor_tiny/utils';\r\nimport {getCurrentLanguage, getMoodleLang} from 'editor_tiny/options';\r\nimport {component} from \"./common\";\r\nimport EmbedModal from './embedmodal';\r\nimport Selectors from './selectors';\r\nimport {getEmbedPermissions} from './options';\r\nimport {getFilePicker} from 'editor_tiny/options';\r\n\r\nexport default class MediaEmbed {\r\n    editor = null;\r\n    canShowFilePicker = false;\r\n    canShowFilePickerPoster = false;\r\n    canShowFilePickerTrack = false;\r\n\r\n    /**\r\n     * @property {Object} The names of the alignment options.\r\n     */\r\n    helpStrings = null;\r\n\r\n    /**\r\n     * @property {boolean} Indicate that the user is updating the media or not.\r\n     */\r\n    isUpdating = false;\r\n\r\n    /**\r\n     * @property {Object} The currently selected media.\r\n     */\r\n    selectedMedia = null;\r\n\r\n    constructor(editor) {\r\n        const permissions = getEmbedPermissions(editor);\r\n\r\n        // Indicates whether the file picker can be shown.\r\n        this.canShowFilePicker = permissions.filepicker && (typeof getFilePicker(editor, 'media') !== 'undefined');\r\n        this.canShowFilePickerPoster = permissions.filepicker && (typeof getFilePicker(editor, 'image') !== 'undefined');\r\n        this.canShowFilePickerTrack = permissions.filepicker && (typeof getFilePicker(editor, 'subtitle') !== 'undefined');\r\n\r\n        this.editor = editor;\r\n    }\r\n\r\n    async getHelpStrings() {\r\n        if (!this.helpStrings) {\r\n            const [addSource, tracks, subtitles, captions, descriptions, chapters, metadata] = await getStrings([\r\n                'addsource_help',\r\n                'tracks_help',\r\n                'subtitles_help',\r\n                'captions_help',\r\n                'descriptions_help',\r\n                'chapters_help',\r\n                'metadata_help',\r\n            ].map((key) => ({\r\n                key,\r\n                component,\r\n            })));\r\n\r\n            this.helpStrings = {addSource, tracks, subtitles, captions, descriptions, chapters, metadata};\r\n        }\r\n\r\n        return this.helpStrings;\r\n    }\r\n\r\n    async getTemplateContext(data) {\r\n        const languages = this.prepareMoodleLang();\r\n\r\n        const helpIcons = Array.from(Object.entries(await this.getHelpStrings())).forEach(([key, text]) => {\r\n            data[`${key.toLowerCase()}helpicon`] = {text};\r\n        });\r\n\r\n        return Object.assign({}, {\r\n            elementid: this.editor.getElement().id,\r\n            showfilepicker: this.canShowFilePicker,\r\n            showfilepickerposter: this.canShowFilePickerPoster,\r\n            showfilepickertrack: this.canShowFilePickerTrack,\r\n            langsinstalled: languages.installed,\r\n            langsavailable: languages.available,\r\n            link: true,\r\n            video: false,\r\n            audio: false,\r\n            isupdating: this.isUpdating,\r\n        }, data, helpIcons);\r\n    }\r\n\r\n    async displayDialogue() {\r\n        this.selectedMedia = this.getSelectedMedia();\r\n        const data = Object.assign({}, this.getCurrentEmbedData());\r\n        this.isUpdating = Object.keys(data).length !== 0;\r\n\r\n        this.currentModal = await EmbedModal.create({\r\n            title: getString('createmedia', 'tiny_media'),\r\n            templateContext: await this.getTemplateContext(data),\r\n        });\r\n\r\n        await this.registerEventListeners(this.currentModal);\r\n    }\r\n\r\n    getCurrentEmbedData() {\r\n        const properties = this.getMediumProperties();\r\n        if (!properties) {\r\n            return {};\r\n        }\r\n\r\n        const processedProperties = {};\r\n        processedProperties[properties.type.toLowerCase()] = properties;\r\n        processedProperties.link = false;\r\n\r\n        return processedProperties;\r\n    }\r\n\r\n    getSelectedMedia() {\r\n        const mediaElm = this.editor.selection.getNode();\r\n\r\n        if (!mediaElm) {\r\n            return null;\r\n        }\r\n\r\n        if (mediaElm.nodeName.toLowerCase() === 'video' || mediaElm.nodeName.toLowerCase() === 'audio') {\r\n            return mediaElm;\r\n        }\r\n\r\n        if (mediaElm.querySelector('video')) {\r\n            return mediaElm.querySelector('video');\r\n        }\r\n\r\n        if (mediaElm.querySelector('audio')) {\r\n            return mediaElm.querySelector('audio');\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getMediumProperties() {\r\n        const boolAttr = (elem, attr) => {\r\n            // As explained in MDL-64175, some OS (like Ubuntu), are removing the value for these attributes.\r\n            // So in order to check if attr=\"true\", we need to check if the attribute exists and if the value is empty or true.\r\n            return (elem.hasAttribute(attr) && (elem.getAttribute(attr) || elem.getAttribute(attr) === ''));\r\n        };\r\n\r\n        const tracks = {\r\n            subtitles: [],\r\n            captions: [],\r\n            descriptions: [],\r\n            chapters: [],\r\n            metadata: []\r\n        };\r\n        const sources = [];\r\n\r\n        const medium = this.selectedMedia;\r\n        if (!medium) {\r\n            return null;\r\n        }\r\n        medium.querySelectorAll('track').forEach((track) => {\r\n            tracks[track.getAttribute('kind')].push({\r\n                src: track.getAttribute('src'),\r\n                srclang: track.getAttribute('srclang'),\r\n                label: track.getAttribute('label'),\r\n                defaultTrack: boolAttr(track, 'default')\r\n            });\r\n        });\r\n\r\n        medium.querySelectorAll('source').forEach((source) => {\r\n            sources.push(source.src);\r\n        });\r\n\r\n        return {\r\n            type: medium.nodeName.toLowerCase() === 'video' ? Selectors.EMBED.mediaTypes.video : Selectors.EMBED.mediaTypes.audio,\r\n            sources,\r\n            poster: medium.getAttribute('poster'),\r\n            title: medium.getAttribute('title'),\r\n            width: medium.getAttribute('width'),\r\n            height: medium.getAttribute('height'),\r\n            autoplay: boolAttr(medium, 'autoplay'),\r\n            loop: boolAttr(medium, 'loop'),\r\n            muted: boolAttr(medium, 'muted'),\r\n            controls: boolAttr(medium, 'controls'),\r\n            tracks,\r\n        };\r\n    }\r\n\r\n    prepareMoodleLang() {\r\n        const moodleLangs = getMoodleLang(this.editor);\r\n        const currentLanguage = getCurrentLanguage(this.editor);\r\n\r\n        const installed = Object.entries(moodleLangs.installed).map(([lang, code]) => ({\r\n            lang,\r\n            code,\r\n            \"default\": lang === currentLanguage,\r\n        }));\r\n\r\n        const available = Object.entries(moodleLangs.available).map(([lang, code]) => ({\r\n            lang,\r\n            code,\r\n            \"default\": lang === currentLanguage,\r\n        }));\r\n\r\n        return {\r\n            installed,\r\n            available,\r\n        };\r\n    }\r\n\r\n    getMoodleLangObj(subtitleLang) {\r\n        const {available} = getMoodleLang(this.editor);\r\n\r\n        if (available[subtitleLang]) {\r\n            return {\r\n                lang: subtitleLang,\r\n                code: available[subtitleLang],\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    filePickerCallback(params, element, fpType) {\r\n        if (params.url !== '') {\r\n            const tabPane = element.closest('.tab-pane');\r\n            element.closest(Selectors.EMBED.elements.source).querySelector(Selectors.EMBED.elements.url).value = params.url;\r\n\r\n            if (tabPane.id === this.editor.getElement().id + '_' + Selectors.EMBED.mediaTypes.link.toLowerCase()) {\r\n                tabPane.querySelector(Selectors.EMBED.elements.name).value = params.file;\r\n            }\r\n\r\n            if (fpType === 'subtitle') {\r\n                // If the file is subtitle file. We need to match the language and label for that file.\r\n                const subtitleLang = params.file.split('.vtt')[0].split('-').slice(-1)[0];\r\n                const langObj = this.getMoodleLangObj(subtitleLang);\r\n                if (langObj) {\r\n                    const track = element.closest(Selectors.EMBED.elements.track);\r\n                    track.querySelector(Selectors.EMBED.elements.trackLabel).value = langObj.lang.trim();\r\n                    track.querySelector(Selectors.EMBED.elements.trackLang).value = langObj.code;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addMediaSourceComponent(element, callback) {\r\n        const sourceElement = element.closest(Selectors.EMBED.elements.source + Selectors.EMBED.elements.mediaSource);\r\n        const clone = sourceElement.cloneNode(true);\r\n\r\n        sourceElement.querySelector('.removecomponent-wrapper').classList.remove('hidden');\r\n        sourceElement.querySelector('.addcomponent-wrapper').classList.add('hidden');\r\n\r\n        sourceElement.parentNode.insertBefore(clone, sourceElement.nextSibling);\r\n\r\n        if (callback) {\r\n            callback(clone);\r\n        }\r\n    }\r\n\r\n    removeMediaSourceComponent(element) {\r\n        const sourceElement = element.closest(Selectors.EMBED.elements.source + Selectors.EMBED.elements.mediaSource);\r\n        sourceElement.remove();\r\n    }\r\n\r\n    addTrackComponent(element, callback) {\r\n        const trackElement = element.closest(Selectors.EMBED.elements.track);\r\n        const clone = trackElement.cloneNode(true);\r\n\r\n        trackElement.querySelector('.removecomponent-wrapper').classList.remove('hidden');\r\n        trackElement.querySelector('.addcomponent-wrapper').classList.add('hidden');\r\n\r\n        trackElement.parentNode.insertBefore(clone, trackElement.nextSibling);\r\n\r\n        if (callback) {\r\n            callback(clone);\r\n        }\r\n    }\r\n\r\n    removeTrackComponent(element) {\r\n        const sourceElement = element.closest(Selectors.EMBED.elements.track);\r\n        sourceElement.remove();\r\n    }\r\n\r\n    getMediumTypeFromTabPane(tabPane) {\r\n        return tabPane.getAttribute('data-medium-type');\r\n    }\r\n\r\n    getTrackTypeFromTabPane(tabPane) {\r\n        return tabPane.getAttribute('data-track-kind');\r\n    }\r\n\r\n    getMediaHTML(form) {\r\n        const mediumType = this.getMediumTypeFromTabPane(form.querySelector('.root.tab-content > .tab-pane.active'));\r\n        const tabContent = form.querySelector(Selectors.EMBED.elements[mediumType.toLowerCase() + 'Pane']);\r\n\r\n        return this['getMediaHTML' + mediumType[0].toUpperCase() + mediumType.substr(1)](tabContent);\r\n    }\r\n\r\n    getMediaHTMLLink(tab) {\r\n        const context = {\r\n            url: tab.querySelector(Selectors.EMBED.elements.url).value,\r\n            name: tab.querySelector(Selectors.EMBED.elements.name).value || false\r\n        };\r\n\r\n        return context.url ? Templates.renderForPromise('tiny_media/embed_media_link', context) : '';\r\n    }\r\n\r\n    getMediaHTMLVideo(tab) {\r\n        const context = this.getContextForMediaHTML(tab);\r\n        context.width = tab.querySelector(Selectors.EMBED.elements.width).value || false;\r\n        context.height = tab.querySelector(Selectors.EMBED.elements.height).value || false;\r\n        context.poster = tab.querySelector(\r\n            `${Selectors.EMBED.elements.posterSource} ${Selectors.EMBED.elements.url}`\r\n        ).value || false;\r\n\r\n        return context.sources.length ? Templates.renderForPromise('tiny_media/embed_media_video', context) : '';\r\n    }\r\n\r\n    getMediaHTMLAudio(tab) {\r\n        const context = this.getContextForMediaHTML(tab);\r\n\r\n        return context.sources.length ? Templates.renderForPromise('tiny_media/embed_media_audio', context) : '';\r\n    }\r\n\r\n    getContextForMediaHTML(tab) {\r\n        const tracks = Array.from(tab.querySelectorAll(Selectors.EMBED.elements.track)).map(track => ({\r\n            track: track.querySelector(Selectors.EMBED.elements.trackSource + ' ' + Selectors.EMBED.elements.url).value,\r\n            kind: this.getTrackTypeFromTabPane(track.closest('.tab-pane')),\r\n            label: track.querySelector(Selectors.EMBED.elements.trackLabel).value ||\r\n                track.querySelector(Selectors.EMBED.elements.trackLang).value,\r\n            srclang: track.querySelector(Selectors.EMBED.elements.trackLang).value,\r\n            defaultTrack: track.querySelector(Selectors.EMBED.elements.trackDefault).checked ? \"true\" : null\r\n        })).filter((track) => !!track.track);\r\n\r\n        const sources = Array.from(tab.querySelectorAll(Selectors.EMBED.elements.mediaSource + ' '\r\n            + Selectors.EMBED.elements.url))\r\n                .filter((source) => !!source.value)\r\n                .map((source) => source.value);\r\n\r\n        return {\r\n            sources,\r\n            description: tab.querySelector(Selectors.EMBED.elements.mediaSource + ' '\r\n                + Selectors.EMBED.elements.url).value || false,\r\n            tracks,\r\n            showControls: tab.querySelector(Selectors.EMBED.elements.mediaControl).checked,\r\n            autoplay: tab.querySelector(Selectors.EMBED.elements.mediaAutoplay).checked,\r\n            muted: tab.querySelector(Selectors.EMBED.elements.mediaMute).checked,\r\n            loop: tab.querySelector(Selectors.EMBED.elements.mediaLoop).checked,\r\n            title: tab.querySelector(Selectors.EMBED.elements.title).value || false\r\n        };\r\n    }\r\n\r\n    getFilepickerTypeFromElement(element) {\r\n        if (element.closest(Selectors.EMBED.elements.posterSource)) {\r\n            return 'image';\r\n        }\r\n        if (element.closest(Selectors.EMBED.elements.trackSource)) {\r\n            return 'subtitle';\r\n        }\r\n\r\n        return 'media';\r\n    }\r\n\r\n    async clickHandler(e) {\r\n        const element = e.target;\r\n\r\n        const mediaBrowser = element.closest(Selectors.EMBED.actions.mediaBrowser);\r\n        if (mediaBrowser) {\r\n            e.preventDefault();\r\n            const fpType = this.getFilepickerTypeFromElement(element);\r\n            const params = await displayFilepicker(this.editor, fpType);\r\n            this.filePickerCallback(params, element, fpType);\r\n        }\r\n\r\n        const addComponentSourceAction = element.closest(Selectors.EMBED.elements.mediaSource + ' .addcomponent');\r\n        if (addComponentSourceAction) {\r\n            e.preventDefault();\r\n            this.addMediaSourceComponent(element);\r\n        }\r\n\r\n        const removeComponentSourceAction = element.closest(Selectors.EMBED.elements.mediaSource + ' .removecomponent');\r\n        if (removeComponentSourceAction) {\r\n            e.preventDefault();\r\n            this.removeMediaSourceComponent(element);\r\n        }\r\n\r\n        const addComponentTrackAction = element.closest(Selectors.EMBED.elements.track + ' .addcomponent');\r\n        if (addComponentTrackAction) {\r\n            e.preventDefault();\r\n            this.addTrackComponent(element);\r\n        }\r\n\r\n        const removeComponentTrackAction = element.closest(Selectors.EMBED.elements.track + ' .removecomponent');\r\n        if (removeComponentTrackAction) {\r\n            e.preventDefault();\r\n            this.removeTrackComponent(element);\r\n        }\r\n\r\n        // Only allow one track per tab to be selected as \"default\".\r\n        const trackDefaultAction = element.closest(Selectors.EMBED.elements.trackDefault);\r\n        if (trackDefaultAction && trackDefaultAction.checked) {\r\n            const getKind = (el) => this.getTrackTypeFromTabPane(el.parentElement.closest('.tab-pane'));\r\n\r\n            element.parentElement\r\n                .closest('.root.tab-content')\r\n                .querySelectorAll(Selectors.EMBED.elements.trackDefault)\r\n                .forEach((select) => {\r\n                    if (select !== element && getKind(element) === getKind(select)) {\r\n                        select.checked = false;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    async handleDialogueSubmission(event, modal) {\r\n        const {html} = await this.getMediaHTML(modal.getRoot()[0]);\r\n        if (html) {\r\n            if (this.isUpdating) {\r\n                this.selectedMedia.outerHTML = html;\r\n                this.isUpdating = false;\r\n            } else {\r\n                this.editor.insertContent(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    async registerEventListeners(modal) {\r\n        await modal.getBody();\r\n        const $root = modal.getRoot();\r\n        const root = $root[0];\r\n        if (this.canShowFilePicker || this.canShowFilePickerPoster || this.canShowFilePickerTrack) {\r\n            root.addEventListener('click', this.clickHandler.bind(this));\r\n        }\r\n\r\n        $root.on(ModalEvents.save, this.handleDialogueSubmission.bind(this));\r\n        $root.on(ModalEvents.hidden, () => {\r\n            this.currentModal.destroy();\r\n        });\r\n        $root.on(ModalEvents.shown, () => {\r\n            root.querySelectorAll(Selectors.EMBED.elements.trackLang).forEach((dropdown) => {\r\n                const defaultVal = dropdown.getAttribute('data-value');\r\n                if (defaultVal) {\r\n                    dropdown.value = defaultVal;\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","__esModule","default","_templates","ModalEvents","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_embedmodal","_selectors","_exports","editor","canShowFilePicker","canShowFilePickerPoster","canShowFilePickerTrack","helpStrings","isUpdating","selectedMedia","constructor","permissions","getEmbedPermissions","this","filepicker","getFilePicker","getHelpStrings","addSource","tracks","subtitles","captions","descriptions","chapters","metadata","getStrings","map","key","component","getTemplateContext","data","languages","prepareMoodleLang","helpIcons","Array","from","entries","forEach","_ref","text","toLowerCase","assign","elementid","getElement","id","showfilepicker","showfilepickerposter","showfilepickertrack","langsinstalled","installed","langsavailable","available","link","video","audio","isupdating","displayDialogue","getSelectedMedia","getCurrentEmbedData","keys","length","currentModal","EmbedModal","create","title","getString","templateContext","registerEventListeners","properties","getMediumProperties","processedProperties","type","mediaElm","selection","getNode","nodeName","querySelector","boolAttr","elem","attr","hasAttribute","getAttribute","sources","medium","querySelectorAll","track","push","src","srclang","label","defaultTrack","source","Selectors","EMBED","mediaTypes","poster","width","height","autoplay","loop","muted","controls","moodleLangs","getMoodleLang","currentLanguage","getCurrentLanguage","_ref2","lang","code","_ref3","getMoodleLangObj","subtitleLang","filePickerCallback","params","element","fpType","url","tabPane","closest","elements","value","name","file","split","slice","langObj","trackLabel","trim","trackLang","addMediaSourceComponent","callback","sourceElement","mediaSource","clone","cloneNode","classList","remove","add","parentNode","insertBefore","nextSibling","removeMediaSourceComponent","addTrackComponent","trackElement","removeTrackComponent","getMediumTypeFromTabPane","getTrackTypeFromTabPane","getMediaHTML","form","mediumType","tabContent","toUpperCase","substr","getMediaHTMLLink","tab","context","Templates","renderForPromise","getMediaHTMLVideo","getContextForMediaHTML","posterSource","getMediaHTMLAudio","trackSource","kind","trackDefault","checked","filter","description","showControls","mediaControl","mediaAutoplay","mediaMute","mediaLoop","getFilepickerTypeFromElement","clickHandler","target","actions","mediaBrowser","preventDefault","displayFilepicker","trackDefaultAction","getKind","el","parentElement","select","handleDialogueSubmission","event","modal","html","getRoot","outerHTML","insertContent","getBody","$root","root","addEventListener","bind","on","save","hidden","destroy","shown","dropdown","defaultVal"],"mappings":"6RAiCoC,SAAAA,yBAAAC,GAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAF,yBAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,EAAA,CAAA,SAAAI,uBAAAJ,GAAAA,OAAAA,GAAAA,EAAAK,WAAAL,EAAAM,CAAAA,QAAAN,EAAA;;;;;;;qFAVpCO,WAAAH,uBAAAG,YAKAC,YAKoC,SAAAR,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAAL,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAM,MAAAA,CAAAA,QAAAN,GAAAG,IAAAA,EAAAJ,yBAAAG,GAAA,GAAAC,GAAAA,EAAAM,IAAAT,GAAA,OAAAG,EAAAO,IAAAV,GAAA,IAAAW,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAjB,EAAAiB,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAnB,EAAAiB,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAhB,EAAAiB,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAjB,EAAAiB,GAAAN,OAAAA,EAAAL,QAAAN,EAAAG,GAAAA,EAAAkB,IAAArB,EAAAW,GAAAA,CAAA,CALpCW,CAAAd,aAIAe,YAAAnB,uBAAAmB,aACAC,WAAApB,uBAAAoB,YAibC,OAAAC,SAAAnB,QA7ac,MACXoB,OAAS,KACTC,mBAAoB,EACpBC,yBAA0B,EAC1BC,wBAAyB,EAKzBC,YAAc,KAKdC,YAAa,EAKbC,cAAgB,KAEhBC,WAAAA,CAAYP,QACR,MAAMQ,aAAc,EAAAC,UAAmBA,qBAACT,QAGxCU,KAAKT,kBAAoBO,YAAYG,iBAAyD,KAAnC,EAAAC,SAAAA,eAAcZ,OAAQ,SACjFU,KAAKR,wBAA0BM,YAAYG,iBAAyD,KAAnC,EAAAC,SAAAA,eAAcZ,OAAQ,SACvFU,KAAKP,uBAAyBK,YAAYG,iBAA4D,KAAtC,EAAAC,SAAAA,eAAcZ,OAAQ,YAEtFU,KAAKV,OAASA,MAClB,CAEA,oBAAMa,GACF,IAAKH,KAAKN,YAAa,CACnB,MAAOU,UAAWC,OAAQC,UAAWC,SAAUC,aAAcC,SAAUC,gBAAkB,EAAAC,KAAAA,YAAW,CAChG,iBACA,cACA,iBACA,gBACA,oBACA,gBACA,iBACFC,KAAKC,MAAS,CACZA,QACAC,UAAAA,QAAAA,eAGJd,KAAKN,YAAc,CAACU,oBAAWC,cAAQC,oBAAWC,kBAAUC,0BAAcC,kBAAUC,kBACxF,CAEA,OAAOV,KAAKN,WAChB,CAEA,wBAAMqB,CAAmBC,MACrB,MAAMC,UAAYjB,KAAKkB,oBAEjBC,UAAYC,MAAMC,KAAK3C,OAAO4C,cAActB,KAAKG,mBAAmBoB,SAAQC,OAAiB,IAAfX,IAAKY,MAAKD,KAC1FR,KAAK,GAAGH,IAAIa,yBAA2B,CAACD,UAAK,IAGjD,OAAO/C,OAAOiD,OAAO,GAAI,CACrBC,UAAW5B,KAAKV,OAAOuC,aAAaC,GACpCC,eAAgB/B,KAAKT,kBACrByC,qBAAsBhC,KAAKR,wBAC3ByC,oBAAqBjC,KAAKP,uBAC1ByC,eAAgBjB,UAAUkB,UAC1BC,eAAgBnB,UAAUoB,UAC1BC,MAAM,EACNC,OAAO,EACPC,OAAO,EACPC,WAAYzC,KAAKL,YAClBqB,KAAMG,UACb,CAEA,qBAAMuB,GACF1C,KAAKJ,cAAgBI,KAAK2C,mBAC1B,MAAM3B,KAAOtC,OAAOiD,OAAO,CAAE,EAAE3B,KAAK4C,uBACpC5C,KAAKL,WAA0C,IAA7BjB,OAAOmE,KAAK7B,MAAM8B,OAEpC9C,KAAK+C,mBAAqBC,YAAU9E,QAAC+E,OAAO,CACxCC,OAAO,EAAAC,KAAAA,WAAU,cAAe,cAChCC,sBAAuBpD,KAAKe,mBAAmBC,cAG7ChB,KAAKqD,uBAAuBrD,KAAK+C,aAC3C,CAEAH,mBAAAA,GACI,MAAMU,WAAatD,KAAKuD,sBACxB,IAAKD,WACD,MAAO,GAGX,MAAME,oBAAsB,CAAA,EAI5B,OAHAA,oBAAoBF,WAAWG,KAAK/B,eAAiB4B,WACrDE,oBAAoBlB,MAAO,EAEpBkB,mBACX,CAEAb,gBAAAA,GACI,MAAMe,SAAW1D,KAAKV,OAAOqE,UAAUC,UAEvC,OAAKF,SAImC,UAApCA,SAASG,SAASnC,eAAiE,UAApCgC,SAASG,SAASnC,cAC1DgC,SAGPA,SAASI,cAAc,SAChBJ,SAASI,cAAc,SAG9BJ,SAASI,cAAc,SAChBJ,SAASI,cAAc,SAG3B,KAfI,IAgBf,CAEAP,mBAAAA,GACI,MAAMQ,SAAWA,CAACC,KAAMC,OAGZD,KAAKE,aAAaD,QAAUD,KAAKG,aAAaF,OAAqC,KAA5BD,KAAKG,aAAaF,OAG/E5D,OAAS,CACXC,UAAW,GACXC,SAAU,GACVC,aAAc,GACdC,SAAU,GACVC,SAAU,IAER0D,QAAU,GAEVC,OAASrE,KAAKJ,cACpB,OAAKyE,QAGLA,OAAOC,iBAAiB,SAAS/C,SAASgD,QACtClE,OAAOkE,MAAMJ,aAAa,SAASK,KAAK,CACpCC,IAAKF,MAAMJ,aAAa,OACxBO,QAASH,MAAMJ,aAAa,WAC5BQ,MAAOJ,MAAMJ,aAAa,SAC1BS,aAAcb,SAASQ,MAAO,YAChC,IAGNF,OAAOC,iBAAiB,UAAU/C,SAASsD,SACvCT,QAAQI,KAAKK,OAAOJ,IAAI,IAGrB,CACHhB,KAAwC,UAAlCY,OAAOR,SAASnC,cAA4BoD,WAAAA,QAAUC,MAAMC,WAAWzC,MAAQuC,WAAS5G,QAAC6G,MAAMC,WAAWxC,MAChH4B,gBACAa,OAAQZ,OAAOF,aAAa,UAC5BjB,MAAOmB,OAAOF,aAAa,SAC3Be,MAAOb,OAAOF,aAAa,SAC3BgB,OAAQd,OAAOF,aAAa,UAC5BiB,SAAUrB,SAASM,OAAQ,YAC3BgB,KAAMtB,SAASM,OAAQ,QACvBiB,MAAOvB,SAASM,OAAQ,SACxBkB,SAAUxB,SAASM,OAAQ,YAC3BhE,gBA1BO,IA4Bf,CAEAa,iBAAAA,GACI,MAAMsE,aAAc,EAAAC,SAAAA,eAAczF,KAAKV,QACjCoG,iBAAkB,EAAAC,SAAAA,oBAAmB3F,KAAKV,QAchD,MAAO,CACH6C,UAbczD,OAAO4C,QAAQkE,YAAYrD,WAAWvB,KAAIgF,QAAA,IAAEC,KAAMC,MAAKF,MAAA,MAAM,CAC3EC,UACAC,UACA5H,QAAW2H,OAASH,gBACvB,IAUGrD,UARc3D,OAAO4C,QAAQkE,YAAYnD,WAAWzB,KAAImF,QAAA,IAAEF,KAAMC,MAAKC,MAAA,MAAM,CAC3EF,UACAC,UACA5H,QAAW2H,OAASH,gBACvB,IAML,CAEAM,gBAAAA,CAAiBC,cACb,MAAM5D,UAACA,YAAa,EAAAoD,SAAAA,eAAczF,KAAKV,QAEvC,OAAI+C,UAAU4D,cACH,CACHJ,KAAMI,aACNH,KAAMzD,UAAU4D,eAIjB,IACX,CAEAC,kBAAAA,CAAmBC,OAAQC,QAASC,QAChC,GAAmB,KAAfF,OAAOG,IAAY,CACnB,MAAMC,QAAUH,QAAQI,QAAQ,aAOhC,GANAJ,QAAQI,QAAQ1B,WAAS5G,QAAC6G,MAAM0B,SAAS5B,QAAQf,cAAcgB,WAAAA,QAAUC,MAAM0B,SAASH,KAAKI,MAAQP,OAAOG,IAExGC,QAAQzE,KAAO9B,KAAKV,OAAOuC,aAAaC,GAAK,IAAMgD,WAAAA,QAAUC,MAAMC,WAAW1C,KAAKZ,gBACnF6E,QAAQzC,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAASE,MAAMD,MAAQP,OAAOS,MAGzD,aAAXP,OAAuB,CAEvB,MAAMJ,aAAeE,OAAOS,KAAKC,MAAM,QAAQ,GAAGA,MAAM,KAAKC,OAAO,GAAG,GACjEC,QAAU/G,KAAKgG,iBAAiBC,cACtC,GAAIc,QAAS,CACT,MAAMxC,MAAQ6B,QAAQI,QAAQ1B,WAAS5G,QAAC6G,MAAM0B,SAASlC,OACvDA,MAAMT,cAAcgB,WAAAA,QAAUC,MAAM0B,SAASO,YAAYN,MAAQK,QAAQlB,KAAKoB,OAC9E1C,MAAMT,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAASS,WAAWR,MAAQK,QAAQjB,IAC5E,CACJ,CACJ,CACJ,CAEAqB,uBAAAA,CAAwBf,QAASgB,UAC7B,MAAMC,cAAgBjB,QAAQI,QAAQ1B,WAAAA,QAAUC,MAAM0B,SAAS5B,OAASC,WAAS5G,QAAC6G,MAAM0B,SAASa,aAC3FC,MAAQF,cAAcG,WAAU,GAEtCH,cAAcvD,cAAc,4BAA4B2D,UAAUC,OAAO,UACzEL,cAAcvD,cAAc,yBAAyB2D,UAAUE,IAAI,UAEnEN,cAAcO,WAAWC,aAAaN,MAAOF,cAAcS,aAEvDV,UACAA,SAASG,MAEjB,CAEAQ,0BAAAA,CAA2B3B,SACDA,QAAQI,QAAQ1B,WAAAA,QAAUC,MAAM0B,SAAS5B,OAASC,WAAS5G,QAAC6G,MAAM0B,SAASa,aACnFI,QAClB,CAEAM,iBAAAA,CAAkB5B,QAASgB,UACvB,MAAMa,aAAe7B,QAAQI,QAAQ1B,WAAS5G,QAAC6G,MAAM0B,SAASlC,OACxDgD,MAAQU,aAAaT,WAAU,GAErCS,aAAanE,cAAc,4BAA4B2D,UAAUC,OAAO,UACxEO,aAAanE,cAAc,yBAAyB2D,UAAUE,IAAI,UAElEM,aAAaL,WAAWC,aAAaN,MAAOU,aAAaH,aAErDV,UACAA,SAASG,MAEjB,CAEAW,oBAAAA,CAAqB9B,SACKA,QAAQI,QAAQ1B,WAAS5G,QAAC6G,MAAM0B,SAASlC,OACjDmD,QAClB,CAEAS,wBAAAA,CAAyB5B,SACrB,OAAOA,QAAQpC,aAAa,mBAChC,CAEAiE,uBAAAA,CAAwB7B,SACpB,OAAOA,QAAQpC,aAAa,kBAChC,CAEAkE,YAAAA,CAAaC,MACT,MAAMC,WAAavI,KAAKmI,yBAAyBG,KAAKxE,cAAc,yCAC9D0E,WAAaF,KAAKxE,cAAcgB,WAAAA,QAAUC,MAAM0B,SAAS8B,WAAW7G,cAAgB,SAE1F,OAAO1B,KAAK,eAAiBuI,WAAW,GAAGE,cAAgBF,WAAWG,OAAO,IAAIF,WACrF,CAEAG,gBAAAA,CAAiBC,KACb,MAAMC,QAAU,CACZvC,IAAKsC,IAAI9E,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAASH,KAAKI,MACrDC,KAAMiC,IAAI9E,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAASE,MAAMD,QAAS,GAGpE,OAAOmC,QAAQvC,IAAMwC,WAAS5K,QAAC6K,iBAAiB,8BAA+BF,SAAW,EAC9F,CAEAG,iBAAAA,CAAkBJ,KACd,MAAMC,QAAU7I,KAAKiJ,uBAAuBL,KAO5C,OANAC,QAAQ3D,MAAQ0D,IAAI9E,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAASvB,OAAOwB,QAAS,EAC3EmC,QAAQ1D,OAASyD,IAAI9E,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAAStB,QAAQuB,QAAS,EAC7EmC,QAAQ5D,OAAS2D,IAAI9E,cACjB,GAAGgB,WAAS5G,QAAC6G,MAAM0B,SAASyC,gBAAgBpE,WAAS5G,QAAC6G,MAAM0B,SAASH,OACvEI,QAAS,EAEJmC,QAAQzE,QAAQtB,OAASgG,WAAAA,QAAUC,iBAAiB,+BAAgCF,SAAW,EAC1G,CAEAM,iBAAAA,CAAkBP,KACd,MAAMC,QAAU7I,KAAKiJ,uBAAuBL,KAE5C,OAAOC,QAAQzE,QAAQtB,OAASgG,WAAAA,QAAUC,iBAAiB,+BAAgCF,SAAW,EAC1G,CAEAI,sBAAAA,CAAuBL,KACnB,MAAMvI,OAASe,MAAMC,KAAKuH,IAAItE,iBAAiBQ,WAAAA,QAAUC,MAAM0B,SAASlC,QAAQ3D,KAAI2D,QAAU,CAC1FA,MAAOA,MAAMT,cAAcgB,mBAAUC,MAAM0B,SAAS2C,YAAc,IAAMtE,WAAS5G,QAAC6G,MAAM0B,SAASH,KAAKI,MACtG2C,KAAMrJ,KAAKoI,wBAAwB7D,MAAMiC,QAAQ,cACjD7B,MAAOJ,MAAMT,cAAcgB,WAAAA,QAAUC,MAAM0B,SAASO,YAAYN,OAC5DnC,MAAMT,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAASS,WAAWR,MAC5DhC,QAASH,MAAMT,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAASS,WAAWR,MACjE9B,aAAcL,MAAMT,cAAcgB,mBAAUC,MAAM0B,SAAS6C,cAAcC,QAAU,OAAS,SAC5FC,QAAQjF,SAAYA,MAAMA,QAO9B,MAAO,CACHH,QANYhD,MAAMC,KAAKuH,IAAItE,iBAAiBQ,WAAAA,QAAUC,MAAM0B,SAASa,YAAc,IACjFxC,WAAS5G,QAAC6G,MAAM0B,SAASH,MACtBkD,QAAQ3E,UAAaA,OAAO6B,QAC5B9F,KAAKiE,QAAWA,OAAO6B,QAI5B+C,YAAab,IAAI9E,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAASa,YAAc,IAChExC,WAAAA,QAAUC,MAAM0B,SAASH,KAAKI,QAAS,EAC7CrG,cACAqJ,aAAcd,IAAI9E,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAASkD,cAAcJ,QACvEnE,SAAUwD,IAAI9E,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAASmD,eAAeL,QACpEjE,MAAOsD,IAAI9E,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAASoD,WAAWN,QAC7DlE,KAAMuD,IAAI9E,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAASqD,WAAWP,QAC5DrG,MAAO0F,IAAI9E,cAAcgB,WAAS5G,QAAC6G,MAAM0B,SAASvD,OAAOwD,QAAS,EAE1E,CAEAqD,4BAAAA,CAA6B3D,SACzB,OAAIA,QAAQI,QAAQ1B,WAAS5G,QAAC6G,MAAM0B,SAASyC,cAClC,QAEP9C,QAAQI,QAAQ1B,WAAS5G,QAAC6G,MAAM0B,SAAS2C,aAClC,WAGJ,OACX,CAEA,kBAAMY,CAAapM,GACf,MAAMwI,QAAUxI,EAAEqM,OAGlB,GADqB7D,QAAQI,QAAQ1B,WAAS5G,QAAC6G,MAAMmF,QAAQC,cAC3C,CACdvM,EAAEwM,iBACF,MAAM/D,OAASrG,KAAK+J,6BAA6B3D,SAC3CD,aAAe,EAAAkE,OAAAA,mBAAkBrK,KAAKV,OAAQ+G,QACpDrG,KAAKkG,mBAAmBC,OAAQC,QAASC,OAC7C,CAEiCD,QAAQI,QAAQ1B,WAAAA,QAAUC,MAAM0B,SAASa,YAAc,oBAEpF1J,EAAEwM,iBACFpK,KAAKmH,wBAAwBf,UAGGA,QAAQI,QAAQ1B,WAAAA,QAAUC,MAAM0B,SAASa,YAAc,uBAEvF1J,EAAEwM,iBACFpK,KAAK+H,2BAA2B3B,UAGJA,QAAQI,QAAQ1B,WAAAA,QAAUC,MAAM0B,SAASlC,MAAQ,oBAE7E3G,EAAEwM,iBACFpK,KAAKgI,kBAAkB5B,UAGQA,QAAQI,QAAQ1B,WAAAA,QAAUC,MAAM0B,SAASlC,MAAQ,uBAEhF3G,EAAEwM,iBACFpK,KAAKkI,qBAAqB9B,UAI9B,MAAMkE,mBAAqBlE,QAAQI,QAAQ1B,WAAS5G,QAAC6G,MAAM0B,SAAS6C,cACpE,GAAIgB,oBAAsBA,mBAAmBf,QAAS,CAClD,MAAMgB,QAAWC,IAAOxK,KAAKoI,wBAAwBoC,GAAGC,cAAcjE,QAAQ,cAE9EJ,QAAQqE,cACHjE,QAAQ,qBACRlC,iBAAiBQ,WAAAA,QAAUC,MAAM0B,SAAS6C,cAC1C/H,SAASmJ,SACFA,SAAWtE,SAAWmE,QAAQnE,WAAamE,QAAQG,UACnDA,OAAOnB,SAAU,EACrB,GAEZ,CACJ,CAEA,8BAAMoB,CAAyBC,MAAOC,OAClC,MAAMC,KAACA,YAAc9K,KAAKqI,aAAawC,MAAME,UAAU,IACnDD,OACI9K,KAAKL,YACLK,KAAKJ,cAAcoL,UAAYF,KAC/B9K,KAAKL,YAAa,GAElBK,KAAKV,OAAO2L,cAAcH,MAGtC,CAEA,4BAAMzH,CAAuBwH,aACnBA,MAAMK,UACZ,MAAMC,MAAQN,MAAME,UACdK,KAAOD,MAAM,IACfnL,KAAKT,mBAAqBS,KAAKR,yBAA2BQ,KAAKP,yBAC/D2L,KAAKC,iBAAiB,QAASrL,KAAKgK,aAAasB,KAAKtL,OAG1DmL,MAAMI,GAAGnN,YAAYoN,KAAMxL,KAAK2K,yBAAyBW,KAAKtL,OAC9DmL,MAAMI,GAAGnN,YAAYqN,QAAQ,KACzBzL,KAAK+C,aAAa2I,SAAS,IAE/BP,MAAMI,GAAGnN,YAAYuN,OAAO,KACxBP,KAAK9G,iBAAiBQ,WAAAA,QAAUC,MAAM0B,SAASS,WAAW3F,SAASqK,WAC/D,MAAMC,WAAaD,SAASzH,aAAa,cACrC0H,aACAD,SAASlF,MAAQmF,WACrB,GACF,GAEV,GACHxM,SAAAnB,OAAA"}