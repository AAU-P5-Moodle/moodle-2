{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny Media commands.\r\n *\r\n * @module      tiny_media/commands\r\n * @copyright   2022 Huong Nguyen <huongnv13@gmail.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {getStrings} from 'core/str';\r\nimport {\r\n    component,\r\n    imageButtonName,\r\n    videoButtonName,\r\n    mediaManagerButtonName\r\n} from './common';\r\nimport MediaImage from './image';\r\nimport MediaEmbed from './embed';\r\nimport MediaManager from './manager';\r\nimport {getButtonImage} from 'editor_tiny/utils';\r\n\r\nconst isImage = (node) => node.nodeName.toLowerCase() === 'img';\r\nconst isVideo = (node) => node.nodeName.toLowerCase() === 'video' || node.nodeName.toLowerCase() === 'audio';\r\n\r\nconst registerImageCommand = (editor, imageButtonText) => {\r\n    const imageIcon = 'image';\r\n    const handleImageAction = () => {\r\n        const mediaImage = new MediaImage(editor);\r\n        mediaImage.displayDialogue();\r\n    };\r\n\r\n    // Register the Menu Button as a toggle.\r\n    // This means that when highlighted over an existing Media Image element it will show as toggled on.\r\n    editor.ui.registry.addToggleButton(imageButtonName, {\r\n        icon: imageIcon,\r\n        tooltip: imageButtonText,\r\n        onAction: handleImageAction,\r\n        onSetup: api => {\r\n            return editor.selection.selectorChangedWithUnbind(\r\n                'img:not([data-mce-object]):not([data-mce-placeholder]),figure.image',\r\n                api.setActive\r\n            ).unbind;\r\n        }\r\n    });\r\n\r\n    editor.ui.registry.addMenuItem(imageButtonName, {\r\n        icon: imageIcon,\r\n        text: imageButtonText,\r\n        onAction: handleImageAction,\r\n    });\r\n\r\n    editor.ui.registry.addContextToolbar(imageButtonName, {\r\n        predicate: isImage,\r\n        items: imageButtonName,\r\n        position: 'node',\r\n        scope: 'node'\r\n    });\r\n\r\n    editor.ui.registry.addContextMenu(imageButtonName, {\r\n        update: isImage,\r\n    });\r\n};\r\n\r\nconst registerEmbedCommand = (editor, videoButtonText) => {\r\n    const videoIcon = 'embed';\r\n    const handleEmbedAction = () => {\r\n        const mediaImage = new MediaEmbed(editor);\r\n        mediaImage.displayDialogue();\r\n    };\r\n\r\n    // Register the Menu Button as a toggle.\r\n    // This means that when highlighted over an existing Media Video element it will show as toggled on.\r\n    editor.ui.registry.addToggleButton(videoButtonName, {\r\n        icon: videoIcon,\r\n        tooltip: videoButtonText,\r\n        onAction: handleEmbedAction,\r\n        onSetup: api => {\r\n            return editor.selection.selectorChangedWithUnbind(\r\n                'video:not([data-mce-object]):not([data-mce-placeholder]),' +\r\n                'audio:not([data-mce-object]):not([data-mce-placeholder])',\r\n                api.setActive\r\n            ).unbind;\r\n        }\r\n    });\r\n\r\n    editor.ui.registry.addMenuItem(videoButtonName, {\r\n        icon: videoIcon,\r\n        text: videoButtonText,\r\n        onAction: handleEmbedAction,\r\n    });\r\n\r\n    editor.ui.registry.addContextMenu(videoButtonName, {\r\n        update: isVideo,\r\n    });\r\n\r\n    editor.ui.registry.addContextToolbar(videoButtonName, {\r\n        predicate: isVideo,\r\n        items: videoButtonName,\r\n        position: 'node',\r\n        scope: 'node'\r\n    });\r\n\r\n};\r\n\r\nconst registerManagerCommand = (editor, mediaManagerButtonText, mediaManagerButtonImage) => {\r\n    const mediaManagerIcon = 'filemanager';\r\n    const handleMediaManager = () => {\r\n        const mediaManager = new MediaManager(editor);\r\n        mediaManager.displayDialogue();\r\n    };\r\n\r\n    // Register the Menu Button as a toggle.\r\n    editor.ui.registry.addIcon(mediaManagerIcon, mediaManagerButtonImage.html);\r\n    editor.ui.registry.addButton(mediaManagerButtonName, {\r\n        icon: mediaManagerIcon,\r\n        tooltip: mediaManagerButtonText,\r\n        onAction: () => {\r\n            handleMediaManager();\r\n        }\r\n    });\r\n\r\n    editor.ui.registry.addMenuItem(mediaManagerButtonName, {\r\n        icon: mediaManagerIcon,\r\n        text: mediaManagerButtonText,\r\n        onAction: () => {\r\n            handleMediaManager();\r\n        }\r\n    });\r\n};\r\n\r\nexport const getSetup = async() => {\r\n    const [\r\n        imageButtonText,\r\n        mediaButtonText,\r\n        mediaManagerButtonText\r\n    ] = await getStrings(['imagebuttontitle', 'mediabuttontitle', 'mediamanagerbuttontitle'].map((key) => ({key, component})));\r\n\r\n    const [\r\n        mediaManagerButtonImage,\r\n    ] = await Promise.all([\r\n        getButtonImage('filemanager', component)\r\n    ]);\r\n\r\n    // Note: The function returned here must be synchronous and cannot use promises.\r\n    // All promises must be resolved prior to returning the function.\r\n    return (editor) => {\r\n        registerImageCommand(editor, imageButtonText);\r\n        registerEmbedCommand(editor, mediaButtonText);\r\n        registerManagerCommand(editor, mediaManagerButtonText, mediaManagerButtonImage);\r\n    };\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_image","_embed","_manager","isImage","node","nodeName","toLowerCase","isVideo","_exports","getSetup","async","imageButtonText","mediaButtonText","mediaManagerButtonText","getStrings","map","key","component","mediaManagerButtonImage","Promise","all","getButtonImage","editor","registerImageCommand","handleImageAction","MediaImage","displayDialogue","ui","registry","addToggleButton","imageButtonName","icon","tooltip","onAction","onSetup","api","selection","selectorChangedWithUnbind","setActive","unbind","addMenuItem","text","addContextToolbar","predicate","items","position","scope","addContextMenu","update","registerEmbedCommand","videoButtonText","handleEmbedAction","MediaEmbed","videoButtonName","registerManagerCommand","handleMediaManager","MediaManager","addIcon","html","addButton","mediaManagerButtonName"],"mappings":"kLAgCqC,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;sFAFrCG,OAAAJ,uBAAAI,QACAC,OAAAL,uBAAAK,QACAC,SAAAN,uBAAAM,UAGA,MAAMC,QAAWC,MAAyC,QAAhCA,KAAKC,SAASC,cAClCC,QAAWH,MAAyC,UAAhCA,KAAKC,SAASC,eAA6D,UAAhCF,KAAKC,SAASC,cAgIjFE,SAAAC,SApBsBC,UACpB,MACIC,gBACAC,gBACAC,8BACM,EAAAC,KAAAA,YAAW,CAAC,mBAAoB,mBAAoB,2BAA2BC,KAAKC,MAAS,CAACA,QAAKC,UAAAA,QAAAA,gBAGzGC,+BACMC,QAAQC,IAAI,EAClB,EAAAC,uBAAe,cAAeJ,QAASA,aAK3C,OAAQK,SAzHiBC,EAACD,OAAQX,mBAClC,MACMa,kBAAoBA,KACH,IAAIC,OAAU1B,QAACuB,QACvBI,iBAAiB,EAKhCJ,OAAOK,GAAGC,SAASC,gBAAgBC,wBAAiB,CAChDC,KATc,QAUdC,QAASrB,gBACTsB,SAAUT,kBACVU,QAASC,KACEb,OAAOc,UAAUC,0BACpB,sEACAF,IAAIG,WACNC,SAIVjB,OAAOK,GAAGC,SAASY,YAAYV,wBAAiB,CAC5CC,KArBc,QAsBdU,KAAM9B,gBACNsB,SAAUT,oBAGdF,OAAOK,GAAGC,SAASc,kBAAkBZ,wBAAiB,CAClDa,UAAWxC,QACXyC,MAAOd,QAAeA,gBACtBe,SAAU,OACVC,MAAO,SAGXxB,OAAOK,GAAGC,SAASmB,eAAejB,wBAAiB,CAC/CkB,OAAQ7C,SACV,EAsFEoB,CAAqBD,OAAQX,iBAnFRsC,EAAC3B,OAAQ4B,mBAClC,MACMC,kBAAoBA,KACH,IAAIC,OAAUrD,QAACuB,QACvBI,iBAAiB,EAKhCJ,OAAOK,GAAGC,SAASC,gBAAgBwB,wBAAiB,CAChDtB,KATc,QAUdC,QAASkB,gBACTjB,SAAUkB,kBACVjB,QAASC,KACEb,OAAOc,UAAUC,0BACpB,oHAEAF,IAAIG,WACNC,SAIVjB,OAAOK,GAAGC,SAASY,YAAYa,wBAAiB,CAC5CtB,KAtBc,QAuBdU,KAAMS,gBACNjB,SAAUkB,oBAGd7B,OAAOK,GAAGC,SAASmB,eAAeM,wBAAiB,CAC/CL,OAAQzC,UAGZe,OAAOK,GAAGC,SAASc,kBAAkBW,wBAAiB,CAClDV,UAAWpC,QACXqC,MAAOS,QAAeA,gBACtBR,SAAU,OACVC,MAAO,QACT,EA+CEG,CAAqB3B,OAAQV,iBA3CN0C,EAAChC,OAAQT,uBAAwBK,2BAC5D,MACMqC,mBAAqBA,KACF,IAAIC,SAAYzD,QAACuB,QACzBI,iBAAiB,EAIlCJ,OAAOK,GAAGC,SAAS6B,QAPM,cAOoBvC,wBAAwBwC,MACrEpC,OAAOK,GAAGC,SAAS+B,UAAUC,+BAAwB,CACjD7B,KATqB,cAUrBC,QAASnB,uBACToB,SAAUA,KACNsB,oBAAoB,IAI5BjC,OAAOK,GAAGC,SAASY,YAAYoB,+BAAwB,CACnD7B,KAjBqB,cAkBrBU,KAAM5B,uBACNoB,SAAUA,KACNsB,oBAAoB,GAE1B,EAqBED,CAAuBhC,OAAQT,uBAAwBK,wBAAwB,CAClF,CACH"}