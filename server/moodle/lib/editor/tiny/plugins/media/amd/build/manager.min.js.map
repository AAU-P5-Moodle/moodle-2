{"version":3,"file":"manager.min.js","sources":["../src/manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny Media Manager plugin class for Moodle.\r\n *\r\n * @module      tiny_media/manager\r\n * @copyright   2022, Stevani Andolo <stevani@hotmail.com.au>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Templates from 'core/templates';\r\nimport {getString} from 'core/str';\r\nimport Modal from 'core/modal';\r\nimport * as ModalEvents from 'core/modal_events';\r\nimport {getData} from './options';\r\nimport Config from 'core/config';\r\n\r\nexport default class MediaManager {\r\n\r\n    editor = null;\r\n    area = null;\r\n\r\n    constructor(editor) {\r\n        this.editor = editor;\r\n        const data = getData(editor);\r\n        this.area = data.params.area;\r\n        this.area.itemid = data.fpoptions.image.itemid;\r\n    }\r\n\r\n    async displayDialogue() {\r\n        const modal = await Modal.create({\r\n            large: true,\r\n            title: getString('mediamanagerproperties', 'tiny_media'),\r\n            body: Templates.render('tiny_media/mm_iframe', {\r\n                src: this.getIframeURL()\r\n            }),\r\n            removeOnClose: true,\r\n            show: true,\r\n        });\r\n        modal.getRoot().on(ModalEvents.bodyRendered, () => {\r\n            this.selectFirstElement();\r\n        });\r\n\r\n        document.querySelector('.modal-lg').style.cssText = `max-width: 850px`;\r\n        return modal;\r\n    }\r\n\r\n    // It will select the first element in the file manager.\r\n    selectFirstElement() {\r\n        const iframe = document.getElementById('mm-iframe');\r\n        iframe.addEventListener('load', function() {\r\n            let intervalId = setInterval(function() {\r\n                const iDocument = iframe.contentWindow.document;\r\n                if (iDocument.querySelector('.filemanager')) {\r\n                    const firstFocusableElement = iDocument.querySelector('.fp-navbar a:not([disabled])');\r\n                    if (firstFocusableElement) {\r\n                        firstFocusableElement.focus();\r\n                    }\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 200);\r\n        });\r\n    }\r\n\r\n    getIframeURL() {\r\n        const url = new URL(`${Config.wwwroot}/lib/editor/tiny/plugins/media/manage.php`);\r\n        url.searchParams.append('elementid', this.editor.getElement().id);\r\n        for (const key in this.area) {\r\n            url.searchParams.append(key, this.area[key]);\r\n        }\r\n        return url.toString();\r\n    }\r\n}\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","__esModule","default","_templates","_modal","ModalEvents","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_config","_exports","editor","area","constructor","this","data","getData","params","itemid","fpoptions","image","displayDialogue","modal","Modal","create","large","title","getString","body","Templates","render","src","getIframeURL","removeOnClose","show","getRoot","on","bodyRendered","selectFirstElement","document","querySelector","style","cssText","iframe","getElementById","addEventListener","intervalId","setInterval","iDocument","contentWindow","firstFocusableElement","focus","clearInterval","url","URL","Config","wwwroot","searchParams","append","getElement","id","key","toString"],"mappings":"uMA4BiC,SAAAA,yBAAAC,GAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAF,yBAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,EAAA,CAAA,SAAAI,uBAAAJ,GAAAA,OAAAA,GAAAA,EAAAK,WAAAL,EAAAM,CAAAA,QAAAN,EAAA;;;;;;;qFALjCO,WAAAH,uBAAAG,YAEAC,OAAAJ,uBAAAI,QACAC,YAEiC,SAAAT,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAAL,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAM,MAAAA,CAAAA,QAAAN,GAAAG,IAAAA,EAAAJ,yBAAAG,GAAA,GAAAC,GAAAA,EAAAO,IAAAV,GAAA,OAAAG,EAAAQ,IAAAX,GAAA,IAAAY,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAlB,EAAAkB,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAApB,EAAAkB,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAjB,EAAAkB,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAlB,EAAAkB,GAAAN,OAAAA,EAAAN,QAAAN,EAAAG,GAAAA,EAAAmB,IAAAtB,EAAAY,GAAAA,CAAA,CAFjCW,CAAAd,aAEAe,QAAApB,uBAAAoB,SAyDC,OAAAC,SAAAnB,QAvDc,MAEXoB,OAAS,KACTC,KAAO,KAEPC,WAAAA,CAAYF,QACRG,KAAKH,OAASA,OACd,MAAMI,MAAO,EAAAC,SAAOA,SAACL,QACrBG,KAAKF,KAAOG,KAAKE,OAAOL,KACxBE,KAAKF,KAAKM,OAASH,KAAKI,UAAUC,MAAMF,MAC5C,CAEA,qBAAMG,GACF,MAAMC,YAAcC,OAAKhC,QAACiC,OAAO,CAC7BC,OAAO,EACPC,OAAO,EAAAC,KAAAA,WAAU,yBAA0B,cAC3CC,KAAMC,WAAStC,QAACuC,OAAO,uBAAwB,CAC3CC,IAAKjB,KAAKkB,iBAEdC,eAAe,EACfC,MAAM,IAOV,OALAZ,MAAMa,UAAUC,GAAG1C,YAAY2C,cAAc,KACzCvB,KAAKwB,oBAAoB,IAG7BC,SAASC,cAAc,aAAaC,MAAMC,QAAU,mBAC7CpB,KACX,CAGAgB,kBAAAA,GACI,MAAMK,OAASJ,SAASK,eAAe,aACvCD,OAAOE,iBAAiB,QAAQ,WAC5B,IAAIC,WAAaC,aAAY,WACzB,MAAMC,UAAYL,OAAOM,cAAcV,SACvC,GAAIS,UAAUR,cAAc,gBAAiB,CACzC,MAAMU,sBAAwBF,UAAUR,cAAc,gCAClDU,uBACAA,sBAAsBC,QAE1BC,cAAcN,WAClB,CACH,GAAE,IACP,GACJ,CAEAd,YAAAA,GACI,MAAMqB,IAAM,IAAIC,IAAI,GAAGC,QAAMhE,QAACiE,oDAC9BH,IAAII,aAAaC,OAAO,YAAa5C,KAAKH,OAAOgD,aAAaC,IAC9D,IAAK,MAAMC,OAAO/C,KAAKF,KACnByC,IAAII,aAAaC,OAAOG,IAAK/C,KAAKF,KAAKiD,MAE3C,OAAOR,IAAIS,UACf,GACHpD,SAAAnB,OAAA"}