{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny Link UI.\r\n *\r\n * @module      tiny_link/ui\r\n * @copyright   2023 Huong Nguyen <huongnv13@gmail.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {getFilePicker} from 'editor_tiny/options';\r\nimport {displayFilepicker} from 'editor_tiny/utils';\r\nimport LinkModal from 'tiny_link/modal';\r\nimport {getPermissions} from \"tiny_link/options\";\r\nimport {setLink, getCurrentLinkData, unSetLink} from \"tiny_link/link\";\r\nimport Selectors from 'tiny_link/selectors';\r\n\r\n/**\r\n * Handle action.\r\n *\r\n * @param {TinyMCE} editor\r\n * @param {boolean} unlink\r\n */\r\nexport const handleAction = (editor, unlink = false) => {\r\n    if (!unlink) {\r\n        displayDialogue(editor);\r\n    } else {\r\n        unSetLink(editor);\r\n    }\r\n};\r\n\r\n/**\r\n * Display the link dialogue.\r\n *\r\n * @param {TinyMCE} editor\r\n * @returns {Promise<void>}\r\n */\r\nconst displayDialogue = async(editor) => {\r\n    const modal = await LinkModal.create({\r\n        templateContext: getTemplateContext(editor),\r\n    });\r\n\r\n    const $root = await modal.getRoot();\r\n    const root = $root[0];\r\n    const currentForm = root.querySelector('form');\r\n\r\n    root.addEventListener('click', (e) => {\r\n        const submitAction = e.target.closest(Selectors.actions.submit);\r\n        const linkBrowserAction = e.target.closest(Selectors.actions.linkBrowser);\r\n        if (submitAction) {\r\n            e.preventDefault();\r\n            setLink(currentForm, editor);\r\n            modal.destroy();\r\n        }\r\n        if (linkBrowserAction) {\r\n            e.preventDefault();\r\n            displayFilepicker(editor, 'link').then((params) => {\r\n                filePickerCallback(params, currentForm, editor);\r\n                return modal.destroy();\r\n            }).catch();\r\n        }\r\n    });\r\n\r\n    const linkTitle = root.querySelector(Selectors.elements.urlText);\r\n    const linkUrl = root.querySelector(Selectors.elements.urlEntry);\r\n    linkTitle.addEventListener('change', () => {\r\n        if (linkTitle.value.length > 0) {\r\n            linkTitle.dataset.useLinkAsText = 'false';\r\n        } else {\r\n            linkTitle.dataset.useLinkAsText = 'true';\r\n            linkTitle.value = linkUrl.value;\r\n        }\r\n    });\r\n\r\n    linkUrl.addEventListener('keyup', () => {\r\n        updateTextToDisplay(currentForm);\r\n    });\r\n};\r\n\r\n/**\r\n * Get template context.\r\n *\r\n * @param {TinyMCE} editor\r\n * @returns {Object}\r\n */\r\nconst getTemplateContext = (editor) => {\r\n    const data = getCurrentLinkData(editor);\r\n\r\n    return Object.assign({}, {\r\n        elementid: editor.id,\r\n        showfilepicker: getPermissions(editor).filepicker &&\r\n            (typeof getFilePicker(editor, 'link') !== 'undefined'),\r\n        isupdating: Object.keys(data).length > 0,\r\n    }, data);\r\n};\r\n\r\n/**\r\n * Update the dialogue after a link was selected in the File Picker.\r\n *\r\n * @param {Object} params\r\n * @param {Element} currentForm\r\n * @param {TinyMCE} editor\r\n */\r\nconst filePickerCallback = (params, currentForm, editor) => {\r\n    if (params.url) {\r\n        const inputUrl = currentForm.querySelector(Selectors.elements.urlEntry);\r\n        inputUrl.value = params.url;\r\n        setLink(currentForm, editor);\r\n    }\r\n};\r\n\r\n/**\r\n * Update the text to display if the user does not provide the custom text.\r\n *\r\n * @param {Element} currentForm\r\n */\r\nconst updateTextToDisplay = (currentForm) => {\r\n    const urlEntry = currentForm.querySelector(Selectors.elements.urlEntry);\r\n    const urlText = currentForm.querySelector(Selectors.elements.urlText);\r\n    if (urlText.dataset.useLinkAsText === 'true') {\r\n        urlText.value = urlEntry.value;\r\n    }\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_modal","_selectors","_exports","handleAction","editor","arguments","length","undefined","unSetLink","displayDialogue","async","modal","LinkModal","create","templateContext","getTemplateContext","root","getRoot","currentForm","querySelector","addEventListener","submitAction","target","closest","Selectors","actions","submit","linkBrowserAction","linkBrowser","preventDefault","setLink","destroy","displayFilepicker","then","params","filePickerCallback","catch","linkTitle","elements","urlText","linkUrl","urlEntry","value","dataset","useLinkAsText","updateTextToDisplay","data","getCurrentLinkData","Object","assign","elementid","id","showfilepicker","getPermissions","filepicker","getFilePicker","isupdating","keys","url"],"mappings":"+NA4B4C,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;0FAH5CG,OAAAJ,uBAAAI,QAGAC,WAAAL,uBAAAK,YAcEC,SAAAC,aAN0B,SAACC,QAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,IAInC,EAAAG,MAAAA,WAAUJ,QAFVK,gBAAgBL,SAYxB,MAAMK,gBAAkBC,eACpB,MAAMC,YAAcC,OAASb,QAACc,OAAO,CACjCC,gBAAiBC,mBAAmBX,UAIlCY,YADcL,MAAMM,WACP,GACbC,YAAcF,KAAKG,cAAc,QAEvCH,KAAKI,iBAAiB,SAAUvB,IAC5B,MAAMwB,aAAexB,EAAEyB,OAAOC,QAAQC,WAASzB,QAAC0B,QAAQC,QAClDC,kBAAoB9B,EAAEyB,OAAOC,QAAQC,WAASzB,QAAC0B,QAAQG,aACzDP,eACAxB,EAAEgC,kBACF,EAAAC,MAAOA,SAACZ,YAAad,QACrBO,MAAMoB,WAENJ,oBACA9B,EAAEgC,kBACF,EAAAG,OAAAA,mBAAkB5B,OAAQ,QAAQ6B,MAAMC,SACpCC,mBAAmBD,OAAQhB,YAAad,QACjCO,MAAMoB,aACdK,QACP,IAGJ,MAAMC,UAAYrB,KAAKG,cAAcK,WAAAA,QAAUc,SAASC,SAClDC,QAAUxB,KAAKG,cAAcK,WAAAA,QAAUc,SAASG,UACtDJ,UAAUjB,iBAAiB,UAAU,KAC7BiB,UAAUK,MAAMpC,OAAS,EACzB+B,UAAUM,QAAQC,cAAgB,SAElCP,UAAUM,QAAQC,cAAgB,OAClCP,UAAUK,MAAQF,QAAQE,MAC9B,IAGJF,QAAQpB,iBAAiB,SAAS,KAC9ByB,oBAAoB3B,YAAY,GAClC,EASAH,mBAAsBX,SACxB,MAAM0C,MAAO,EAAAC,MAAkBA,oBAAC3C,QAEhC,OAAO4C,OAAOC,OAAO,GAAI,CACrBC,UAAW9C,OAAO+C,GAClBC,gBAAgB,EAAAC,UAAAA,gBAAejD,QAAQkD,iBACO,KAAlC,EAAAC,wBAAcnD,OAAQ,QAClCoD,WAAYR,OAAOS,KAAKX,MAAMxC,OAAS,GACxCwC,KAAK,EAUNX,mBAAqBA,CAACD,OAAQhB,YAAad,UAC7C,GAAI8B,OAAOwB,IAAK,CACKxC,YAAYC,cAAcK,WAAAA,QAAUc,SAASG,UACrDC,MAAQR,OAAOwB,KACxB,EAAA5B,MAAOA,SAACZ,YAAad,OACzB,GAQEyC,oBAAuB3B,cACzB,MAAMuB,SAAWvB,YAAYC,cAAcK,WAAAA,QAAUc,SAASG,UACxDF,QAAUrB,YAAYC,cAAcK,WAAAA,QAAUc,SAASC,SACvB,SAAlCA,QAAQI,QAAQC,gBAChBL,QAAQG,MAAQD,SAASC,MAC7B,CACF"}