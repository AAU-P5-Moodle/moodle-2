{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport {getString} from 'core/str';\r\nimport {component, linkButtonShortName, unlinkButtonShortName} from 'tiny_link/common';\r\nimport {handleAction} from 'tiny_link/ui';\r\nimport {toggleActiveState} from 'tiny_link/link';\r\n\r\n/**\r\n * Tiny Link commands.\r\n *\r\n * @module      tiny_link/commands\r\n * @copyright   2023 Huong Nguyen <huongnv13@gmail.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nexport const getSetup = async() => {\r\n    const [\r\n        linkButtonText,\r\n        unlinkButtonText,\r\n    ] = await Promise.all([\r\n        getString('link', component),\r\n        getString('unlink', component),\r\n    ]);\r\n\r\n    return (editor) => {\r\n        // Register Link button.\r\n        editor.ui.registry.addToggleButton(linkButtonShortName, {\r\n            icon: 'link',\r\n            tooltip: linkButtonText,\r\n            onAction: () => {\r\n                handleAction(editor);\r\n            },\r\n            onSetup: toggleActiveState(editor),\r\n        });\r\n\r\n        // Register the Link menu item.\r\n        editor.ui.registry.addMenuItem(linkButtonShortName, {\r\n            icon: 'link',\r\n            shortcut: 'Meta+K',\r\n            text: linkButtonText,\r\n            onAction: () => {\r\n                handleAction(editor);\r\n            },\r\n        });\r\n\r\n        // Register Unlink button.\r\n        editor.ui.registry.addToggleButton(unlinkButtonShortName, {\r\n            icon: 'unlink',\r\n            tooltip: unlinkButtonText,\r\n            onAction: () => {\r\n                handleAction(editor, true);\r\n            },\r\n            onSetup: toggleActiveState(editor),\r\n        });\r\n\r\n        // Register shortcut.\r\n        editor.shortcuts.add('Meta+K', 'Shortcut for create link', () => {\r\n            handleAction(editor);\r\n        });\r\n    };\r\n};\r\n"],"names":["_exports","getSetup","async","linkButtonText","unlinkButtonText","Promise","all","getString","component","editor","ui","registry","addToggleButton","linkButtonShortName","icon","tooltip","onAction","handleAction","onSetup","toggleActiveState","addMenuItem","shortcut","text","unlinkButtonShortName","shortcuts","add"],"mappings":"kOAyEEA,SAAAC,SA7CsBC,UACpB,MACIC,eACAC,wBACMC,QAAQC,IAAI,EAClB,EAAAC,KAAAA,WAAU,OAAQC,QAAAA,YAClB,EAAAD,KAAAA,WAAU,SAAUC,QAAAA,aAGxB,OAAQC,SAEJA,OAAOC,GAAGC,SAASC,gBAAgBC,4BAAqB,CACpDC,KAAM,OACNC,QAASZ,eACTa,SAAUA,MACN,EAAAC,IAAAA,cAAaR,OAAO,EAExBS,SAAS,EAAAC,MAAiBA,mBAACV,UAI/BA,OAAOC,GAAGC,SAASS,YAAYP,4BAAqB,CAChDC,KAAM,OACNO,SAAU,SACVC,KAAMnB,eACNa,SAAUA,MACN,EAAAC,IAAAA,cAAaR,OAAO,IAK5BA,OAAOC,GAAGC,SAASC,gBAAgBW,8BAAuB,CACtDT,KAAM,SACNC,QAASX,iBACTY,SAAUA,MACN,EAAAC,IAAYA,cAACR,QAAQ,EAAK,EAE9BS,SAAS,EAAAC,MAAiBA,mBAACV,UAI/BA,OAAOe,UAAUC,IAAI,SAAU,4BAA4B,MACvD,EAAAR,IAAAA,cAAaR,OAAO,GACtB,CACL,CACH"}