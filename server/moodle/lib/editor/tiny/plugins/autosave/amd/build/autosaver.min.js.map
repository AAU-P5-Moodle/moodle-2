{"version":3,"file":"autosaver.min.js","sources":["../src/autosaver.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Storage helper for the Moodle Tiny Autosave plugin.\r\n *\r\n * @module      tiny_autosave/autosaver\r\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport * as Options from './options';\r\nimport * as Storage from './storage';\r\nimport Log from 'core/log';\r\nimport {eventTypes} from 'core_form/events';\r\nimport {getLogSource} from './common';\r\n\r\nexport const register = (editor) => {\r\n    const undoHandler = () => {\r\n        if (!editor.undoManager.hasUndo()) {\r\n            Log.debug(`Ignoring undo event as there is no undo history`, getLogSource(editor));\r\n            return;\r\n        }\r\n        Storage.saveDraft(editor);\r\n    };\r\n\r\n    const visibilityChangedHandler = () => {\r\n        if (document.visibilityState === 'hidden') {\r\n            if (Options.isInitialised(editor)) {\r\n                Storage.saveDraft(editor);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Javascript form submission handler.\r\n    const handleFormSubmittedByJavascript = (e) => {\r\n        if (Options.isInitialised(editor) && e.target.contains(editor.getElement())) {\r\n            removeAutoSaveSession();\r\n        }\r\n    };\r\n\r\n    // Remove the auto save session.\r\n    const removeAutoSaveSession = () => {\r\n        document.removeEventListener('visibilitychange', visibilityChangedHandler);\r\n        document.removeEventListener(eventTypes.formSubmittedByJavascript, handleFormSubmittedByJavascript);\r\n        Storage.removeAutosaveSession(editor);\r\n    };\r\n\r\n    // Attempt to store the draft one final time before the page unloads.\r\n    // Note: This may need to be sent as a beacon instead.\r\n    document.addEventListener('visibilitychange', visibilityChangedHandler);\r\n\r\n    // When the page is submitted as a form, remove the draft.\r\n    editor.on('submit', removeAutoSaveSession);\r\n    document.addEventListener(eventTypes.formSubmittedByJavascript, handleFormSubmittedByJavascript);\r\n\r\n    editor.on('init', () => {\r\n        // Setup the Undo handler.\r\n        editor.on('AddUndo', undoHandler);\r\n\r\n        if (editor.dom.isEmpty(editor.getBody())) {\r\n            Log.info(`Attempting to restore draft`, getLogSource(editor));\r\n            Storage.restoreDraft(editor);\r\n        } else {\r\n            // There was nothing to restore, so we can mark the editor as initialised.\r\n            Log.warn(`Skipping draft restoration. The editor is not empty.`, getLogSource(editor));\r\n            Options.markInitialised(editor);\r\n        }\r\n    });\r\n};\r\n"],"names":["e","_getRequireWildcardCache","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","Options","Storage","_log","_exports","register","editor","undoHandler","undoManager","hasUndo","saveDraft","Log","debug","getLogSource","visibilityChangedHandler","document","visibilityState","isInitialised","handleFormSubmittedByJavascript","target","contains","getElement","removeAutoSaveSession","removeEventListener","eventTypes","formSubmittedByJavascript","removeAutosaveSession","addEventListener","on","dom","isEmpty","getBody","info","restoreDraft","warn","markInitialised"],"mappings":"uKAyB2B,IAAAA,EAAA,SAAAC,yBAAAD,GAAA,GAAA,mBAAAE,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAD,yBAAA,SAAAD,GAAAA,OAAAA,EAAAI,EAAAD,IAAAH,EAAA,CAAA,SAAAK,wBAAAL,EAAAG,GAAAA,IAAAA,GAAAH,GAAAA,EAAAM,WAAAN,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAO,MAAAA,CAAAA,QAAAP,GAAAI,IAAAA,EAAAH,yBAAAE,GAAA,GAAAC,GAAAA,EAAAI,IAAAR,GAAA,OAAAI,EAAAK,IAAAT,GAAA,IAAAU,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAhB,EAAAgB,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAlB,EAAAgB,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAf,EAAAgB,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAhB,EAAAgB,GAAAN,OAAAA,EAAAH,QAAAP,EAAAI,GAAAA,EAAAgB,IAAApB,EAAAU,GAAAA;;;;;;;KAAA,kFAF3BW,QAAAhB,wBAAAgB,SACAC,QAAAjB,wBAAAiB,SACAC,MAA2BvB,EAA3BuB,OAA2BvB,EAAAM,WAAAN,EAAAO,CAAAA,QAAAP,GAwDzBwB,SAAAC,SApDuBC,SACrB,MAAMC,YAAcA,KACXD,OAAOE,YAAYC,UAIxBP,QAAQQ,UAAUJ,QAHdK,KAAGxB,QAACyB,MAAM,mDAAmD,EAAAC,QAAYA,cAACP,QAGrD,EAGvBQ,yBAA2BA,KACI,WAA7BC,SAASC,iBACLf,QAAQgB,cAAcX,SACtBJ,QAAQQ,UAAUJ,OAE1B,EAIEY,gCAAmCtC,IACjCqB,QAAQgB,cAAcX,SAAW1B,EAAEuC,OAAOC,SAASd,OAAOe,eAC1DC,uBACJ,EAIEA,sBAAwBA,KAC1BP,SAASQ,oBAAoB,mBAAoBT,0BACjDC,SAASQ,oBAAoBC,QAAAA,WAAWC,0BAA2BP,iCACnEhB,QAAQwB,sBAAsBpB,OAAO,EAKzCS,SAASY,iBAAiB,mBAAoBb,0BAG9CR,OAAOsB,GAAG,SAAUN,uBACpBP,SAASY,iBAAiBH,QAAAA,WAAWC,0BAA2BP,iCAEhEZ,OAAOsB,GAAG,QAAQ,KAEdtB,OAAOsB,GAAG,UAAWrB,aAEjBD,OAAOuB,IAAIC,QAAQxB,OAAOyB,YAC1BpB,KAAGxB,QAAC6C,KAAK,+BAA+B,EAAAnB,QAAYA,cAACP,SACrDJ,QAAQ+B,aAAa3B,UAGrBK,KAAGxB,QAAC+C,KAAK,wDAAwD,EAAArB,QAAYA,cAACP,SAC9EL,QAAQkC,gBAAgB7B,QAC5B,GACF,CACJ"}