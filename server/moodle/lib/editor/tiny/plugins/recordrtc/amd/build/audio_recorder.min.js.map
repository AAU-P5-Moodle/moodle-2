{"version":3,"file":"audio_recorder.min.js","sources":["../src/audio_recorder.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny Record RTC - audio recorder configuration.\r\n *\r\n * @module      tiny_recordrtc/audio_recorder\r\n * @copyright   2022 Stevani Andolo <stevani@hotmail.com.au>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport BaseClass from './base_recorder';\r\nimport Modal from './modal';\r\nimport {component} from 'tiny_recordrtc/common';\r\n\r\nexport default class Audio extends BaseClass {\r\n    configurePlayer() {\r\n        return this.modalRoot.querySelector('audio');\r\n    }\r\n\r\n    getSupportedTypes() {\r\n        return [\r\n            // Firefox supports webm and ogg but Chrome only supports ogg.\r\n            // So we use ogg to maximize the compatibility.\r\n            'audio/ogg;codecs=opus',\r\n\r\n            // Safari supports mp4.\r\n            'audio/mp4;codecs=opus',\r\n            'audio/mp4;codecs=wav',\r\n            'audio/mp4;codecs=mp3',\r\n        ];\r\n    }\r\n\r\n    getRecordingOptions() {\r\n        return {\r\n            audioBitsPerSecond: parseInt(this.config.audiobitrate),\r\n        };\r\n    }\r\n\r\n    getMediaConstraints() {\r\n        return {\r\n            audio: true,\r\n        };\r\n    }\r\n\r\n    getRecordingType() {\r\n        return 'audio';\r\n    }\r\n\r\n    getTimeLimit() {\r\n        return this.config.audiotimelimit;\r\n    }\r\n\r\n    getEmbedTemplateName() {\r\n        return 'tiny_recordrtc/embed_audio';\r\n    }\r\n\r\n    getFileName(prefix) {\r\n        return `${prefix}-audio.${this.getFileExtension()}`;\r\n    }\r\n\r\n    getFileExtension() {\r\n        if (window.MediaRecorder.isTypeSupported('audio/ogg')) {\r\n            return 'ogg';\r\n        } else if (window.MediaRecorder.isTypeSupported('audio/mp4')) {\r\n            return 'mp4';\r\n        }\r\n\r\n        window.console.warn(`Unknown file type for MediaRecorder API`);\r\n        return '';\r\n    }\r\n\r\n    static getModalClass() {\r\n        return class extends Modal {\r\n            static TYPE = `${component}/audio_recorder`;\r\n            static TEMPLATE = `${component}/audio_recorder`;\r\n        };\r\n    }\r\n}\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_base_recorder","_modal","Audio","BaseClass","configurePlayer","this","modalRoot","querySelector","getSupportedTypes","getRecordingOptions","audioBitsPerSecond","parseInt","config","audiobitrate","getMediaConstraints","audio","getRecordingType","getTimeLimit","audiotimelimit","getEmbedTemplateName","getFileName","prefix","getFileExtension","window","MediaRecorder","isTypeSupported","console","warn","getModalClass","Modal","static","component","_exports"],"mappings":"yJAwB4B,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;qFAD5BG,eAAAJ,uBAAAI,gBACAC,OAAAL,uBAAAK,QAGe,MAAMC,cAAcC,eAAAA,QAC/BC,eAAAA,GACI,OAAOC,KAAKC,UAAUC,cAAc,QACxC,CAEAC,iBAAAA,GACI,MAAO,CAGH,wBAGA,wBACA,uBACA,uBAER,CAEAC,mBAAAA,GACI,MAAO,CACHC,mBAAoBC,SAASN,KAAKO,OAAOC,cAEjD,CAEAC,mBAAAA,GACI,MAAO,CACHC,OAAO,EAEf,CAEAC,gBAAAA,GACI,MAAO,OACX,CAEAC,YAAAA,GACI,OAAOZ,KAAKO,OAAOM,cACvB,CAEAC,oBAAAA,GACI,MAAO,4BACX,CAEAC,WAAAA,CAAYC,QACR,MAAO,GAAGA,gBAAgBhB,KAAKiB,oBACnC,CAEAA,gBAAAA,GACI,OAAIC,OAAOC,cAAcC,gBAAgB,aAC9B,MACAF,OAAOC,cAAcC,gBAAgB,aACrC,OAGXF,OAAOG,QAAQC,KAAK,2CACb,GACX,CAEA,oBAAOC,GACH,OAAO,cAAcC,eACjBC,YAAc,GAAGC,QAAAA,2BACjBD,gBAAkB,GAAGC,QAAAA,2BAE7B,EACH,OAAAC,SAAAjC,QAAAG,MAAA8B,SAAAjC,OAAA"}