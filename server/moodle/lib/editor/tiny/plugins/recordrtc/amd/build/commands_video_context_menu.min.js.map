{"version":3,"file":"commands_video_context_menu.min.js","sources":["../src/commands_video_context_menu.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny Record RTC - Video context menu command.\r\n *\r\n * @module      tiny_recordrtc/commands_video_context_menu\r\n * @copyright   2024 The Open University\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {getString} from 'core/str';\r\nimport {getButtonImage} from 'editor_tiny/utils';\r\nimport {\r\n    videoButtonName,\r\n    screenButtonName,\r\n    videoContextMenuName,\r\n    component,\r\n} from './common';\r\nimport {isVideoAllowed, isScreenAllowed} from './options';\r\nimport videoRecorder from \"./video_recorder\";\r\nimport screenRecorder from \"./screen_recorder\";\r\n\r\nexport default async() => {\r\n    const [\r\n        videoContextMenuTitle,\r\n        videoButtonTitle,\r\n        screenButtonTitle,\r\n        buttonImageVideo,\r\n        buttonImageScreen,\r\n    ] = await Promise.all([\r\n        getString('videorecordmenutitle', component),\r\n        getString('videobuttontitle', component),\r\n        getString('screenbuttontitle', component),\r\n        getButtonImage('video', component),\r\n        getButtonImage('screen', component),\r\n    ]);\r\n\r\n    return (editor) => {\r\n        let useContextMenu = true;\r\n        let singleButton = 'video';\r\n        let singleButtonTitle = videoButtonTitle;\r\n        let imageHtml = buttonImageVideo.html;\r\n        let recorder;\r\n        if (!isVideoAllowed(editor) && !isScreenAllowed(editor)) {\r\n            return;\r\n        } else if (isVideoAllowed(editor) && !isScreenAllowed(editor)) {\r\n            // Only video recording is allowed.\r\n            useContextMenu = false;\r\n            recorder = videoRecorder;\r\n        } else if (isScreenAllowed(editor) && !isVideoAllowed(editor)) {\r\n            // Only screen recording is allowed.\r\n            useContextMenu = false;\r\n            singleButton = 'screen';\r\n            singleButtonTitle = screenButtonTitle;\r\n            imageHtml = buttonImageScreen.html;\r\n            recorder = screenRecorder;\r\n        }\r\n        editor.ui.registry.addIcon(singleButton, imageHtml);\r\n\r\n        if (useContextMenu) {\r\n            // Add the video and screen buttons to the context menu.\r\n            editor.ui.registry.addMenuButton(videoContextMenuName, {\r\n                icon: singleButton,\r\n                tooltip: videoContextMenuTitle,\r\n                fetch: callback => callback(`${videoButtonName} ${screenButtonName}`),\r\n            });\r\n        } else {\r\n            // Add the video or screen button to the toolbar.\r\n            editor.ui.registry.addButton(videoContextMenuName, {\r\n                icon: singleButton,\r\n                tooltip: singleButtonTitle,\r\n                onAction: () => recorder.display(editor),\r\n            });\r\n        }\r\n    };\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_video_recorder","_screen_recorder","_exports","async","videoContextMenuTitle","videoButtonTitle","screenButtonTitle","buttonImageVideo","buttonImageScreen","Promise","all","getString","component","getButtonImage","editor","recorder","useContextMenu","singleButton","singleButtonTitle","imageHtml","html","isVideoAllowed","isScreenAllowed","videoRecorder","screenRecorder","ui","registry","addIcon","addMenuButton","videoContextMenuName","icon","tooltip","fetch","callback","videoButtonName","screenButtonName","addButton","onAction","display"],"mappings":"+OAiC+C,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;qFAD/CG,gBAAAJ,uBAAAI,iBACAC,iBAAAL,uBAAAK,kBAuDC,OAAAC,SAAAH,QArDcI,UACX,MACIC,sBACAC,iBACAC,kBACAC,iBACAC,yBACMC,QAAQC,IAAI,EAClB,EAAAC,KAASA,WAAC,uBAAwBC,QAASA,YAC3C,EAAAD,KAASA,WAAC,mBAAoBC,QAAAA,YAC9B,EAAAD,KAAAA,WAAU,oBAAqBC,QAAAA,YAC/B,EAAAC,OAAAA,gBAAe,QAASD,QAAAA,YACxB,EAAAC,OAAAA,gBAAe,SAAUD,QAAAA,aAG7B,OAAQE,SACJ,IAIIC,SAJAC,gBAAiB,EACjBC,aAAe,QACfC,kBAAoBb,iBACpBc,UAAYZ,iBAAiBa,OAE5B,EAAAC,SAAcA,gBAACP,UAAY,EAAAQ,SAAAA,iBAAgBR,YAErC,EAAAO,SAAAA,gBAAeP,WAAY,EAAAQ,SAAAA,iBAAgBR,SAElDE,gBAAiB,EACjBD,SAAWQ,gBAAaxB,UACjB,EAAAuB,SAAAA,iBAAgBR,WAAY,EAAAO,SAAAA,gBAAeP,UAElDE,gBAAiB,EACjBC,aAAe,SACfC,kBAAoBZ,kBACpBa,UAAYX,kBAAkBY,KAC9BL,SAAWS,iBAAczB,SAE7Be,OAAOW,GAAGC,SAASC,QAAQV,aAAcE,WAErCH,eAEAF,OAAOW,GAAGC,SAASE,cAAcC,6BAAsB,CACnDC,KAAMb,aACNc,QAAS3B,sBACT4B,MAAOC,UAAYA,SAAS,GAAGC,QAAAA,mBAAmBC,QAAAA,sBAItDrB,OAAOW,GAAGC,SAASU,UAAUP,6BAAsB,CAC/CC,KAAMb,aACNc,QAASb,kBACTmB,SAAUA,IAAMtB,SAASuB,QAAQxB,UAEzC,CACH,EACJZ,SAAAH,OAAA"}