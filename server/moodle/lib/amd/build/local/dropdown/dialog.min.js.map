{"version":3,"file":"dialog.min.js","sources":["../../../src/local/dropdown/dialog.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Dropdown status JS controls.\r\n *\r\n * @module      core/local/dropdown/dialog\r\n * @copyright   2023 Ferran Recio <ferran@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n// The jQuery module is only used for interacting with Bootstrap 4. It can be removed when MDL-71979 is integrated.\r\nimport jQuery from 'jquery';\r\nimport {\r\n    firstFocusableElement,\r\n    lastFocusableElement,\r\n    previousFocusableElement,\r\n    nextFocusableElement,\r\n} from 'core/pagehelpers';\r\nimport Pending from 'core/pending';\r\n\r\nconst Selectors = {\r\n    dropdownButton: '[data-for=\"dropdowndialog_button\"]',\r\n    dropdownDialog: '[data-for=\"dropdowndialog_dialog\"]',\r\n};\r\n\r\n/**\r\n * Dropdown dialog class.\r\n * @private\r\n */\r\nexport class DropdownDialog {\r\n    /**\r\n     * Constructor.\r\n     * @param {HTMLElement} element The element to initialize.\r\n     */\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.button = element.querySelector(Selectors.dropdownButton);\r\n        this.panel = element.querySelector(Selectors.dropdownDialog);\r\n    }\r\n\r\n    /**\r\n     * Initialize the subpanel element.\r\n     *\r\n     * This method adds the event listeners to the subpanel and the position classes.\r\n     */\r\n    init() {\r\n        if (this.element.dataset.dropdownDialogInitialized) {\r\n            return;\r\n        }\r\n\r\n        // Menu Item events.\r\n        this.button.addEventListener('keydown', this._buttonKeyHandler.bind(this));\r\n        // Subpanel content events.\r\n        this.panel.addEventListener('keydown', this._contentKeyHandler.bind(this));\r\n\r\n        this.element.dataset.dropdownDialogInitialized = true;\r\n    }\r\n\r\n    /**\r\n     * Dropdown button key handler.\r\n     * @param {Event} event\r\n     * @private\r\n     */\r\n    _buttonKeyHandler(event) {\r\n        if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.setVisible(false);\r\n            return;\r\n        }\r\n\r\n        if (event.key === 'ArrowDown' || event.key === 'ArrowRight') {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.setVisible(true);\r\n            this._focusPanelContent();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sub panel content key handler.\r\n     * @param {Event} event\r\n     * @private\r\n     */\r\n    _contentKeyHandler(event) {\r\n        let newFocus = null;\r\n\r\n        if (event.key === 'End') {\r\n            newFocus = lastFocusableElement(this.panel);\r\n        }\r\n        if (event.key === 'Home') {\r\n            newFocus = firstFocusableElement(this.panel);\r\n        }\r\n        if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\r\n            newFocus = previousFocusableElement(this.panel, false);\r\n            if (!newFocus) {\r\n                newFocus = this.button;\r\n            }\r\n        }\r\n        if (event.key === 'ArrowDown' || event.key === 'ArrowRight') {\r\n            newFocus = nextFocusableElement(this.panel, false);\r\n        }\r\n        if (newFocus !== null) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            newFocus.focus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus on the first focusable element of the subpanel.\r\n     * @private\r\n     */\r\n    _focusPanelContent() {\r\n        const pendingPromise = new Pending('core/dropdown/dialog:focuscontent');\r\n        // Some Bootstrap events are triggered after the click event.\r\n        // To prevent this from affecting the focus we wait a bit.\r\n        setTimeout(() => {\r\n            const firstFocusable = firstFocusableElement(this.panel);\r\n            if (firstFocusable) {\r\n                firstFocusable.focus();\r\n            }\r\n            pendingPromise.resolve();\r\n        }, 100);\r\n    }\r\n\r\n    /**\r\n     * Set the visibility of a subpanel.\r\n     * @param {Boolean} visible true if the subpanel should be visible.\r\n     */\r\n    setVisible(visible) {\r\n        if (visible === this.isVisible()) {\r\n            return;\r\n        }\r\n        // All jQuery in this code can be replaced when MDL-71979 is integrated.\r\n        jQuery(this.button).dropdown('toggle');\r\n    }\r\n\r\n    /**\r\n     * Get the visibility of a subpanel.\r\n     * @returns {Boolean} true if the subpanel is visible.\r\n     */\r\n    isVisible() {\r\n        return this.button.getAttribute('aria-expanded') === 'true';\r\n    }\r\n\r\n    /**\r\n     * Set the content of the button.\r\n     * @param {String} content\r\n     */\r\n    setButtonContent(content) {\r\n        this.button.innerHTML = content;\r\n    }\r\n\r\n    /**\r\n     * Set the disabled state of the button.\r\n     * @param {Boolean} disabled\r\n     */\r\n    setButtonDisabled(disabled) {\r\n        if (disabled) {\r\n            this.button.setAttribute('disabled', 'disabled');\r\n        } else {\r\n            this.button.removeAttribute('disabled');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return the main dropdown HTML element.\r\n     * @returns {HTMLElement} The element.\r\n     */\r\n    getElement() {\r\n        return this.element;\r\n    }\r\n}\r\n\r\n/**\r\n * Get the dropdown dialog instance from a selector.\r\n * @param {string} selector The query selector to init.\r\n * @returns {DropdownDialog|null} The dropdown dialog instance if any.\r\n */\r\nexport const getDropdownDialog = (selector) => {\r\n    const dropdownElement = document.querySelector(selector);\r\n    if (!dropdownElement) {\r\n        return null;\r\n    }\r\n    return new DropdownDialog(dropdownElement);\r\n};\r\n\r\n/**\r\n * Initialize module.\r\n *\r\n * @method\r\n * @param {string} selector The query selector to init.\r\n */\r\nexport const init = (selector) => {\r\n    const dropdown = getDropdownDialog(selector);\r\n    if (!dropdown) {\r\n        throw new Error(`Dopdown dialog element not found: ${selector}`);\r\n    }\r\n    dropdown.init();\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_jquery","_pending","Selectors","DropdownDialog","constructor","element","this","button","querySelector","panel","init","dataset","dropdownDialogInitialized","addEventListener","_buttonKeyHandler","bind","_contentKeyHandler","event","key","stopPropagation","preventDefault","setVisible","_focusPanelContent","newFocus","lastFocusableElement","firstFocusableElement","previousFocusableElement","nextFocusableElement","focus","pendingPromise","Pending","setTimeout","firstFocusable","resolve","visible","isVisible","jQuery","dropdown","getAttribute","setButtonContent","content","innerHTML","setButtonDisabled","disabled","setAttribute","removeAttribute","getElement","_exports","getDropdownDialog","selector","dropdownElement","document","Error"],"mappings":"6IA+BmC,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;qIAPnCG,QAAAJ,uBAAAI,SAOAC,SAAAL,uBAAAK,UAEA,MAAMC,yBACc,qCADdA,yBAEc,qCAOb,MAAMC,eAKTC,WAAAA,CAAYC,SACRC,KAAKD,QAAUA,QACfC,KAAKC,OAASF,QAAQG,cAAcN,0BACpCI,KAAKG,MAAQJ,QAAQG,cAAcN,yBACvC,CAOAQ,IAAAA,GACQJ,KAAKD,QAAQM,QAAQC,4BAKzBN,KAAKC,OAAOM,iBAAiB,UAAWP,KAAKQ,kBAAkBC,KAAKT,OAEpEA,KAAKG,MAAMI,iBAAiB,UAAWP,KAAKU,mBAAmBD,KAAKT,OAEpEA,KAAKD,QAAQM,QAAQC,2BAA4B,EACrD,CAOAE,iBAAAA,CAAkBG,OACd,GAAkB,YAAdA,MAAMC,KAAmC,cAAdD,MAAMC,IAIjC,OAHAD,MAAME,kBACNF,MAAMG,sBACNd,KAAKe,YAAW,GAIF,cAAdJ,MAAMC,KAAqC,eAAdD,MAAMC,MACnCD,MAAME,kBACNF,MAAMG,iBACNd,KAAKe,YAAW,GAChBf,KAAKgB,qBAEb,CAOAN,kBAAAA,CAAmBC,OACf,IAAIM,SAAW,KAEG,QAAdN,MAAMC,MACNK,UAAW,EAAAC,aAAAA,sBAAqBlB,KAAKG,QAEvB,SAAdQ,MAAMC,MACNK,UAAW,EAAAE,aAAAA,uBAAsBnB,KAAKG,QAExB,YAAdQ,MAAMC,KAAmC,cAAdD,MAAMC,MACjCK,UAAW,EAAAG,aAAwBA,0BAACpB,KAAKG,OAAO,GAC3Cc,WACDA,SAAWjB,KAAKC,SAGN,cAAdU,MAAMC,KAAqC,eAAdD,MAAMC,MACnCK,UAAW,EAAAI,aAAoBA,sBAACrB,KAAKG,OAAO,IAE/B,OAAbc,WACAN,MAAME,kBACNF,MAAMG,iBACNG,SAASK,QAEjB,CAMAN,kBAAAA,GACI,MAAMO,eAAiB,IAAIC,SAAO/B,QAAC,qCAGnCgC,YAAW,KACP,MAAMC,gBAAiB,EAAAP,aAAAA,uBAAsBnB,KAAKG,OAC9CuB,gBACAA,eAAeJ,QAEnBC,eAAeI,SAAS,GACzB,IACP,CAMAZ,UAAAA,CAAWa,SACHA,UAAY5B,KAAK6B,cAIrB,EAAAC,QAAAA,SAAO9B,KAAKC,QAAQ8B,SAAS,SACjC,CAMAF,SAAAA,GACI,MAAqD,SAA9C7B,KAAKC,OAAO+B,aAAa,gBACpC,CAMAC,gBAAAA,CAAiBC,SACblC,KAAKC,OAAOkC,UAAYD,OAC5B,CAMAE,iBAAAA,CAAkBC,UACVA,SACArC,KAAKC,OAAOqC,aAAa,WAAY,YAErCtC,KAAKC,OAAOsC,gBAAgB,WAEpC,CAMAC,UAAAA,GACI,OAAOxC,KAAKD,OAChB,EACH0C,SAAA5C,eAAAA,eAOM,MAAM6C,kBAAqBC,WAC9B,MAAMC,gBAAkBC,SAAS3C,cAAcyC,UAC/C,OAAKC,gBAGE,IAAI/C,eAAe+C,iBAFf,IAE+B,EAC5CH,SAAAC,kBAAAA,kBAcAD,SAAArC,KANmBuC,WACjB,MAAMZ,SAAWW,kBAAkBC,UACnC,IAAKZ,SACD,MAAM,IAAIe,MAAM,qCAAqCH,YAEzDZ,SAAS3B,MAAM,CACjB"}