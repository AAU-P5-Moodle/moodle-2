{"version":3,"file":"permissionmanager.min.js","sources":["../src/permissionmanager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * @copyright  2015 Martin Mastny <mastnym@vscht.cz>\r\n * @since      3.0\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n /**\r\n  * @module core/permissionmanager\r\n  */\r\ndefine(['jquery', 'core/config', 'core/notification', 'core/templates', 'core/yui'],\r\n    function($, config, notification, templates, Y) {\r\n\r\n     /**\r\n      * Used CSS selectors\r\n      * @access private\r\n      */\r\n    var SELECTORS = {\r\n        ADDROLE: 'a.allowlink, a.prohibitlink',\r\n        REMOVEROLE: 'a.preventlink, a.unprohibitlink',\r\n        UNPROHIBIT: 'a.unprohibitlink'\r\n        };\r\n    var rolesloadedevent = $.Event('rolesloaded');\r\n    var contextid;\r\n    var contextname;\r\n    var adminurl;\r\n    var overideableroles;\r\n    var panel = null;\r\n\r\n    /**\r\n     * Load all possible roles, which could be assigned from server\r\n     *\r\n     * @access private\r\n     * @method loadOverideableRoles\r\n     */\r\n    var loadOverideableRoles = function() {\r\n        var params = {\r\n            contextid: contextid,\r\n            getroles: 1,\r\n            sesskey: config.sesskey\r\n        };\r\n\r\n        // Need to tell jQuery to expect JSON as the content type may not be correct (MDL-55041).\r\n        $.post(adminurl + 'roles/ajax.php', params, null, 'json')\r\n            .done(function(data) {\r\n              try {\r\n                  overideableroles = data;\r\n                  loadOverideableRoles = function() {\r\n                      $('body').trigger(rolesloadedevent);\r\n                  };\r\n                  loadOverideableRoles();\r\n              } catch (err) {\r\n                  notification.exception(err);\r\n              }\r\n            })\r\n            .fail(function(jqXHR, status, error) {\r\n                notification.exception(error);\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Perform the UI changes after server change\r\n     *\r\n     * @access private\r\n     * @method changePermissions\r\n     * @param {JQuery} row\r\n     * @param {int} roleid\r\n     * @param {string} action\r\n     */\r\n    var changePermissions = function(row, roleid, action) {\r\n        var params = {\r\n            contextid: contextid,\r\n            roleid: roleid,\r\n            sesskey: M.cfg.sesskey,\r\n            action: action,\r\n            capability: row.data('name')\r\n        };\r\n        $.post(adminurl + 'roles/ajax.php', params, null, 'json')\r\n        .done(function(data) {\r\n            var action = data;\r\n            try {\r\n                var templatedata = {rolename: overideableroles[roleid],\r\n                                    roleid: roleid,\r\n                                    adminurl: adminurl,\r\n                                    imageurl: M.util.image_url('t/delete', 'moodle')\r\n                                    };\r\n                switch (action) {\r\n                    case 'allow':\r\n                        templatedata.spanclass = 'allowed';\r\n                        templatedata.linkclass = 'preventlink';\r\n                        templatedata.action = 'prevent';\r\n                        templatedata.icon = 't/delete';\r\n                        templatedata.iconalt = M.util.get_string('deletexrole', 'core_role', overideableroles[roleid]);\r\n                        break;\r\n                    case 'prohibit':\r\n                        templatedata.spanclass = 'forbidden';\r\n                        templatedata.linkclass = 'unprohibitlink';\r\n                        templatedata.action = 'unprohibit';\r\n                        templatedata.icon = 't/delete';\r\n                        templatedata.iconalt = M.util.get_string('deletexrole', 'core_role', overideableroles[roleid]);\r\n                        break;\r\n                    case 'prevent':\r\n                        row.find('a[data-role-id=\"' + roleid + '\"]').first().closest('.allowed').remove();\r\n                        return;\r\n                    case 'unprohibit':\r\n                        row.find('a[data-role-id=\"' + roleid + '\"]').first().closest('.forbidden').remove();\r\n                        return;\r\n                    default:\r\n                        return;\r\n                }\r\n                templates.render('core/permissionmanager_role', templatedata)\r\n                .done(function(content) {\r\n                    if (action == 'allow') {\r\n                        $(content).insertBefore(row.find('.allowmore').first());\r\n                    } else if (action == 'prohibit') {\r\n                        $(content).insertBefore(row.find('.prohibitmore').first());\r\n                        // Remove allowed link\r\n                        var allowedLink = row.find('.allowedroles').first().find('a[data-role-id=\"' + roleid + '\"]');\r\n                        if (allowedLink) {\r\n                            allowedLink.first().closest('.allowed').remove();\r\n                        }\r\n                    }\r\n                    panel.hide();\r\n                })\r\n                .fail(notification.exception);\r\n            } catch (err) {\r\n                notification.exception(err);\r\n            }\r\n        })\r\n        .fail(function(jqXHR, status, error) {\r\n            notification.exception(error);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Prompts user for selecting a role which is permitted\r\n     *\r\n     * @access private\r\n     * @method handleAddRole\r\n     * @param {event} e\r\n     */\r\n    var handleAddRole = function(e) {\r\n        e.preventDefault();\r\n\r\n        var link = $(e.currentTarget);\r\n\r\n        // TODO: MDL-57778 Convert to core/modal.\r\n        $('body').one('rolesloaded', function() {\r\n            Y.use('moodle-core-notification-dialogue', function() {\r\n                var action = link.data('action');\r\n                var row = link.closest('tr.rolecap');\r\n                var confirmationDetails = {\r\n                    cap: row.data('humanname'),\r\n                    context: contextname\r\n                };\r\n                var message = M.util.get_string('role' + action + 'info', 'core_role', confirmationDetails);\r\n                if (panel === null) {\r\n                    panel = new M.core.dialogue({\r\n                        draggable: true,\r\n                        modal: true,\r\n                        closeButton: true,\r\n                        width: '450px'\r\n                    });\r\n                }\r\n                panel.set('headerContent', M.util.get_string('role' + action + 'header', 'core_role'));\r\n\r\n                var i, existingrolelinks;\r\n\r\n                var roles = [];\r\n                switch (action) {\r\n                    case 'allow':\r\n                        existingrolelinks = row.find(SELECTORS.REMOVEROLE);\r\n                        break;\r\n                    case 'prohibit':\r\n                        existingrolelinks = row.find(SELECTORS.UNPROHIBIT);\r\n                        break;\r\n                }\r\n                for (i in overideableroles) {\r\n                    var disabled = '';\r\n                    var disable = existingrolelinks.filter(\"[data-role-id='\" + i + \"']\").length;\r\n                    if (disable) {\r\n                        disabled = 'disabled';\r\n                    }\r\n                    var roledetails = {roleid: i, rolename: overideableroles[i], disabled: disabled};\r\n                    roles.push(roledetails);\r\n                }\r\n\r\n                templates.render('core/permissionmanager_panelcontent', {message: message, roles: roles})\r\n                .done(function(content) {\r\n                    panel.set('bodyContent', content);\r\n                    panel.show();\r\n                    $('div.role_buttons').on('click', 'button', function(e) {\r\n                        var roleid = $(e.currentTarget).data('role-id');\r\n                        changePermissions(row, roleid, action);\r\n                    });\r\n                })\r\n                .fail(notification.exception);\r\n\r\n            });\r\n        });\r\n        loadOverideableRoles();\r\n    };\r\n\r\n    /**\r\n     * Prompts user when removing permission\r\n     *\r\n     * @access private\r\n     * @method handleRemoveRole\r\n     * @param {event} e\r\n     */\r\n    var handleRemoveRole = function(e) {\r\n        e.preventDefault();\r\n        var link = $(e.currentTarget);\r\n        $('body').one('rolesloaded', function() {\r\n            var action = link.data('action');\r\n            var roleid = link.data('role-id');\r\n            var row = link.closest('tr.rolecap');\r\n            var questionDetails = {\r\n                role: overideableroles[roleid],\r\n                cap: row.data('humanname'),\r\n                context: contextname\r\n            };\r\n\r\n            notification.confirm(M.util.get_string('confirmunassigntitle', 'core_role'),\r\n                M.util.get_string('confirmrole' + action, 'core_role', questionDetails),\r\n                M.util.get_string('confirmunassignyes', 'core_role'),\r\n                M.util.get_string('confirmunassignno', 'core_role'),\r\n                function() {\r\n                   changePermissions(row, roleid, action);\r\n                }\r\n            );\r\n         });\r\n        loadOverideableRoles();\r\n    };\r\n\r\n    return /** @alias module:core/permissionmanager */ {\r\n        /**\r\n         * Initialize permissionmanager\r\n         * @access public\r\n         * @param {Object} args\r\n         */\r\n        initialize: function(args) {\r\n            contextid = args.contextid;\r\n            contextname = args.contextname;\r\n            adminurl = args.adminurl;\r\n            var body = $('body');\r\n            body.on('click', SELECTORS.ADDROLE, handleAddRole);\r\n            body.on('click', SELECTORS.REMOVEROLE, handleRemoveRole);\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","config","notification","templates","Y","contextid","contextname","adminurl","overideableroles","SELECTORS","rolesloadedevent","Event","panel","loadOverideableRoles","params","getroles","sesskey","post","done","data","trigger","err","exception","fail","jqXHR","status","error","changePermissions","row","roleid","action","M","cfg","capability","templatedata","rolename","imageurl","util","image_url","spanclass","linkclass","icon","iconalt","get_string","find","first","closest","remove","render","content","insertBefore","allowedLink","hide","handleAddRole","e","preventDefault","link","currentTarget","one","use","i","existingrolelinks","confirmationDetails","cap","context","message","core","dialogue","draggable","modal","closeButton","width","set","roles","disabled","filter","length","roledetails","push","show","on","handleRemoveRole","questionDetails","role","confirm","initialize","args","body"],"mappings":"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"}