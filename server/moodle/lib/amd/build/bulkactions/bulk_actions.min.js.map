{"version":3,"file":"bulk_actions.min.js","sources":["../../src/bulkactions/bulk_actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport Templates from 'core/templates';\r\nimport {get_string as getString} from 'core/str';\r\nimport {disableStickyFooter, enableStickyFooter} from 'core/sticky-footer';\r\n\r\n/**\r\n * Base class for defining a bulk actions area within a page.\r\n *\r\n * @module     core/bulkactions/bulk_actions\r\n * @copyright  2023 Mihail Geshoski <mihail@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/** @constant {Object} The object containing the relevant selectors. */\r\nconst Selectors = {\r\n    stickyFooterContainer: '#sticky-footer',\r\n    selectedItemsCountContainer: '[data-type=\"bulkactions\"] [data-for=\"bulkcount\"]',\r\n    cancelBulkActionModeElement: '[data-type=\"bulkactions\"] [data-action=\"bulkcancel\"]',\r\n    bulkModeContainer: '[data-type=\"bulkactions\"]',\r\n    bulkActionsContainer: '[data-type=\"bulkactions\"] [data-for=\"bulktools\"]'\r\n};\r\n\r\nexport default class BulkActions {\r\n\r\n    /** @property {string|null} initialStickyFooterContent The initial content of the sticky footer. */\r\n    initialStickyFooterContent = null;\r\n\r\n    /** @property {Array} selectedItems The array of selected item elements. */\r\n    selectedItems = [];\r\n\r\n    /** @property {boolean} isBulkActionsModeEnabled Whether the bulk actions mode is enabled. */\r\n    isBulkActionsModeEnabled = false;\r\n\r\n    /**\r\n     * The class constructor.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    constructor() {\r\n        if (!this.getStickyFooterContainer()) {\r\n            throw new Error('Sticky footer not found.');\r\n        }\r\n        // Store any pre-existing content in the sticky footer. When bulk actions mode is enabled, this content will be\r\n        // replaced with the bulk actions content and restored when bulk actions mode is disabled.\r\n        this.initialStickyFooterContent = this.getStickyFooterContainer().innerHTML;\r\n        // Register and handle the item select change event.\r\n        this.registerItemSelectChangeEvent(async() => {\r\n            this.selectedItems = this.getSelectedItems();\r\n            if (this.selectedItems.length > 0) { // At least one item is selected.\r\n                // If the bulk actions mode is already enabled only update the selected items count.\r\n                if (this.isBulkActionsModeEnabled) {\r\n                    await this.updateBulkItemSelection();\r\n                } else { // Otherwise, enable the bulk action mode.\r\n                    await this.enableBulkActionsMode();\r\n                }\r\n            } else { // No items are selected, disable the bulk action mode.\r\n                this.disableBulkActionsMode();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns the array of the relevant bulk action objects.\r\n     *\r\n     * @method getBulkActions\r\n     * @returns {Array}\r\n     */\r\n    getBulkActions() {\r\n        throw new Error(`getBulkActions() must be implemented in ${this.constructor.name}`);\r\n    }\r\n\r\n    /**\r\n     * Returns the array of selected items.\r\n     *\r\n     * @method getSelectedItems\r\n     * @returns {Array}\r\n     */\r\n    getSelectedItems() {\r\n        throw new Error(`getSelectedItems() must be implemented in ${this.constructor.name}`);\r\n    }\r\n\r\n    /**\r\n     * Adds the listener for the item select change event.\r\n     * The event handler function that is passed as a parameter should be called right after the event is triggered.\r\n     *\r\n     * @method registerItemSelectChangeEvent\r\n     * @param {function} eventHandler The event handler function.\r\n     * @returns {void}\r\n     */\r\n    registerItemSelectChangeEvent(eventHandler) {\r\n        throw new Error(`registerItemSelectChangeEvent(${eventHandler}) must be implemented in ${this.constructor.name}`);\r\n    }\r\n\r\n    /**\r\n     * Returns the sticky footer container.\r\n     *\r\n     * @method getStickyFooterContainer\r\n     * @returns {HTMLElement}\r\n     */\r\n    getStickyFooterContainer() {\r\n        return document.querySelector(Selectors.stickyFooterContainer);\r\n    }\r\n\r\n    /**\r\n     * Enables the bulk action mode.\r\n     *\r\n     * @method enableBulkActionsMode\r\n     * @returns {Promise}\r\n     */\r\n    async enableBulkActionsMode() {\r\n        // Make sure that the sticky footer is enabled.\r\n        enableStickyFooter();\r\n        // Render the bulk actions content in the sticky footer container.\r\n        this.getStickyFooterContainer().innerHTML = await this.renderBulkActions();\r\n        const bulkModeContainer = this.getStickyFooterContainer().querySelector(Selectors.bulkModeContainer);\r\n        const bulkActionsContainer = bulkModeContainer.querySelector(Selectors.bulkActionsContainer);\r\n        this.getBulkActions().forEach((bulkAction) => {\r\n            // Register the listener events for each available bulk action.\r\n            bulkAction.registerListenerEvents(bulkActionsContainer);\r\n            // Set the selected items for each available bulk action.\r\n            bulkAction.setSelectedItems(this.selectedItems);\r\n        });\r\n        // Register the click listener event for the cancel bulk mode button.\r\n        bulkModeContainer.addEventListener('click', (e) => {\r\n            if (e.target.closest(Selectors.cancelBulkActionModeElement)) {\r\n                // Uncheck all selected items.\r\n                this.selectedItems.forEach((item) => {\r\n                    item.checked = false;\r\n                });\r\n                // Disable the bulk action mode.\r\n                this.disableBulkActionsMode();\r\n            }\r\n        });\r\n        this.isBulkActionsModeEnabled = true;\r\n    }\r\n\r\n    /**\r\n     * Disables the bulk action mode.\r\n     *\r\n     * @method disableBulkActionsMode\r\n     * @returns {void}\r\n     */\r\n    disableBulkActionsMode() {\r\n        // If there was any previous (initial) content in the sticky footer, restore it.\r\n        if (this.initialStickyFooterContent.length > 0) {\r\n            this.getStickyFooterContainer().innerHTML = this.initialStickyFooterContent;\r\n        } else { // No previous content to restore, disable the sticky footer.\r\n            disableStickyFooter();\r\n        }\r\n        this.isBulkActionsModeEnabled = false;\r\n    }\r\n\r\n    /**\r\n     * Renders the bulk actions content.\r\n     *\r\n     * @method renderBulkActions\r\n     * @returns {Promise}\r\n     */\r\n    async renderBulkActions() {\r\n        let data = {\r\n            'bulkselectioncount': this.selectedItems.length,\r\n            'actions': []\r\n        };\r\n        // Render the bulk actions trigger element for each available bulk action.\r\n        await Promise.all(this.getBulkActions().map(async(bulkAction) => {\r\n            data.actions.push({'actiontrigger': await bulkAction.renderBulkActionTrigger()});\r\n        }));\r\n\r\n        return Templates.render('core/bulkactions/bulk_actions', data);\r\n    }\r\n\r\n    /**\r\n     * Updates the selected items count in the bulk actions content.\r\n     *\r\n     * @method updateBulkItemSelection\r\n     * @returns {void}\r\n     */\r\n    async updateBulkItemSelection() {\r\n        const bulkSelection = await getString('bulkselection', 'core', this.selectedItems.length);\r\n        document.querySelector(Selectors.selectedItemsCountContainer).innerHTML = bulkSelection;\r\n    }\r\n}\r\n"],"names":["e","_templates","__esModule","default","Selectors","_exports","initialStickyFooterContent","selectedItems","isBulkActionsModeEnabled","constructor","this","getStickyFooterContainer","Error","innerHTML","registerItemSelectChangeEvent","async","getSelectedItems","length","updateBulkItemSelection","enableBulkActionsMode","disableBulkActionsMode","getBulkActions","name","eventHandler","document","querySelector","enableStickyFooter","renderBulkActions","bulkModeContainer","bulkActionsContainer","forEach","bulkAction","registerListenerEvents","setSelectedItems","addEventListener","target","closest","item","checked","disableStickyFooter","data","bulkselectioncount","actions","Promise","all","map","push","actiontrigger","renderBulkActionTrigger","Templates","render","bulkSelection","getString"],"mappings":"sJAeuC,IAAAA;;;;;;;qFAAvCC,YAAuCD,EAAvCC,aAAuCD,EAAAE,WAAAF,EAAAG,CAAAA,QAAAH,GAavC,MAAMI,gCACqB,iBADrBA,sCAE2B,mDAF3BA,sCAG2B,uDAH3BA,4BAIiB,4BAJjBA,+BAKoB,mDAkKzB,OAAAC,SAAAF,QA/Jc,MAGXG,2BAA6B,KAG7BC,cAAgB,GAGhBC,0BAA2B,EAO3BC,WAAAA,GACI,IAAKC,KAAKC,2BACN,MAAM,IAAIC,MAAM,4BAIpBF,KAAKJ,2BAA6BI,KAAKC,2BAA2BE,UAElEH,KAAKI,+BAA8BC,UAC/BL,KAAKH,cAAgBG,KAAKM,mBACtBN,KAAKH,cAAcU,OAAS,EAExBP,KAAKF,+BACCE,KAAKQ,gCAELR,KAAKS,wBAGfT,KAAKU,wBACT,GAER,CAQAC,cAAAA,GACI,MAAM,IAAIT,MAAM,2CAA2CF,KAAKD,YAAYa,OAChF,CAQAN,gBAAAA,GACI,MAAM,IAAIJ,MAAM,6CAA6CF,KAAKD,YAAYa,OAClF,CAUAR,6BAAAA,CAA8BS,cAC1B,MAAM,IAAIX,MAAM,iCAAiCW,wCAAwCb,KAAKD,YAAYa,OAC9G,CAQAX,wBAAAA,GACI,OAAOa,SAASC,cAAcrB,gCAClC,CAQA,2BAAMe,IAEF,EAAAO,cAAAA,sBAEAhB,KAAKC,2BAA2BE,gBAAkBH,KAAKiB,oBACvD,MAAMC,kBAAoBlB,KAAKC,2BAA2Bc,cAAcrB,6BAClEyB,qBAAuBD,kBAAkBH,cAAcrB,gCAC7DM,KAAKW,iBAAiBS,SAASC,aAE3BA,WAAWC,uBAAuBH,sBAElCE,WAAWE,iBAAiBvB,KAAKH,cAAc,IAGnDqB,kBAAkBM,iBAAiB,SAAUlC,IACrCA,EAAEmC,OAAOC,QAAQhC,yCAEjBM,KAAKH,cAAcuB,SAASO,OACxBA,KAAKC,SAAU,CAAK,IAGxB5B,KAAKU,yBACT,IAEJV,KAAKF,0BAA2B,CACpC,CAQAY,sBAAAA,GAEQV,KAAKJ,2BAA2BW,OAAS,EACzCP,KAAKC,2BAA2BE,UAAYH,KAAKJ,4BAEjD,EAAAiC,cAAAA,uBAEJ7B,KAAKF,0BAA2B,CACpC,CAQA,uBAAMmB,GACF,IAAIa,KAAO,CACPC,mBAAsB/B,KAAKH,cAAcU,OACzCyB,QAAW,IAOf,aAJMC,QAAQC,IAAIlC,KAAKW,iBAAiBwB,KAAI9B,mBACxCyB,KAAKE,QAAQI,KAAK,CAACC,oBAAuBhB,WAAWiB,2BAA2B,KAG7EC,mBAAUC,OAAO,gCAAiCV,KAC7D,CAQA,6BAAMtB,GACF,MAAMiC,oBAAsB,EAAAC,iBAAU,gBAAiB,OAAQ1C,KAAKH,cAAcU,QAClFO,SAASC,cAAcrB,uCAAuCS,UAAYsC,aAC9E,GACH9C,SAAAF,OAAA"}