{"version":3,"file":"fragment.min.js","sources":["../src/fragment.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A way to call HTML fragments to be inserted as required via JavaScript.\r\n *\r\n * @module     core/fragment\r\n * @copyright  2016 Adrian Greeve <adrian@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      3.1\r\n */\r\ndefine(['jquery', 'core/ajax'], function($, ajax) {\r\n\r\n    /**\r\n     * Loads an HTML fragment through a callback.\r\n     *\r\n     * @method loadFragment\r\n     * @param {string} component Component where callback is located.\r\n     * @param {string} callback Callback function name.\r\n     * @param {integer} contextid Context ID of the fragment.\r\n     * @param {object} params Parameters for the callback.\r\n     * @return {Promise} JQuery promise object resolved when the fragment has been loaded.\r\n     */\r\n    var loadFragment = function(component, callback, contextid, params) {\r\n        // Change params into required webservice format.\r\n        var formattedparams = [];\r\n        for (var index in params) {\r\n            formattedparams.push({\r\n                name: index,\r\n                value: params[index]\r\n            });\r\n        }\r\n\r\n        return ajax.call([{\r\n            methodname: 'core_get_fragment',\r\n            args: {\r\n                component: component,\r\n                callback: callback,\r\n                contextid: contextid,\r\n                args: formattedparams\r\n            }\r\n        }])[0];\r\n    };\r\n\r\n    /**\r\n     * Converts the JS that was received from collecting JS requirements on the $PAGE so it can be added to the existing page\r\n     *\r\n     * @param {string} js\r\n     * @return {string}\r\n     */\r\n    var processCollectedJavascript = function(js) {\r\n        var jsNodes = $(js);\r\n        var allScript = '';\r\n        jsNodes.each(function(index, scriptNode) {\r\n            scriptNode = $(scriptNode);\r\n            var tagName = scriptNode.prop('tagName');\r\n            if (tagName && (tagName.toLowerCase() == 'script')) {\r\n                if (scriptNode.attr('src')) {\r\n                    // We only reload the script if it was not loaded already.\r\n                    var exists = false;\r\n                    $('script').each(function(index, s) {\r\n                        if ($(s).attr('src') == scriptNode.attr('src')) {\r\n                            exists = true;\r\n                        }\r\n                        return !exists;\r\n                    });\r\n                    if (!exists) {\r\n                        allScript += ' { ';\r\n                        allScript += ' node = document.createElement(\"script\"); ';\r\n                        allScript += ' node.type = \"text/javascript\"; ';\r\n                        allScript += ' node.src = decodeURI(\"' + encodeURI(scriptNode.attr('src')) + '\"); ';\r\n                        allScript += ' document.getElementsByTagName(\"head\")[0].appendChild(node); ';\r\n                        allScript += ' } ';\r\n                    }\r\n                } else {\r\n                    allScript += ' ' + scriptNode.text();\r\n                }\r\n            }\r\n        });\r\n        return allScript;\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * Appends HTML and JavaScript fragments to specified nodes.\r\n         * Callbacks called by this AMD module are responsible for doing the appropriate security checks\r\n         * to access the information that is returned. This only does minimal validation on the context.\r\n         *\r\n         * @method fragmentAppend\r\n         * @param {string} component Component where callback is located.\r\n         * @param {string} callback Callback function name.\r\n         * @param {integer} contextid Context ID of the fragment.\r\n         * @param {object} params Parameters for the callback.\r\n         * @return {Deferred} new promise that is resolved with the html and js.\r\n         */\r\n        loadFragment: function(component, callback, contextid, params) {\r\n            var promise = $.Deferred();\r\n            loadFragment(component, callback, contextid, params).then(function(data) {\r\n                promise.resolve(data.html, processCollectedJavascript(data.javascript));\r\n            }).fail(function(ex) {\r\n                promise.reject(ex);\r\n            });\r\n            return promise.promise();\r\n        },\r\n\r\n        /**\r\n         * Converts the JS that was received from collecting JS requirements on the $PAGE so it can be added to the existing page\r\n         *\r\n         * @param {string} js\r\n         * @return {string}\r\n         */\r\n        processCollectedJavascript: function(js) {\r\n            return processCollectedJavascript(js);\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","ajax","processCollectedJavascript","js","jsNodes","allScript","each","index","scriptNode","tagName","prop","toLowerCase","attr","exists","s","encodeURI","text","loadFragment","component","callback","contextid","params","promise","Deferred","formattedparams","push","name","value","call","methodname","args","then","data","resolve","html","javascript","fail","ex","reject"],"mappings":";;;;;;;;AAuBAA,OAAM,gBAAC,CAAC,SAAU,cAAc,SAASC,EAAGC,MAYxC,IA2BIC,2BAA6B,SAASC,IACtC,IAAIC,QAAUJ,EAAEG,IACZE,UAAY,GA2BhB,OA1BAD,QAAQE,MAAK,SAASC,MAAOC,YAEzB,IAAIC,SADJD,WAAaR,EAAEQ,aACUE,KAAK,WAC9B,GAAID,SAAqC,UAAzBA,QAAQE,cACpB,GAAIH,WAAWI,KAAK,OAAQ,CAExB,IAAIC,QAAS,EACbb,EAAE,UAAUM,MAAK,SAASC,MAAOO,GAI7B,OAHId,EAAEc,GAAGF,KAAK,QAAUJ,WAAWI,KAAK,SACpCC,QAAS,IAELA,MACZ,IACKA,SACDR,WAAa,MACbA,WAAa,6CACbA,WAAa,mCACbA,WAAa,0BAA4BU,UAAUP,WAAWI,KAAK,QAAU,OAC7EP,WAAa,gEACbA,WAAa,MAErB,MACIA,WAAa,IAAMG,WAAWQ,MAG1C,IACOX,WAGX,MAAO,CAaHY,aAAc,SAASC,UAAWC,SAAUC,UAAWC,QACnD,IAAIC,QAAUtB,EAAEuB,WAMhB,OA/EW,SAASL,UAAWC,SAAUC,UAAWC,QAExD,IAAIG,gBAAkB,GACtB,IAAK,IAAIjB,SAASc,OACdG,gBAAgBC,KAAK,CACjBC,KAAMnB,MACNoB,MAAON,OAAOd,SAItB,OAAON,KAAK2B,KAAK,CAAC,CACdC,WAAY,oBACZC,KAAM,CACFZ,UAAWA,UACXC,SAAUA,SACVC,UAAWA,UACXU,KAAMN,oBAEV,GAwDAP,CAAaC,UAAWC,SAAUC,UAAWC,QAAQU,MAAK,SAASC,MAC/DV,QAAQW,QAAQD,KAAKE,KAAMhC,2BAA2B8B,KAAKG,YAC/D,IAAGC,MAAK,SAASC,IACbf,QAAQgB,OAAOD,GACnB,IACOf,QAAQA,SAClB,EAQDpB,2BAA4B,SAASC,IACjC,OAAOD,2BAA2BC,GACtC,EAER"}