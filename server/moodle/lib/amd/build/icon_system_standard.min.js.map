{"version":3,"file":"icon_system_standard.min.js","sources":["../src/icon_system_standard.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * The Standard icon system.\r\n *\r\n * @module core/icon_system_standard\r\n * @copyright  2017 Damyon Wiese\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport IconSystem from './icon_system';\r\nimport * as CoreUrl from './url';\r\nimport * as Mustache from './mustache';\r\n\r\n/**\r\n * The Standard icon system.\r\n */\r\nexport default class IconSystemStandard extends IconSystem {\r\n\r\n    /**\r\n     * Render an icon.\r\n     *\r\n     * @param {string} key\r\n     * @param {string} component\r\n     * @param {string} title\r\n     * @param {string} template\r\n     * @return {string}\r\n     */\r\n    renderIcon(key, component, title, template) {\r\n        const url = CoreUrl.imageUrl(key, component);\r\n\r\n        const templatecontext = {\r\n            attributes: [\r\n                {name: 'src', value: url},\r\n                {name: 'alt', value: title},\r\n                {name: 'title', value: title},\r\n            ]\r\n        };\r\n        if (typeof title === \"undefined\" || title == \"\") {\r\n            templatecontext.attributes.push({name: 'aria-hidden', value: 'true'});\r\n        }\r\n\r\n        return Mustache.render(template, templatecontext).trim();\r\n    }\r\n\r\n    /**\r\n     * Get the name of the template to pre-cache for this icon system.\r\n     *\r\n     * @return {string}\r\n     */\r\n    getTemplateName() {\r\n        return 'core/pix_icon';\r\n    }\r\n}\r\n"],"names":["e","_getRequireWildcardCache","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_icon_system","CoreUrl","Mustache","IconSystemStandard","IconSystem","renderIcon","key","component","title","template","templatecontext","attributes","name","value","imageUrl","push","render","trim","getTemplateName","_exports"],"mappings":"sIAyBuC,IAAAA;;;;;;;KAAA,SAAAC,yBAAAD,GAAA,GAAA,mBAAAE,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAD,yBAAA,SAAAD,GAAAA,OAAAA,EAAAI,EAAAD,IAAAH,EAAA,CAAA,SAAAK,wBAAAL,EAAAG,GAAAA,IAAAA,GAAAH,GAAAA,EAAAM,WAAAN,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAO,MAAAA,CAAAA,QAAAP,GAAAI,IAAAA,EAAAH,yBAAAE,GAAA,GAAAC,GAAAA,EAAAI,IAAAR,GAAA,OAAAI,EAAAK,IAAAT,GAAA,IAAAU,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAhB,EAAAgB,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAlB,EAAAgB,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAf,EAAAgB,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAhB,EAAAgB,GAAAN,OAAAA,EAAAH,QAAAP,EAAAI,GAAAA,EAAAgB,IAAApB,EAAAU,GAAAA,CAAA,iFAFvCW,cAEuCrB,EAFvCqB,eAEuCrB,EAAAM,WAAAN,EAAAO,CAAAA,QAAAP,GADvCsB,QAAAjB,wBAAAiB,SACAC,SAAAlB,wBAAAkB,UAKe,MAAMC,2BAA2BC,aAAAA,QAW5CC,UAAAA,CAAWC,IAAKC,UAAWC,MAAOC,UAC9B,MAEMC,gBAAkB,CACpBC,WAAY,CACR,CAACC,KAAM,MAAOC,MAJVZ,QAAQa,SAASR,IAAKC,YAK1B,CAACK,KAAM,MAAOC,MAAOL,OACrB,CAACI,KAAM,QAASC,MAAOL,SAO/B,YAJqB,IAAVA,OAAkC,IAATA,OAChCE,gBAAgBC,WAAWI,KAAK,CAACH,KAAM,cAAeC,MAAO,SAG1DX,SAASc,OAAOP,SAAUC,iBAAiBO,MACtD,CAOAC,eAAAA,GACI,MAAO,eACX,EACH,OAAAC,SAAAjC,QAAAiB,mBAAAgB,SAAAjC,OAAA"}