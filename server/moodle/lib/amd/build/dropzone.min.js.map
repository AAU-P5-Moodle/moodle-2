{"version":3,"file":"dropzone.min.js","sources":["../src/dropzone.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * JavaScript to handle dropzone.\r\n *\r\n * @module     core/dropzone\r\n * @copyright  2024 Huong Nguyen <huongnv13@gmail.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      4.4\r\n */\r\n\r\nimport {getString} from 'core/str';\r\nimport Log from 'core/log';\r\nimport {prefetchString} from 'core/prefetch';\r\nimport Templates from 'core/templates';\r\n\r\n/**\r\n * A dropzone.\r\n *\r\n * @class core/dropzone\r\n */\r\nconst DropZone = class {\r\n\r\n    /**\r\n     * The element to render the dropzone.\r\n     * @type {Element}\r\n     */\r\n    dropZoneElement;\r\n\r\n    /**\r\n     * The file types that are allowed to be uploaded.\r\n     * @type {String}\r\n     */\r\n    fileTypes;\r\n\r\n    /**\r\n     * The function to call when a file is dropped.\r\n     * @type {CallableFunction}\r\n     */\r\n    callback;\r\n\r\n    /**\r\n     * The label to display in the dropzone.\r\n     * @type {string}\r\n     */\r\n    dropZoneLabel = '';\r\n\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param {Element} dropZoneElement The element to render the dropzone.\r\n     * @param {String} fileTypes The file types that are allowed to be uploaded. Example: image/*\r\n     * @param {CallableFunction} callback The function to call when a file is dropped.\r\n     */\r\n    constructor(dropZoneElement, fileTypes, callback) {\r\n        prefetchString('core', 'addfilesdrop');\r\n        this.dropZoneElement = dropZoneElement;\r\n        this.fileTypes = fileTypes;\r\n        this.callback = callback;\r\n    }\r\n\r\n    /**\r\n     * Initialise the dropzone.\r\n     *\r\n     * @returns {DropZone}\r\n     */\r\n    init() {\r\n        this.dropZoneElement.addEventListener('dragover', (e) => {\r\n            const dropZone = this.getDropZoneFromEvent(e);\r\n            if (!dropZone) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            dropZone.classList.add('dragover');\r\n        });\r\n        this.dropZoneElement.addEventListener('dragleave', (e) => {\r\n            const dropZone = this.getDropZoneFromEvent(e);\r\n            if (!dropZone) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            dropZone.classList.remove('dragover');\r\n        });\r\n        this.dropZoneElement.addEventListener('drop', (e) => {\r\n            const dropZone = this.getDropZoneFromEvent(e);\r\n            if (!dropZone) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            dropZone.classList.remove('dragover');\r\n            this.callback(e.dataTransfer.files);\r\n        });\r\n        this.dropZoneElement.addEventListener('click', (e) => {\r\n            const dropZoneContainer = this.getDropZoneContainerFromEvent(e);\r\n            if (!dropZoneContainer) {\r\n                return;\r\n            }\r\n            this.getFileElementFromEvent(e).click();\r\n        });\r\n        this.dropZoneElement.addEventListener('click', (e) => {\r\n            const dropZoneLabel = e.target.closest('.dropzone-sr-only-focusable');\r\n            if (!dropZoneLabel) {\r\n                return;\r\n            }\r\n            this.getFileElementFromEvent(e).click();\r\n        });\r\n        this.dropZoneElement.addEventListener('change', (e) => {\r\n            const fileInput = this.getFileElementFromEvent(e);\r\n            if (fileInput) {\r\n                e.preventDefault();\r\n                this.callback(fileInput.files);\r\n            }\r\n        });\r\n        this.renderDropZone(this.dropZoneElement, this.fileTypes);\r\n        Log.info('Dropzone has been initialized!');\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get the dropzone.\r\n     *\r\n     * @param {Event} e The event.\r\n     * @returns {HTMLElement|bool}\r\n     */\r\n    getDropZoneFromEvent(e) {\r\n        return e.target.closest('.dropzone');\r\n    }\r\n\r\n    /**\r\n     * Get the dropzone container.\r\n     *\r\n     * @param {Event} e The event.\r\n     * @returns {HTMLElement|bool}\r\n     */\r\n    getDropZoneContainerFromEvent(e) {\r\n        return e.target.closest('.dropzone-container');\r\n    }\r\n\r\n    /**\r\n     * Get the file element.\r\n     *\r\n     * @param {Event} e The event.\r\n     * @returns {HTMLElement|bool}\r\n     */\r\n    getFileElementFromEvent(e) {\r\n        return e.target.closest('.dropzone-container').querySelector('.drop-zone-fileinput');\r\n    }\r\n\r\n    /**\r\n     * Set the label to display in the dropzone.\r\n     *\r\n     * @param {String} label The label to display in the dropzone.\r\n     */\r\n    setLabel(label) {\r\n        this.dropZoneLabel = label;\r\n    }\r\n\r\n    /**\r\n     * Get the label to display in the dropzone.\r\n     *\r\n     * @return {String} The label to display in the dropzone.\r\n     */\r\n    getLabel() {\r\n        return this.dropZoneLabel;\r\n    }\r\n\r\n    /**\r\n     * Render the dropzone.\r\n     *\r\n     * @param {Element} dropZoneElement The element to render the dropzone.\r\n     * @param {String} fileTypes The file types that are allowed to be uploaded.\r\n     * @returns {Promise}\r\n     */\r\n    async renderDropZone(dropZoneElement, fileTypes) {\r\n        if (!this.getLabel()) {\r\n            // Use the default one.\r\n            this.setLabel(await getString('addfilesdrop', 'core'));\r\n        }\r\n        const dropZoneLabel = this.getLabel();\r\n        dropZoneElement.innerHTML = await Templates.render('core/dropzone', {\r\n            label: dropZoneLabel,\r\n            filetypes: fileTypes,\r\n        });\r\n    }\r\n};\r\n\r\nexport default DropZone;\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_log","_templates","_exports","dropZoneElement","fileTypes","callback","dropZoneLabel","constructor","prefetchString","this","init","addEventListener","dropZone","getDropZoneFromEvent","preventDefault","classList","add","remove","dataTransfer","files","getDropZoneContainerFromEvent","getFileElementFromEvent","click","target","closest","fileInput","renderDropZone","Log","info","querySelector","setLabel","label","getLabel","getString","innerHTML","Templates","render","filetypes"],"mappings":"6IA2BuC,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;;qFAFvCG,KAAAJ,uBAAAI,MAEAC,WAAAL,uBAAAK,YA0KEC,SAAAH,QAnKe,MAMbI,gBAMAC,UAMAC,SAMAC,cAAgB,GAShBC,WAAAA,CAAYJ,gBAAiBC,UAAWC,WACpC,EAAAG,UAAcA,gBAAC,OAAQ,gBACvBC,KAAKN,gBAAkBA,gBACvBM,KAAKL,UAAYA,UACjBK,KAAKJ,SAAWA,QACpB,CAOAK,IAAAA,GAiDI,OAhDAD,KAAKN,gBAAgBQ,iBAAiB,YAAad,IAC/C,MAAMe,SAAWH,KAAKI,qBAAqBhB,GACtCe,WAGLf,EAAEiB,iBACFF,SAASG,UAAUC,IAAI,YAAW,IAEtCP,KAAKN,gBAAgBQ,iBAAiB,aAAcd,IAChD,MAAMe,SAAWH,KAAKI,qBAAqBhB,GACtCe,WAGLf,EAAEiB,iBACFF,SAASG,UAAUE,OAAO,YAAW,IAEzCR,KAAKN,gBAAgBQ,iBAAiB,QAASd,IAC3C,MAAMe,SAAWH,KAAKI,qBAAqBhB,GACtCe,WAGLf,EAAEiB,iBACFF,SAASG,UAAUE,OAAO,YAC1BR,KAAKJ,SAASR,EAAEqB,aAAaC,OAAM,IAEvCV,KAAKN,gBAAgBQ,iBAAiB,SAAUd,IAClBY,KAAKW,8BAA8BvB,IAI7DY,KAAKY,wBAAwBxB,GAAGyB,OAAO,IAE3Cb,KAAKN,gBAAgBQ,iBAAiB,SAAUd,IACtBA,EAAE0B,OAAOC,QAAQ,gCAIvCf,KAAKY,wBAAwBxB,GAAGyB,OAAO,IAE3Cb,KAAKN,gBAAgBQ,iBAAiB,UAAWd,IAC7C,MAAM4B,UAAYhB,KAAKY,wBAAwBxB,GAC3C4B,YACA5B,EAAEiB,iBACFL,KAAKJ,SAASoB,UAAUN,OAC5B,IAEJV,KAAKiB,eAAejB,KAAKN,gBAAiBM,KAAKL,WAC/CuB,KAAAA,QAAIC,KAAK,kCACFnB,IACX,CAQAI,oBAAAA,CAAqBhB,GACjB,OAAOA,EAAE0B,OAAOC,QAAQ,YAC5B,CAQAJ,6BAAAA,CAA8BvB,GAC1B,OAAOA,EAAE0B,OAAOC,QAAQ,sBAC5B,CAQAH,uBAAAA,CAAwBxB,GACpB,OAAOA,EAAE0B,OAAOC,QAAQ,uBAAuBK,cAAc,uBACjE,CAOAC,QAAAA,CAASC,OACLtB,KAAKH,cAAgByB,KACzB,CAOAC,QAAAA,GACI,OAAOvB,KAAKH,aAChB,CASA,oBAAMoB,CAAevB,gBAAiBC,WAC7BK,KAAKuB,YAENvB,KAAKqB,eAAe,EAAAG,KAASA,WAAC,eAAgB,SAElD,MAAM3B,cAAgBG,KAAKuB,WAC3B7B,gBAAgB+B,gBAAkBC,mBAAUC,OAAO,gBAAiB,CAChEL,MAAOzB,cACP+B,UAAWjC,WAEnB,GAGmB,OAAAF,SAAAH,OAAA"}