{"version":3,"file":"notification.min.js","sources":["../src/notification.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Notification manager for in-page notifications in Moodle.\r\n *\r\n * @module     core/notification\r\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      2.9\r\n */\r\nimport Pending from 'core/pending';\r\nimport Log from 'core/log';\r\n\r\nlet currentContextId = M.cfg.contextid;\r\n\r\nconst notificationTypes = {\r\n    success:  'core/notification_success',\r\n    info:     'core/notification_info',\r\n    warning:  'core/notification_warning',\r\n    error:    'core/notification_error',\r\n};\r\n\r\nconst notificationRegionId = 'user-notifications';\r\n\r\nconst Selectors = {\r\n    notificationRegion: `#${notificationRegionId}`,\r\n    fallbackRegionParents: [\r\n        '#region-main',\r\n        '[role=\"main\"]',\r\n        'body',\r\n    ],\r\n};\r\n\r\nconst setupTargetRegion = () => {\r\n    let targetRegion = getNotificationRegion();\r\n    if (targetRegion) {\r\n        return false;\r\n    }\r\n\r\n    const newRegion = document.createElement('span');\r\n    newRegion.id = notificationRegionId;\r\n\r\n    return Selectors.fallbackRegionParents.some(selector => {\r\n        const targetRegion = document.querySelector(selector);\r\n\r\n        if (targetRegion) {\r\n            targetRegion.prepend(newRegion);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    });\r\n};\r\n\r\n/**\r\n * A notification object displayed to a user.\r\n *\r\n * @typedef  {Object} Notification\r\n * @property {string} message       The body of the notification\r\n * @property {string} type          The type of notification to add (error, warning, info, success).\r\n * @property {Boolean} closebutton  Whether to show the close button.\r\n * @property {Boolean} announce     Whether to announce to screen readers.\r\n */\r\n\r\n/**\r\n * Poll the server for any new notifications.\r\n *\r\n * @method\r\n * @returns {Promise}\r\n */\r\nexport const fetchNotifications = async() => {\r\n    const Ajax = await import('core/ajax');\r\n\r\n    return Ajax.call([{\r\n        methodname: 'core_fetch_notifications',\r\n        args: {\r\n            contextid: currentContextId\r\n        }\r\n    }])[0]\r\n    .then(addNotifications);\r\n};\r\n\r\n/**\r\n * Add all of the supplied notifications.\r\n *\r\n * @method\r\n * @param {Notification[]} notifications The list of notificaitons\r\n * @returns {Promise}\r\n */\r\nconst addNotifications = notifications => {\r\n    if (!notifications.length) {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    const pendingPromise = new Pending('core/notification:addNotifications');\r\n    notifications.forEach(notification => renderNotification(notification.template, notification.variables));\r\n\r\n    return pendingPromise.resolve();\r\n};\r\n\r\n/**\r\n * Add a notification to the page.\r\n *\r\n * Note: This does not cause the notification to be added to the session.\r\n *\r\n * @method\r\n * @param {Notification} notification The notification to add.\r\n * @returns {Promise}\r\n */\r\nexport const addNotification = notification => {\r\n    const pendingPromise = new Pending('core/notification:addNotifications');\r\n\r\n    let template = notificationTypes.error;\r\n\r\n    notification = {\r\n        closebutton:    true,\r\n        announce:       true,\r\n        type:           'error',\r\n        ...notification,\r\n    };\r\n\r\n    if (notification.template) {\r\n        template = notification.template;\r\n        delete notification.template;\r\n    } else if (notification.type) {\r\n        if (typeof notificationTypes[notification.type] !== 'undefined') {\r\n            template = notificationTypes[notification.type];\r\n        }\r\n        delete notification.type;\r\n    }\r\n\r\n    return renderNotification(template, notification)\r\n    .then(pendingPromise.resolve);\r\n};\r\n\r\nconst renderNotification = async(template, variables) => {\r\n    if (typeof variables.message === 'undefined' || !variables.message) {\r\n        Log.debug('Notification received without content. Skipping.');\r\n        return;\r\n    }\r\n\r\n    const pendingPromise = new Pending('core/notification:renderNotification');\r\n    const Templates = await import('core/templates');\r\n\r\n    Templates.renderForPromise(template, variables)\r\n    .then(({html, js = ''}) => {\r\n        Templates.prependNodeContents(getNotificationRegion(), html, js);\r\n\r\n        return;\r\n    })\r\n    .then(pendingPromise.resolve)\r\n    .catch(exception);\r\n};\r\n\r\nconst getNotificationRegion = () => document.querySelector(Selectors.notificationRegion);\r\n\r\n/**\r\n * Alert dialogue.\r\n *\r\n * @method\r\n * @param {String|Promise} title\r\n * @param {String|Promise} message\r\n * @param {String|Promise} cancelText\r\n * @returns {Promise}\r\n */\r\nexport const alert = async(title, message, cancelText) => {\r\n    var pendingPromise = new Pending('core/notification:alert');\r\n\r\n    const AlertModal = await import('core/local/modal/alert');\r\n\r\n    const modal = await AlertModal.create({\r\n        body: message,\r\n        title: title,\r\n        buttons: {\r\n            cancel: cancelText,\r\n        },\r\n        removeOnClose: true,\r\n        show: true,\r\n    });\r\n    pendingPromise.resolve();\r\n    return modal;\r\n};\r\n\r\n/**\r\n * The confirm has now been replaced with a save and cancel dialogue.\r\n *\r\n * @method\r\n * @param {String|Promise} title\r\n * @param {String|Promise} question\r\n * @param {String|Promise} saveLabel\r\n * @param {String|Promise} noLabel\r\n * @param {String|Promise} saveCallback\r\n * @param {String|Promise} cancelCallback\r\n * @returns {Promise}\r\n */\r\nexport const confirm = (title, question, saveLabel, noLabel, saveCallback, cancelCallback) =>\r\n        saveCancel(title, question, saveLabel, saveCallback, cancelCallback);\r\n\r\n/**\r\n * The Save and Cancel dialogue helper.\r\n *\r\n * @method\r\n * @param {String|Promise} title\r\n * @param {String|Promise} question\r\n * @param {String|Promise} saveLabel\r\n * @param {String|Promise} saveCallback\r\n * @param {String|Promise} cancelCallback\r\n * @param {Object} options\r\n * @param {HTMLElement} [options.triggerElement=null] The element that triggered the modal (will receive the focus after hidden)\r\n * @returns {Promise}\r\n */\r\nexport const saveCancel = async(title, question, saveLabel, saveCallback, cancelCallback, {\r\n    triggerElement = null,\r\n} = {}) => {\r\n    const pendingPromise = new Pending('core/notification:confirm');\r\n\r\n    const [\r\n        SaveCancelModal,\r\n        ModalEvents,\r\n    ] = await Promise.all([\r\n        import('core/modal_save_cancel'),\r\n        import('core/modal_events'),\r\n    ]);\r\n\r\n    const modal = await SaveCancelModal.create({\r\n        title,\r\n        body: question,\r\n        buttons: {\r\n            // Note: The noLabel is no longer supported.\r\n            save: saveLabel,\r\n        },\r\n        removeOnClose: true,\r\n        show: true,\r\n    });\r\n    modal.getRoot().on(ModalEvents.save, saveCallback);\r\n    modal.getRoot().on(ModalEvents.cancel, cancelCallback);\r\n    modal.getRoot().on(ModalEvents.hidden, () => triggerElement?.focus());\r\n    pendingPromise.resolve();\r\n\r\n    return modal;\r\n};\r\n\r\n/**\r\n * The Delete and Cancel dialogue helper.\r\n *\r\n * @method\r\n * @param {String|Promise} title\r\n * @param {String|Promise} question\r\n * @param {String|Promise} deleteLabel\r\n * @param {String|Promise} deleteCallback\r\n * @param {String|Promise} cancelCallback\r\n * @param {Object} options\r\n * @param {HTMLElement} [options.triggerElement=null] The element that triggered the modal (will receive the focus after hidden)\r\n * @returns {Promise}\r\n */\r\nexport const deleteCancel = async(title, question, deleteLabel, deleteCallback, cancelCallback, {\r\n    triggerElement = null,\r\n} = {}) => {\r\n    const pendingPromise = new Pending('core/notification:confirm');\r\n\r\n    const [\r\n        DeleteCancelModal,\r\n        ModalEvents,\r\n    ] = await Promise.all([\r\n        import('core/modal_delete_cancel'),\r\n        import('core/modal_events'),\r\n    ]);\r\n\r\n    const modal = await DeleteCancelModal.create({\r\n        title: title,\r\n        body: question,\r\n        buttons: {\r\n            'delete': deleteLabel\r\n        },\r\n        removeOnClose: true,\r\n        show: true,\r\n    });\r\n        modal.getRoot().on(ModalEvents.delete, deleteCallback);\r\n        modal.getRoot().on(ModalEvents.cancel, cancelCallback);\r\n        modal.getRoot().on(ModalEvents.hidden, () => triggerElement?.focus());\r\n        pendingPromise.resolve();\r\n\r\n        return modal;\r\n};\r\n\r\n\r\n/**\r\n * Add all of the supplied notifications.\r\n *\r\n * @param {Promise|String} title The header of the modal\r\n * @param {Promise|String} question What do we want the user to confirm\r\n * @param {Promise|String} saveLabel The modal action link text\r\n * @param {Object} options\r\n * @param {HTMLElement} [options.triggerElement=null] The element that triggered the modal (will receive the focus after hidden)\r\n * @return {Promise}\r\n */\r\nexport const saveCancelPromise = (title, question, saveLabel, {\r\n    triggerElement = null,\r\n} = {}) => new Promise((resolve, reject) => {\r\n    saveCancel(title, question, saveLabel, resolve, reject, {triggerElement});\r\n});\r\n\r\n/**\r\n * Add all of the supplied notifications.\r\n *\r\n * @param {Promise|String} title The header of the modal\r\n * @param {Promise|String} question What do we want the user to confirm\r\n * @param {Promise|String} deleteLabel The modal action link text\r\n * @param {Object} options\r\n * @param {HTMLElement} [options.triggerElement=null] The element that triggered the modal (will receive the focus after hidden)\r\n * @return {Promise}\r\n */\r\nexport const deleteCancelPromise = (title, question, deleteLabel, {\r\n    triggerElement = null,\r\n} = {}) => new Promise((resolve, reject) => {\r\n    deleteCancel(title, question, deleteLabel, resolve, reject, {triggerElement});\r\n});\r\n\r\n/**\r\n * Wrap M.core.exception.\r\n *\r\n * @method\r\n * @param {Error} ex\r\n */\r\nexport const exception = async ex => {\r\n    const pendingPromise = new Pending('core/notification:displayException');\r\n\r\n    // Fudge some parameters.\r\n    if (!ex.stack) {\r\n        ex.stack = '';\r\n    }\r\n\r\n    if (ex.debuginfo) {\r\n        ex.stack += ex.debuginfo + '\\n';\r\n    }\r\n\r\n    if (!ex.backtrace && ex.stacktrace) {\r\n        ex.backtrace = ex.stacktrace;\r\n    }\r\n\r\n    if (ex.backtrace) {\r\n        ex.stack += ex.backtrace;\r\n        const ln = ex.backtrace.match(/line ([^ ]*) of/);\r\n        const fn = ex.backtrace.match(/ of ([^:]*): /);\r\n        if (ln && ln[1]) {\r\n            ex.lineNumber = ln[1];\r\n        }\r\n        if (fn && fn[1]) {\r\n            ex.fileName = fn[1];\r\n            if (ex.fileName.length > 30) {\r\n                ex.fileName = '...' + ex.fileName.substr(ex.fileName.length - 27);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (typeof ex.name === 'undefined' && ex.errorcode) {\r\n        ex.name = ex.errorcode;\r\n    }\r\n\r\n    const Y = await import('core/yui');\r\n    Y.use('moodle-core-notification-exception', function() {\r\n        var modal = new M.core.exception(ex);\r\n\r\n        modal.show();\r\n\r\n        pendingPromise.resolve();\r\n    });\r\n};\r\n\r\n/**\r\n * Initialise the page for the suppled context, and displaying the supplied notifications.\r\n *\r\n * @method\r\n * @param {Number} contextId\r\n * @param {Notification[]} notificationList\r\n */\r\nexport const init = (contextId, notificationList) => {\r\n    currentContextId = contextId;\r\n\r\n    // Setup the message target region if it isn't setup already.\r\n    setupTargetRegion();\r\n\r\n    // Add provided notifications.\r\n    addNotifications(notificationList);\r\n};\r\n\r\n// To maintain backwards compatability we export default here.\r\nexport default {\r\n    init,\r\n    fetchNotifications,\r\n    addNotification,\r\n    alert,\r\n    confirm,\r\n    saveCancel,\r\n    deleteCancel,\r\n    saveCancelPromise,\r\n    deleteCancelPromise,\r\n    exception,\r\n};\r\n"],"names":["_pending","_interopRequireDefault","_log","_systemImportTransformerGlobalIdentifier","window","self","global","e","__esModule","default","currentContextId","M","cfg","contextid","notificationTypes","success","info","warning","error","Selectors","notificationRegion","fallbackRegionParents","fetchNotifications","async","define","amd","Promise","resolve","reject","require","module","exports","component","loader","call","methodname","args","then","addNotifications","_exports","notifications","length","pendingPromise","Pending","forEach","notification","renderNotification","template","variables","addNotification","closebutton","announce","type","message","Log","debug","Templates","renderForPromise","_ref","html","js","prependNodeContents","getNotificationRegion","catch","exception","document","querySelector","alert","title","cancelText","AlertModal","modal","create","body","buttons","cancel","removeOnClose","show","confirm","question","saveLabel","noLabel","saveCallback","cancelCallback","saveCancel","triggerElement","arguments","undefined","SaveCancelModal","ModalEvents","all","save","getRoot","on","hidden","focus","deleteCancel","deleteLabel","deleteCallback","DeleteCancelModal","delete","saveCancelPromise","deleteCancelPromise","ex","stack","debuginfo","backtrace","stacktrace","ln","match","fn","lineNumber","fileName","substr","name","errorcode","use","core","init","contextId","notificationList","setupTargetRegion","newRegion","createElement","id","some","selector","targetRegion","prepend"],"mappings":"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"}