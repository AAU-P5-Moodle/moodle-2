{"version":3,"file":"status_field.min.js","sources":["../src/status_field.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * AMD module for the user enrolment status field in the course participants page.\r\n *\r\n * @module     core_user/status_field\r\n * @copyright  2017 Jun Pataleta\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport * as DynamicTable from 'core_table/dynamic';\r\nimport * as Repository from './repository';\r\nimport * as Str from 'core/str';\r\nimport DynamicTableSelectors from 'core_table/local/dynamic/selectors';\r\nimport Fragment from 'core/fragment';\r\nimport ModalEvents from 'core/modal_events';\r\nimport Notification from 'core/notification';\r\nimport Templates from 'core/templates';\r\nimport {add as notifyUser} from 'core/toast';\r\nimport SaveCancelModal from 'core/modal_save_cancel';\r\nimport CancelModal from 'core/modal_cancel';\r\n\r\nconst Selectors = {\r\n    editEnrolment: '[data-action=\"editenrolment\"]',\r\n    showDetails: '[data-action=\"showdetails\"]',\r\n    unenrol: '[data-action=\"unenrol\"]',\r\n    statusElement: '[data-status]',\r\n};\r\n\r\n/**\r\n * Get the dynamic table from the specified link.\r\n *\r\n * @param {HTMLElement} link\r\n * @returns {HTMLElement}\r\n */\r\nconst getDynamicTableFromLink = link => link.closest(DynamicTableSelectors.main.region);\r\n\r\n/**\r\n * Get the status container from the specified link.\r\n *\r\n * @param {HTMLElement} link\r\n * @returns {HTMLElement}\r\n */\r\nconst getStatusContainer = link => link.closest(Selectors.statusElement);\r\n\r\n/**\r\n * Get user enrolment id from the specified link\r\n *\r\n * @param {HTMLElement} link\r\n * @returns {Number}\r\n */\r\nconst getUserEnrolmentIdFromLink = link => link.getAttribute('rel');\r\n\r\n/**\r\n * Register all event listeners for the status fields.\r\n *\r\n * @param {Number} contextId\r\n * @param {Number} uniqueId\r\n */\r\nconst registerEventListeners = (contextId, uniqueId) => {\r\n    const getBodyFunction = (userEnrolmentId, formData) => getBody(contextId, userEnrolmentId, formData);\r\n\r\n    document.addEventListener('click', e => {\r\n        const tableRoot = e.target.closest(DynamicTableSelectors.main.fromRegionId(uniqueId));\r\n        if (!tableRoot) {\r\n            return;\r\n        }\r\n\r\n        const editLink = e.target.closest(Selectors.editEnrolment);\r\n        if (editLink) {\r\n            e.preventDefault();\r\n\r\n            showEditDialogue(editLink, getBodyFunction);\r\n        }\r\n\r\n        const unenrolLink = e.target.closest(Selectors.unenrol);\r\n        if (unenrolLink) {\r\n            e.preventDefault();\r\n\r\n            showUnenrolConfirmation(unenrolLink);\r\n        }\r\n\r\n        const showDetailsLink = e.target.closest(Selectors.showDetails);\r\n        if (showDetailsLink) {\r\n            e.preventDefault();\r\n\r\n            showStatusDetails(showDetailsLink);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Show the edit dialogue.\r\n *\r\n * @param {HTMLElement} link\r\n * @param {Function} getBody Function to get the body for the specified user enrolment\r\n */\r\nconst showEditDialogue = (link, getBody) => {\r\n    const container = getStatusContainer(link);\r\n    const userEnrolmentId = getUserEnrolmentIdFromLink(link);\r\n\r\n    SaveCancelModal.create({\r\n        large: true,\r\n        title: Str.get_string('edituserenrolment', 'enrol', container.dataset.fullname),\r\n        body: getBody(userEnrolmentId)\r\n    })\r\n    .then(modal => {\r\n        // Handle save event.\r\n        modal.getRoot().on(ModalEvents.save, e => {\r\n            // Don't close the modal yet.\r\n            e.preventDefault();\r\n\r\n            // Submit form data.\r\n            submitEditFormAjax(link, getBody, modal, userEnrolmentId, container.dataset);\r\n        });\r\n\r\n        // Handle hidden event.\r\n        modal.getRoot().on(ModalEvents.hidden, () => {\r\n            // Destroy when hidden.\r\n            modal.destroy();\r\n        });\r\n\r\n        // Show the modal.\r\n        modal.show();\r\n\r\n        return modal;\r\n    })\r\n    .catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Show and handle the unenrolment confirmation dialogue.\r\n *\r\n * @param {HTMLElement} link\r\n */\r\nconst showUnenrolConfirmation = link => {\r\n    const container = getStatusContainer(link);\r\n    const userEnrolmentId = getUserEnrolmentIdFromLink(link);\r\n\r\n    SaveCancelModal.create()\r\n    .then(modal => {\r\n        // Handle confirm event.\r\n        modal.getRoot().on(ModalEvents.save, e => {\r\n            // Don't close the modal yet.\r\n            e.preventDefault();\r\n\r\n            // Submit data.\r\n            submitUnenrolFormAjax(\r\n                link,\r\n                modal,\r\n                {\r\n                    ueid: userEnrolmentId,\r\n                },\r\n                container.dataset\r\n            );\r\n        });\r\n\r\n        // Handle hidden event.\r\n        modal.getRoot().on(ModalEvents.hidden, () => {\r\n            // Destroy when hidden.\r\n            modal.destroy();\r\n        });\r\n\r\n        // Display the delete confirmation modal.\r\n        modal.show();\r\n\r\n        const stringData = [\r\n            {\r\n                key: 'unenrol',\r\n                component: 'enrol',\r\n            },\r\n            {\r\n                key: 'unenrolconfirm',\r\n                component: 'enrol',\r\n                param: {\r\n                    user: container.dataset.fullname,\r\n                    course: container.dataset.coursename,\r\n                    enrolinstancename: container.dataset.enrolinstancename,\r\n                }\r\n            }\r\n        ];\r\n\r\n        return Promise.all([Str.get_strings(stringData), modal]);\r\n    })\r\n    .then(([strings, modal]) => {\r\n        modal.setTitle(strings[0]);\r\n        modal.setSaveButtonText(strings[0]);\r\n        modal.setBody(strings[1]);\r\n\r\n        return modal;\r\n    })\r\n    .catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Show the user details dialogue.\r\n *\r\n * @param {HTMLElement} link\r\n */\r\nconst showStatusDetails = link => {\r\n    const container = getStatusContainer(link);\r\n\r\n    const context = {\r\n        editenrollink: '',\r\n        statusclass: container.querySelector('span.badge').getAttribute('class'),\r\n        ...container.dataset,\r\n    };\r\n\r\n    // Find the edit enrolment link.\r\n    const editEnrolLink = container.querySelector(Selectors.editEnrolment);\r\n    if (editEnrolLink) {\r\n        // If there's an edit enrolment link for this user, clone it into the context for the modal.\r\n        context.editenrollink = editEnrolLink.outerHTML;\r\n    }\r\n\r\n    CancelModal.create({\r\n        large: true,\r\n        title: Str.get_string('enroldetails', 'enrol'),\r\n        body: Templates.render('core_user/status_details', context),\r\n    })\r\n    .then(modal => {\r\n        if (editEnrolLink) {\r\n            modal.getRoot().on('click', Selectors.editEnrolment, e => {\r\n                e.preventDefault();\r\n                modal.hide();\r\n\r\n                // Trigger click event for the edit enrolment link to show the edit enrolment modal.\r\n                editEnrolLink.click();\r\n            });\r\n        }\r\n\r\n        modal.show();\r\n\r\n        // Handle hidden event.\r\n        modal.getRoot().on(ModalEvents.hidden, () => modal.destroy());\r\n\r\n        return modal;\r\n    })\r\n    .catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Submit the edit dialogue.\r\n *\r\n * @param {HTMLElement} clickedLink\r\n * @param {Function} getBody\r\n * @param {Object} modal\r\n * @param {Number} userEnrolmentId\r\n * @param {Object} userData\r\n */\r\nconst submitEditFormAjax = (clickedLink, getBody, modal, userEnrolmentId, userData) => {\r\n    const form = modal.getRoot().find('form');\r\n\r\n    Repository.submitUserEnrolmentForm(form.serialize())\r\n    .then(data => {\r\n        if (!data.result) {\r\n            throw data.result;\r\n        }\r\n\r\n        // Dismiss the modal.\r\n        modal.hide();\r\n        modal.destroy();\r\n\r\n        return data;\r\n    })\r\n    .then(() => {\r\n        DynamicTable.refreshTableContent(getDynamicTableFromLink(clickedLink))\r\n        .catch(Notification.exception);\r\n\r\n        return Str.get_string('enrolmentupdatedforuser', 'core_enrol', userData);\r\n    })\r\n    .then(notificationString => {\r\n        notifyUser(notificationString);\r\n\r\n        return;\r\n    })\r\n    .catch(() => {\r\n        modal.setBody(getBody(userEnrolmentId, JSON.stringify(form.serialize())));\r\n\r\n        return modal;\r\n    });\r\n};\r\n\r\n/**\r\n * Submit the unenrolment form.\r\n *\r\n * @param {HTMLElement} clickedLink\r\n * @param {Object} modal\r\n * @param {Object} args\r\n * @param {Object} userData\r\n */\r\nconst submitUnenrolFormAjax = (clickedLink, modal, args, userData) => {\r\n    Repository.unenrolUser(args.ueid)\r\n    .then(data => {\r\n        if (!data.result) {\r\n            // Display an alert containing the error message\r\n            Notification.alert(data.errors[0].key, data.errors[0].message);\r\n\r\n            return data;\r\n        }\r\n\r\n        // Dismiss the modal.\r\n        modal.hide();\r\n        modal.destroy();\r\n\r\n        return data;\r\n    })\r\n    .then(() => {\r\n        DynamicTable.refreshTableContent(getDynamicTableFromLink(clickedLink))\r\n        .catch(Notification.exception);\r\n\r\n        return Str.get_string('unenrolleduser', 'core_enrol', userData);\r\n    })\r\n    .then(notificationString => {\r\n        notifyUser(notificationString);\r\n\r\n        return;\r\n    })\r\n    .catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Get the body fragment.\r\n *\r\n * @param {Number} contextId\r\n * @param {Number} ueid The user enrolment id\r\n * @param {Object} formdata\r\n * @returns {Promise}\r\n */\r\nconst getBody = (contextId, ueid, formdata = null) => Fragment.loadFragment(\r\n    'enrol',\r\n    'user_enrolment_form',\r\n    contextId,\r\n    {\r\n        ueid,\r\n        formdata,\r\n    }\r\n);\r\n\r\n/**\r\n * Initialise the statu field handler.\r\n *\r\n * @param {object} param\r\n * @param {Number} param.contextid\r\n * @param {Number} param.uniqueid\r\n */\r\nexport const init = ({contextid, uniqueid}) => {\r\n    registerEventListeners(contextid, uniqueid);\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","_interopRequireWildcard","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","DynamicTable","Repository","Str","_selectors","_fragment","_modal_events","_notification","_templates","_modal_save_cancel","_modal_cancel","Selectors","getDynamicTableFromLink","link","closest","DynamicTableSelectors","main","region","getStatusContainer","getUserEnrolmentIdFromLink","getAttribute","showEditDialogue","getBody","container","userEnrolmentId","SaveCancelModal","create","large","title","get_string","dataset","fullname","body","then","modal","getRoot","on","ModalEvents","save","preventDefault","submitEditFormAjax","hidden","destroy","show","catch","Notification","exception","showUnenrolConfirmation","submitUnenrolFormAjax","ueid","stringData","key","component","param","user","course","coursename","enrolinstancename","Promise","all","get_strings","_ref","strings","setTitle","setSaveButtonText","setBody","showStatusDetails","context","editenrollink","statusclass","querySelector","editEnrolLink","outerHTML","CancelModal","Templates","render","hide","click","clickedLink","userData","form","find","submitUserEnrolmentForm","serialize","data","result","refreshTableContent","notificationString","notifyUser","JSON","stringify","args","unenrolUser","alert","errors","message","contextId","formdata","arguments","length","undefined","Fragment","loadFragment","_exports","init","_ref2","contextid","uniqueid","registerEventListeners","uniqueId","getBodyFunction","formData","document","addEventListener","target","fromRegionId","editLink","unenrolLink","showDetailsLink"],"mappings":"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"}