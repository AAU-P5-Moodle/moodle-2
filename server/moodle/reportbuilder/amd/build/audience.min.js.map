{"version":3,"file":"audience.min.js","sources":["../src/audience.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Report builder audiences\r\n *\r\n * @module      core_reportbuilder/audience\r\n * @copyright   2021 David Matamoros <davidmc@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport 'core/inplace_editable';\r\nimport Templates from 'core/templates';\r\nimport Notification from 'core/notification';\r\nimport Pending from 'core/pending';\r\nimport {prefetchStrings} from 'core/prefetch';\r\nimport {getString} from 'core/str';\r\nimport DynamicForm from 'core_form/dynamicform';\r\nimport {add as addToast} from 'core/toast';\r\nimport {deleteAudience} from 'core_reportbuilder/local/repository/audiences';\r\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\r\nimport {loadFragment} from 'core/fragment';\r\nimport {markFormAsDirty} from 'core_form/changechecker';\r\n\r\nlet reportId = 0;\r\nlet contextId = 0;\r\n\r\n/**\r\n * Add audience card\r\n *\r\n * @param {String} className\r\n * @param {String} title\r\n */\r\nconst addAudienceCard = (className, title) => {\r\n    const pendingPromise = new Pending('core_reportbuilder/audience:add');\r\n\r\n    const audiencesContainer = document.querySelector(reportSelectors.regions.audiencesContainer);\r\n    const audienceCardLength = audiencesContainer.querySelectorAll(reportSelectors.regions.audienceCard).length;\r\n\r\n    const params = {\r\n        classname: className,\r\n        reportid: reportId,\r\n        showormessage: (audienceCardLength > 0),\r\n        title: title,\r\n    };\r\n\r\n    // Load audience card fragment, render and then initialise the form within.\r\n    loadFragment('core_reportbuilder', 'audience_form', contextId, params)\r\n        .then((html, js) => {\r\n            const audienceCard = Templates.appendNodeContents(audiencesContainer, html, js)[0];\r\n            const audienceEmptyMessage = audiencesContainer.querySelector(reportSelectors.regions.audienceEmptyMessage);\r\n\r\n            const audienceForm = initAudienceCardForm(audienceCard);\r\n            // Mark as dirty new audience form created to prevent users leaving the page without saving it.\r\n            markFormAsDirty(audienceForm.getFormNode());\r\n            audienceEmptyMessage.classList.add('hidden');\r\n\r\n            return getString('audienceadded', 'core_reportbuilder', title);\r\n        })\r\n        .then(addToast)\r\n        .then(() => pendingPromise.resolve())\r\n        .catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Edit audience card\r\n *\r\n * @param {Element} audienceCard\r\n */\r\nconst editAudienceCard = audienceCard => {\r\n    const pendingPromise = new Pending('core_reportbuilder/audience:edit');\r\n\r\n    // Load audience form with data for editing, then toggle visible controls in the card.\r\n    const audienceForm = initAudienceCardForm(audienceCard);\r\n    audienceForm.load({id: audienceCard.dataset.audienceId})\r\n        .then(() => {\r\n            const audienceFormContainer = audienceCard.querySelector(reportSelectors.regions.audienceFormContainer);\r\n            const audienceDescription = audienceCard.querySelector(reportSelectors.regions.audienceDescription);\r\n            const audienceEdit = audienceCard.querySelector(reportSelectors.actions.audienceEdit);\r\n\r\n            audienceFormContainer.classList.remove('hidden');\r\n            audienceDescription.classList.add('hidden');\r\n            audienceEdit.disabled = true;\r\n\r\n            return pendingPromise.resolve();\r\n        })\r\n        .catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Initialise dynamic form within given audience card\r\n *\r\n * @param {Element} audienceCard\r\n * @return {DynamicForm}\r\n */\r\nconst initAudienceCardForm = audienceCard => {\r\n    const audienceFormContainer = audienceCard.querySelector(reportSelectors.regions.audienceFormContainer);\r\n    const audienceForm = new DynamicForm(audienceFormContainer, '\\\\core_reportbuilder\\\\form\\\\audience');\r\n\r\n    // After submitting the form, update the card instance and description properties.\r\n    audienceForm.addEventListener(audienceForm.events.FORM_SUBMITTED, data => {\r\n        const audienceHeading = audienceCard.querySelector(reportSelectors.regions.audienceHeading);\r\n        const audienceDescription = audienceCard.querySelector(reportSelectors.regions.audienceDescription);\r\n\r\n        audienceCard.dataset.audienceId = data.detail.instanceid;\r\n\r\n        audienceHeading.innerHTML = data.detail.heading;\r\n        audienceDescription.innerHTML = data.detail.description;\r\n\r\n        closeAudienceCardForm(audienceCard);\r\n\r\n        return getString('audiencesaved', 'core_reportbuilder')\r\n            .then(addToast);\r\n    });\r\n\r\n    // If cancelling the form, close the card or remove it if it was never created.\r\n    audienceForm.addEventListener(audienceForm.events.FORM_CANCELLED, () => {\r\n        if (audienceCard.dataset.audienceId > 0) {\r\n            closeAudienceCardForm(audienceCard);\r\n        } else {\r\n            removeAudienceCard(audienceCard);\r\n        }\r\n    });\r\n\r\n    return audienceForm;\r\n};\r\n\r\n/**\r\n * Delete audience card\r\n *\r\n * @param {Element} audienceDelete\r\n */\r\nconst deleteAudienceCard = audienceDelete => {\r\n    const audienceCard = audienceDelete.closest(reportSelectors.regions.audienceCard);\r\n    const {audienceId, audienceTitle, audienceEditWarning = false} = audienceCard.dataset;\r\n\r\n    // The edit warning indicates the audience is in use in a report schedule.\r\n    const audienceDeleteConfirmation = audienceEditWarning ? 'audienceusedbyschedule' : 'deleteaudienceconfirm';\r\n\r\n    Notification.saveCancelPromise(\r\n        getString('deleteaudience', 'core_reportbuilder', audienceTitle),\r\n        getString(audienceDeleteConfirmation, 'core_reportbuilder', audienceTitle),\r\n        getString('delete', 'core'),\r\n        {triggerElement: audienceDelete}\r\n    ).then(() => {\r\n        const pendingPromise = new Pending('core_reportbuilder/audience:delete');\r\n\r\n        return deleteAudience(reportId, audienceId)\r\n            .then(() => addToast(getString('audiencedeleted', 'core_reportbuilder', audienceTitle)))\r\n            .then(() => {\r\n                removeAudienceCard(audienceCard);\r\n                return pendingPromise.resolve();\r\n            })\r\n            .catch(Notification.exception);\r\n    }).catch(() => {\r\n        return;\r\n    });\r\n};\r\n\r\n/**\r\n * Close audience card form\r\n *\r\n * @param {Element} audienceCard\r\n */\r\nconst closeAudienceCardForm = audienceCard => {\r\n    // Remove the [data-region=\"audience-form-container\"] (with all the event listeners attached to it), and create it again.\r\n    const audienceFormContainer = audienceCard.querySelector(reportSelectors.regions.audienceFormContainer);\r\n    const NewAudienceFormContainer = audienceFormContainer.cloneNode(false);\r\n    audienceCard.querySelector(reportSelectors.regions.audienceForm).replaceChild(NewAudienceFormContainer, audienceFormContainer);\r\n    // Show the description container and enable the action buttons.\r\n    audienceCard.querySelector(reportSelectors.regions.audienceDescription).classList.remove('hidden');\r\n    audienceCard.querySelector(reportSelectors.actions.audienceEdit).disabled = false;\r\n    audienceCard.querySelector(reportSelectors.actions.audienceDelete).disabled = false;\r\n};\r\n\r\n/**\r\n * Remove audience card\r\n *\r\n * @param {Element} audienceCard\r\n */\r\nconst removeAudienceCard = audienceCard => {\r\n    audienceCard.remove();\r\n\r\n    const audiencesContainer = document.querySelector(reportSelectors.regions.audiencesContainer);\r\n    const audienceCards = audiencesContainer.querySelectorAll(reportSelectors.regions.audienceCard);\r\n\r\n    // Show message if there are no cards remaining, ensure first card's separator is not present.\r\n    if (audienceCards.length === 0) {\r\n        const audienceEmptyMessage = document.querySelector(reportSelectors.regions.audienceEmptyMessage);\r\n        audienceEmptyMessage.classList.remove('hidden');\r\n    } else {\r\n        const audienceFirstCardSeparator = audienceCards[0].querySelector('.audience-separator');\r\n        audienceFirstCardSeparator?.remove();\r\n    }\r\n};\r\n\r\nlet initialized = false;\r\n\r\n/**\r\n * Initialise audiences tab.\r\n *\r\n * @param {Number} id\r\n * @param {Number} contextid\r\n */\r\nexport const init = (id, contextid) => {\r\n    prefetchStrings('core_reportbuilder', [\r\n        'audienceadded',\r\n        'audiencedeleted',\r\n        'audiencesaved',\r\n        'audienceusedbyschedule',\r\n        'deleteaudience',\r\n        'deleteaudienceconfirm',\r\n    ]);\r\n\r\n    prefetchStrings('core', [\r\n        'delete',\r\n    ]);\r\n\r\n    reportId = id;\r\n    contextId = contextid;\r\n\r\n    if (initialized) {\r\n        // We already added the event listeners (can be called multiple times by mustache template).\r\n        return;\r\n    }\r\n\r\n    document.addEventListener('click', event => {\r\n\r\n        // Add instance.\r\n        const audienceAdd = event.target.closest(reportSelectors.actions.audienceAdd);\r\n        if (audienceAdd) {\r\n            event.preventDefault();\r\n            addAudienceCard(audienceAdd.dataset.uniqueIdentifier, audienceAdd.dataset.name);\r\n        }\r\n\r\n        // Edit instance.\r\n        const audienceEdit = event.target.closest(reportSelectors.actions.audienceEdit);\r\n        if (audienceEdit) {\r\n            const audienceEditCard = audienceEdit.closest(reportSelectors.regions.audienceCard);\r\n\r\n            event.preventDefault();\r\n            editAudienceCard(audienceEditCard);\r\n        }\r\n\r\n        // Delete instance.\r\n        const audienceDelete = event.target.closest(reportSelectors.actions.audienceDelete);\r\n        if (audienceDelete) {\r\n            event.preventDefault();\r\n            deleteAudienceCard(audienceDelete);\r\n        }\r\n    });\r\n\r\n    initialized = true;\r\n};\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","__esModule","default","Object","defineProperty","_exports","value","init","_templates","_notification","_pending","_dynamicform","reportSelectors","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","reportId","contextId","initAudienceCardForm","audienceCard","audienceFormContainer","querySelector","regions","audienceForm","DynamicForm","addEventListener","events","FORM_SUBMITTED","data","audienceHeading","audienceDescription","dataset","audienceId","detail","instanceid","innerHTML","heading","description","closeAudienceCardForm","getString","then","addToast","FORM_CANCELLED","removeAudienceCard","NewAudienceFormContainer","cloneNode","replaceChild","classList","remove","actions","audienceEdit","disabled","audienceDelete","audienceCards","document","audiencesContainer","querySelectorAll","length","audienceEmptyMessage","audienceFirstCardSeparator","initialized","id","contextid","prefetchStrings","event","audienceAdd","target","closest","preventDefault","addAudienceCard","className","title","pendingPromise","Pending","audienceCardLength","params","classname","reportid","showormessage","loadFragment","html","js","Templates","appendNodeContents","markFormAsDirty","getFormNode","add","resolve","catch","Notification","exception","uniqueIdentifier","name","audienceEditCard","load","editAudienceCard","audienceTitle","audienceEditWarning","audienceDeleteConfirmation","saveCancelPromise","triggerElement","deleteAudience","deleteAudienceCard"],"mappings":"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"}