{"version":3,"file":"columns.min.js","sources":["../../../src/local/editor/columns.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Report builder columns editor\r\n *\r\n * @module      core_reportbuilder/local/editor/columns\r\n * @copyright   2021 Paul Holden <paulh@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport $ from 'jquery';\r\nimport {dispatchEvent} from 'core/event_dispatcher';\r\nimport 'core/inplace_editable';\r\nimport {eventTypes as inplaceEditableEvents} from 'core/local/inplace_editable/events';\r\nimport Notification from 'core/notification';\r\nimport Pending from 'core/pending';\r\nimport {prefetchStrings} from 'core/prefetch';\r\nimport {publish} from 'core/pubsub';\r\nimport SortableList from 'core/sortable_list';\r\nimport {getString} from 'core/str';\r\nimport {add as addToast} from 'core/toast';\r\nimport * as reportEvents from 'core_reportbuilder/local/events';\r\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\r\nimport {addColumn, deleteColumn, reorderColumn} from 'core_reportbuilder/local/repository/columns';\r\nimport {getColumnSorting} from 'core_reportbuilder/local/repository/sorting';\r\n\r\n/**\r\n * Initialise module, prefetch all required strings\r\n *\r\n * @param {Boolean} initialized Ensure we only add our listeners once\r\n */\r\nexport const init = initialized => {\r\n    prefetchStrings('core_reportbuilder', [\r\n        'columnadded',\r\n        'columnaggregated',\r\n        'columndeleted',\r\n        'columnmoved',\r\n        'deletecolumn',\r\n        'deletecolumnconfirm',\r\n    ]);\r\n\r\n    prefetchStrings('core', [\r\n        'delete',\r\n    ]);\r\n\r\n    if (initialized) {\r\n        return;\r\n    }\r\n\r\n    document.addEventListener('click', event => {\r\n\r\n        // Add column to report.\r\n        const reportAddColumn = event.target.closest(reportSelectors.actions.reportAddColumn);\r\n        if (reportAddColumn) {\r\n            event.preventDefault();\r\n\r\n            const pendingPromise = new Pending('core_reportbuilder/columns:add');\r\n            const reportElement = reportAddColumn.closest(reportSelectors.regions.report);\r\n\r\n            addColumn(reportElement.dataset.reportId, reportAddColumn.dataset.uniqueIdentifier)\r\n                .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\r\n                .then(() => getString('columnadded', 'core_reportbuilder', reportAddColumn.dataset.name))\r\n                .then(addToast)\r\n                .then(() => {\r\n                    dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\r\n                    return pendingPromise.resolve();\r\n                })\r\n                .catch(Notification.exception);\r\n        }\r\n\r\n        // Remove column from report.\r\n        const reportRemoveColumn = event.target.closest(reportSelectors.actions.reportRemoveColumn);\r\n        if (reportRemoveColumn) {\r\n            event.preventDefault();\r\n\r\n            const reportElement = reportRemoveColumn.closest(reportSelectors.regions.report);\r\n            const columnHeader = reportRemoveColumn.closest(reportSelectors.regions.columnHeader);\r\n            const columnName = columnHeader.dataset.columnName;\r\n\r\n            Notification.saveCancelPromise(\r\n                getString('deletecolumn', 'core_reportbuilder', columnName),\r\n                getString('deletecolumnconfirm', 'core_reportbuilder', columnName),\r\n                getString('delete', 'core'),\r\n                {triggerElement: reportRemoveColumn}\r\n            ).then(() => {\r\n                const pendingPromise = new Pending('core_reportbuilder/columns:remove');\r\n\r\n                return deleteColumn(reportElement.dataset.reportId, columnHeader.dataset.columnId)\r\n                    .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\r\n                    .then(() => addToast(getString('columndeleted', 'core_reportbuilder', columnName)))\r\n                    .then(() => {\r\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\r\n                        return pendingPromise.resolve();\r\n                    })\r\n                    .catch(Notification.exception);\r\n            }).catch(() => {\r\n                return;\r\n            });\r\n        }\r\n    });\r\n\r\n    // Initialize sortable list to handle column moving (note JQuery dependency, see MDL-72293 for resolution).\r\n    var columnSortableList = new SortableList(`${reportSelectors.regions.reportTable} thead tr`, {isHorizontal: true});\r\n    columnSortableList.getElementName = element => Promise.resolve(element.data('columnName'));\r\n\r\n    $(document).on(SortableList.EVENTS.DRAG, `${reportSelectors.regions.report} th[data-column-id]`, (event, info) => {\r\n        const reportElement = event.target.closest(reportSelectors.regions.report);\r\n        const columnPosition = info.element.data('columnPosition');\r\n        const targetColumnPosition = info.targetNextElement.data('columnPosition');\r\n\r\n        $(reportElement).find('tbody tr').each(function() {\r\n            const cell = $(this).children(`td.c${columnPosition - 1}`)[0];\r\n            if (targetColumnPosition) {\r\n                var beforeCell = $(this).children(`td.c${targetColumnPosition - 1}`)[0];\r\n                this.insertBefore(cell, beforeCell);\r\n            } else {\r\n                this.appendChild(cell);\r\n            }\r\n        });\r\n    });\r\n\r\n    $(document).on(SortableList.EVENTS.DROP, `${reportSelectors.regions.report} th[data-column-id]`, (event, info) => {\r\n        if (info.positionChanged) {\r\n            const pendingPromise = new Pending('core_reportbuilder/columns:reorder');\r\n            const reportElement = event.target.closest(reportSelectors.regions.report);\r\n            const columnId = info.element.data('columnId');\r\n            const columnName = info.element.data('columnName');\r\n            const columnPosition = info.element.data('columnPosition');\r\n\r\n            // Select target position, if moving to the end then count number of element siblings.\r\n            let targetColumnPosition = info.targetNextElement.data('columnPosition') || info.element.siblings().length + 2;\r\n            if (targetColumnPosition > columnPosition) {\r\n                targetColumnPosition--;\r\n            }\r\n\r\n            // Re-order column, giving drop event transition time to finish.\r\n            const reorderPromise = reorderColumn(reportElement.dataset.reportId, columnId, targetColumnPosition);\r\n            Promise.all([reorderPromise, new Promise(resolve => setTimeout(resolve, 1000))])\r\n                .then(() => getString('columnmoved', 'core_reportbuilder', columnName))\r\n                .then(addToast)\r\n                .then(() => {\r\n                    dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\r\n                    return pendingPromise.resolve();\r\n                })\r\n                .catch(Notification.exception);\r\n        }\r\n    });\r\n\r\n    // Initialize inplace editable listeners for column aggregation.\r\n    document.addEventListener(inplaceEditableEvents.elementUpdated, event => {\r\n\r\n        const columnAggregation = event.target.closest('[data-itemtype=\"columnaggregation\"]');\r\n        if (columnAggregation) {\r\n            const pendingPromise = new Pending('core_reportbuilder/columns:aggregate');\r\n            const reportElement = columnAggregation.closest(reportSelectors.regions.report);\r\n            const columnHeader = columnAggregation.closest(reportSelectors.regions.columnHeader);\r\n\r\n            getString('columnaggregated', 'core_reportbuilder', columnHeader.dataset.columnName)\r\n                .then(addToast)\r\n                .then(() => {\r\n                    // Pass preserveTriggerElement parameter so columnAggregationLink will be focused after the report reload.\r\n                    const columnAggregationLink = `[data-itemtype=\"columnaggregation\"][data-itemid=\"`\r\n                        + `${columnAggregation.dataset.itemid}\"] > a`;\r\n\r\n                    // Now reload the table, and notify listeners that columns have been updated.\r\n                    dispatchEvent(reportEvents.tableReload, {preserveTriggerElement: columnAggregationLink}, reportElement);\r\n                    return getColumnSorting(reportElement.dataset.reportId);\r\n                })\r\n                .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\r\n                .then(() => pendingPromise.resolve())\r\n                .catch(Notification.exception);\r\n        }\r\n    });\r\n};\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireDefault","_exports","value","init","_jquery","_notification","_pending","_sortable_list","reportEvents","reportSelectors","initialized","prefetchStrings","document","addEventListener","event","reportAddColumn","target","closest","actions","preventDefault","pendingPromise","Pending","reportElement","regions","report","addColumn","dataset","reportId","uniqueIdentifier","then","data","publish","reportColumnsUpdated","getString","name","addToast","dispatchEvent","tableReload","preservePagination","resolve","catch","Notification","exception","reportRemoveColumn","columnHeader","columnName","saveCancelPromise","triggerElement","deleteColumn","columnId","SortableList","reportTable","isHorizontal","getElementName","element","Promise","$","on","EVENTS","DRAG","info","columnPosition","targetColumnPosition","targetNextElement","find","each","cell","this","children","beforeCell","insertBefore","appendChild","DROP","positionChanged","siblings","length","reorderPromise","reorderColumn","all","setTimeout","inplaceEditableEvents","elementUpdated","columnAggregation","columnAggregationLink","itemid","preserveTriggerElement","getColumnSorting"],"mappings":"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"}