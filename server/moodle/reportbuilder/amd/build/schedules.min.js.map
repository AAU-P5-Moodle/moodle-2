{"version":3,"file":"schedules.min.js","sources":["../src/schedules.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Report builder audiences\r\n *\r\n * @module      core_reportbuilder/schedules\r\n * @copyright   2021 Paul Holden <paulh@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport {dispatchEvent} from 'core/event_dispatcher';\r\nimport 'core/inplace_editable';\r\nimport Notification from 'core/notification';\r\nimport Pending from 'core/pending';\r\nimport {prefetchStrings} from 'core/prefetch';\r\nimport {getString} from 'core/str';\r\nimport {add as addToast} from 'core/toast';\r\nimport * as reportEvents from 'core_reportbuilder/local/events';\r\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\r\nimport {createScheduleModal} from 'core_reportbuilder/local/repository/modals';\r\nimport {deleteSchedule, sendSchedule, toggleSchedule} from 'core_reportbuilder/local/repository/schedules';\r\n\r\nlet initialized = false;\r\n\r\n/**\r\n * Initialise schedules tab\r\n *\r\n * @param {Number} reportId\r\n */\r\nexport const init = reportId => {\r\n    prefetchStrings('core_reportbuilder', [\r\n        'deleteschedule',\r\n        'deletescheduleconfirm',\r\n        'disableschedule',\r\n        'editscheduledetails',\r\n        'enableschedule',\r\n        'newschedule',\r\n        'schedulecreated',\r\n        'scheduledeleted',\r\n        'schedulesent',\r\n        'scheduleupdated',\r\n        'sendschedule',\r\n        'sendscheduleconfirm',\r\n    ]);\r\n\r\n    prefetchStrings('core', [\r\n        'confirm',\r\n        'delete',\r\n    ]);\r\n\r\n    if (initialized) {\r\n        // We already added the event listeners (can be called multiple times by mustache template).\r\n        return;\r\n    }\r\n\r\n    document.addEventListener('click', event => {\r\n\r\n        // Create schedule.\r\n        const scheduleCreate = event.target.closest(reportSelectors.actions.scheduleCreate);\r\n        if (scheduleCreate) {\r\n            event.preventDefault();\r\n\r\n            const scheduleModal = createScheduleModal(event.target, getString('newschedule', 'core_reportbuilder'), reportId);\r\n            scheduleModal.addEventListener(scheduleModal.events.FORM_SUBMITTED, () => {\r\n                getString('schedulecreated', 'core_reportbuilder')\r\n                    .then(addToast)\r\n                    .then(() => {\r\n                        const reportElement = document.querySelector(reportSelectors.regions.report);\r\n                        dispatchEvent(reportEvents.tableReload, {}, reportElement);\r\n                        return;\r\n                    })\r\n                    .catch(Notification.exception);\r\n            });\r\n\r\n            scheduleModal.show();\r\n        }\r\n\r\n        // Toggle schedule.\r\n        const scheduleToggle = event.target.closest(reportSelectors.actions.scheduleToggle);\r\n        if (scheduleToggle) {\r\n            const pendingPromise = new Pending('core_reportbuilder/schedules:toggle');\r\n            const scheduleStateToggle = +!Number(scheduleToggle.dataset.state);\r\n\r\n            toggleSchedule(reportId, scheduleToggle.dataset.id, scheduleStateToggle)\r\n                .then(() => {\r\n                    const tableRow = scheduleToggle.closest('tr');\r\n                    tableRow.classList.toggle('text-muted');\r\n\r\n                    scheduleToggle.dataset.state = scheduleStateToggle;\r\n\r\n                    const stringKey = scheduleStateToggle ? 'disableschedule' : 'enableschedule';\r\n                    return getString(stringKey, 'core_reportbuilder');\r\n                })\r\n                .then(toggleLabel => {\r\n                    const labelContainer = scheduleToggle.parentElement.querySelector(`label[for=\"${scheduleToggle.id}\"] > span`);\r\n                    labelContainer.innerHTML = toggleLabel;\r\n                    return pendingPromise.resolve();\r\n                })\r\n                .catch(Notification.exception);\r\n        }\r\n\r\n        // Edit schedule.\r\n        const scheduleEdit = event.target.closest(reportSelectors.actions.scheduleEdit);\r\n        if (scheduleEdit) {\r\n            event.preventDefault();\r\n\r\n            // Use triggerElement to return focus to the action menu toggle.\r\n            const triggerElement = scheduleEdit.closest('.dropdown').querySelector('.dropdown-toggle');\r\n            const scheduleModal = createScheduleModal(triggerElement, getString('editscheduledetails', 'core_reportbuilder'),\r\n                reportId, scheduleEdit.dataset.scheduleId);\r\n            scheduleModal.addEventListener(scheduleModal.events.FORM_SUBMITTED, () => {\r\n                getString('scheduleupdated', 'core_reportbuilder')\r\n                    .then(addToast)\r\n                    .then(() => {\r\n                        const reportElement = scheduleEdit.closest(reportSelectors.regions.report);\r\n                        dispatchEvent(reportEvents.tableReload, {}, reportElement);\r\n                        return;\r\n                    })\r\n                    .catch(Notification.exception);\r\n            });\r\n\r\n            scheduleModal.show();\r\n        }\r\n\r\n        // Send schedule.\r\n        const scheduleSend = event.target.closest(reportSelectors.actions.scheduleSend);\r\n        if (scheduleSend) {\r\n            event.preventDefault();\r\n\r\n            // Use triggerElement to return focus to the action menu toggle.\r\n            const triggerElement = scheduleSend.closest('.dropdown').querySelector('.dropdown-toggle');\r\n            Notification.saveCancelPromise(\r\n                getString('sendschedule', 'core_reportbuilder'),\r\n                getString('sendscheduleconfirm', 'core_reportbuilder', scheduleSend.dataset.scheduleName),\r\n                getString('confirm', 'core'),\r\n                {triggerElement}\r\n            ).then(() => {\r\n                const pendingPromise = new Pending('core_reportbuilder/schedules:send');\r\n\r\n                return sendSchedule(reportId, scheduleSend.dataset.scheduleId)\r\n                    .then(addToast(getString('schedulesent', 'core_reportbuilder')))\r\n                    .then(() => pendingPromise.resolve())\r\n                    .catch(Notification.exception);\r\n            }).catch(() => {\r\n                return;\r\n            });\r\n        }\r\n\r\n        // Delete schedule.\r\n        const scheduleDelete = event.target.closest(reportSelectors.actions.scheduleDelete);\r\n        if (scheduleDelete) {\r\n            event.preventDefault();\r\n\r\n            // Use triggerElement to return focus to the action menu toggle.\r\n            const triggerElement = scheduleDelete.closest('.dropdown').querySelector('.dropdown-toggle');\r\n            Notification.saveCancelPromise(\r\n                getString('deleteschedule', 'core_reportbuilder'),\r\n                getString('deletescheduleconfirm', 'core_reportbuilder', scheduleDelete.dataset.scheduleName),\r\n                getString('delete', 'core'),\r\n                {triggerElement}\r\n            ).then(() => {\r\n                const pendingPromise = new Pending('core_reportbuilder/schedules:delete');\r\n\r\n                return deleteSchedule(reportId, scheduleDelete.dataset.scheduleId)\r\n                    .then(addToast(getString('scheduledeleted', 'core_reportbuilder')))\r\n                    .then(() => {\r\n                        const reportElement = scheduleDelete.closest(reportSelectors.regions.report);\r\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\r\n                        return pendingPromise.resolve();\r\n                    })\r\n                    .catch(Notification.exception);\r\n            }).catch(() => {\r\n                return;\r\n            });\r\n        }\r\n    });\r\n\r\n    initialized = true;\r\n};\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireDefault","_exports","value","init","_notification","_pending","reportEvents","reportSelectors","initialized","reportId","prefetchStrings","document","addEventListener","event","target","closest","actions","scheduleCreate","preventDefault","scheduleModal","createScheduleModal","getString","events","FORM_SUBMITTED","then","addToast","add","reportElement","querySelector","regions","report","dispatchEvent","tableReload","catch","Notification","exception","show","scheduleToggle","pendingPromise","Pending","scheduleStateToggle","Number","dataset","state","toggleSchedule","id","classList","toggle","stringKey","toggleLabel","parentElement","innerHTML","resolve","scheduleEdit","triggerElement","scheduleId","scheduleSend","saveCancelPromise","scheduleName","sendSchedule","scheduleDelete","deleteSchedule","preservePagination"],"mappings":"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"}