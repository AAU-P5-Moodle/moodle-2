{"version":3,"file":"resetcourse.min.js","sources":["../src/resetcourse.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript module for resetting a course\r\n *\r\n * @module      core_course/resetcourse\r\n * @copyright   2024 Sara Arjona <sara@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Notification from 'core/notification';\r\nimport {prefetchStrings} from 'core/prefetch';\r\nimport {getString} from 'core/str';\r\n\r\nconst selectors = {\r\n    resetCoursetButton: '[data-action=\"resetcourse\"]',\r\n};\r\n\r\n/**\r\n * Initialize module\r\n */\r\nexport const init = () => {\r\n    prefetchStrings('core', [\r\n        'resetcourseconfirm',\r\n        'resetcoursewarning',\r\n        'resetcourse',\r\n    ]);\r\n\r\n    registerEventListeners();\r\n};\r\n\r\n/**\r\n * Register events for course reset button.\r\n */\r\nconst registerEventListeners = () => {\r\n    document.addEventListener('click', (event) => {\r\n        const resetButton = event.target.closest(selectors.resetCoursetButton);\r\n        if (resetButton) {\r\n            event.preventDefault();\r\n            resetCourseConfirm(resetButton);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Show the confirmation modal to reset the course.\r\n *\r\n * @param {HTMLElement} resetButton the element to delete.\r\n *\r\n */\r\nconst resetCourseConfirm = async(resetButton) => {\r\n    const courseName = resetButton.dataset.coursename;\r\n\r\n    Notification.deleteCancelPromise(\r\n        getString('resetcourseconfirm'),\r\n        getString('resetcoursewarning', 'core', courseName),\r\n        getString('resetcourse'),\r\n    ).then(() => {\r\n        resetButton.closest('form').submit();\r\n        return;\r\n    }).catch(() => {\r\n        return;\r\n    });\r\n};\r\n"],"names":["e","_notification","__esModule","default","selectors","_exports","init","prefetchStrings","registerEventListeners","document","addEventListener","event","resetButton","target","closest","preventDefault","resetCourseConfirm","async","courseName","dataset","coursename","Notification","deleteCancelPromise","getString","then","submit","catch"],"mappings":"6IAuB6C,IAAAA;;;;;;;kFAA7CC,eAA6CD,EAA7CC,gBAA6CD,EAAAE,WAAAF,EAAAG,CAAAA,QAAAH,GAI7C,MAAMI,6BACkB,8BActBC,SAAAC,KARkBA,MAChB,EAAAC,UAAAA,iBAAgB,OAAQ,CACpB,qBACA,qBACA,gBAGJC,wBAAwB,EAM5B,MAAMA,uBAAyBA,KAC3BC,SAASC,iBAAiB,SAAUC,QAChC,MAAMC,YAAcD,MAAME,OAAOC,QAAQV,8BACrCQ,cACAD,MAAMI,iBACNC,mBAAmBJ,aACvB,GACF,EASAI,mBAAqBC,oBACvB,MAAMC,WAAaN,YAAYO,QAAQC,WAEvCC,cAAAA,QAAaC,qBACT,EAAAC,KAASA,WAAC,uBACV,EAAAA,KAASA,WAAC,qBAAsB,OAAQL,aACxC,EAAAK,KAASA,WAAC,gBACZC,MAAK,KACHZ,YAAYE,QAAQ,QAAQW,QAC5B,IACDC,OAAM,KACL,GACF,CACJ"}