{"version":3,"file":"cm.min.js","sources":["../../../src/local/courseindex/cm.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Course index cm component.\r\n *\r\n * This component is used to control specific course modules interactions like drag and drop.\r\n *\r\n * @module     core_courseformat/local/courseindex/cm\r\n * @class      core_courseformat/local/courseindex/cm\r\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport DndCmItem from 'core_courseformat/local/courseeditor/dndcmitem';\r\nimport Templates from 'core/templates';\r\nimport Prefetch from 'core/prefetch';\r\nimport Config from 'core/config';\r\nimport Pending from \"core/pending\";\r\n\r\n// Prefetch the completion icons template.\r\nconst completionTemplate = 'core_courseformat/local/courseindex/cmcompletion';\r\nPrefetch.prefetchTemplate(completionTemplate);\r\n\r\nexport default class Component extends DndCmItem {\r\n\r\n    /**\r\n     * Constructor hook.\r\n     */\r\n    create() {\r\n        // Optional component name for debugging.\r\n        this.name = 'courseindex_cm';\r\n        // Default query selectors.\r\n        this.selectors = {\r\n            CM_NAME: `[data-for='cm_name']`,\r\n            CM_COMPLETION: `[data-for='cm_completion']`,\r\n        };\r\n        // Default classes to toggle on refresh.\r\n        this.classes = {\r\n            CMHIDDEN: 'dimmed',\r\n            LOCKED: 'editinprogress',\r\n            RESTRICTIONS: 'restrictions',\r\n            PAGEITEM: 'pageitem',\r\n            INDENTED: 'indented',\r\n        };\r\n        // We need our id to watch specific events.\r\n        this.id = this.element.dataset.id;\r\n    }\r\n\r\n    /**\r\n     * Static method to create a component instance form the mustache template.\r\n     *\r\n     * @param {element|string} target the DOM main element or its ID\r\n     * @param {object} selectors optional css selector overrides\r\n     * @return {Component}\r\n     */\r\n    static init(target, selectors) {\r\n        return new this({\r\n            element: document.getElementById(target),\r\n            selectors,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initial state ready method.\r\n     *\r\n     * @param {Object} state the course state.\r\n     */\r\n    stateReady(state) {\r\n        this.configDragDrop(this.id);\r\n        const cm = state.cm.get(this.id);\r\n        const course = state.course;\r\n        // Refresh completion icon.\r\n        this._refreshCompletion({\r\n            state,\r\n            element: cm,\r\n        });\r\n        const url = new URL(window.location.href);\r\n        const anchor = url.hash.replace('#', '');\r\n        // Check if the current url is the cm url.\r\n        if (window.location.href == cm.url\r\n            || (window.location.href.includes(course.baseurl) && anchor == cm.anchor)\r\n        ) {\r\n            this.element.scrollIntoView({block: \"center\"});\r\n        }\r\n        // Check if this we are displaying this activity page.\r\n        if (Config.contextid != Config.courseContextId && Config.contextInstanceId == this.id) {\r\n            this.reactive.dispatch('setPageItem', 'cm', this.id, true);\r\n            this.element.scrollIntoView({block: \"center\"});\r\n        }\r\n        // Add anchor logic if the element is not user visible or the element hasn't URL.\r\n        if (!cm.uservisible || !cm.url) {\r\n            this.addEventListener(\r\n                this.getElement(this.selectors.CM_NAME),\r\n                'click',\r\n                this._activityAnchor,\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component watchers.\r\n     *\r\n     * @returns {Array} of watchers\r\n     */\r\n    getWatchers() {\r\n        return [\r\n            {watch: `cm[${this.id}]:deleted`, handler: this.remove},\r\n            {watch: `cm[${this.id}]:updated`, handler: this._refreshCm},\r\n            {watch: `cm[${this.id}].completionstate:updated`, handler: this._refreshCompletion},\r\n            {watch: `course.pageItem:updated`, handler: this._refreshPageItem},\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Update a course index cm using the state information.\r\n     *\r\n     * @param {object} param\r\n     * @param {Object} param.element details the update details.\r\n     */\r\n    _refreshCm({element}) {\r\n        // Update classes.\r\n        this.element.classList.toggle(this.classes.CMHIDDEN, !element.visible);\r\n        this.getElement(this.selectors.CM_NAME).innerHTML = element.name;\r\n        this.element.classList.toggle(this.classes.DRAGGING, element.dragging ?? false);\r\n        this.element.classList.toggle(this.classes.LOCKED, element.locked ?? false);\r\n        this.element.classList.toggle(this.classes.RESTRICTIONS, element.hascmrestrictions ?? false);\r\n        this.element.classList.toggle(this.classes.INDENTED, element.indent);\r\n        this.locked = element.locked;\r\n    }\r\n\r\n    /**\r\n     * Handle a page item update.\r\n     *\r\n     * @param {Object} details the update details\r\n     * @param {Object} details.element the course state data.\r\n     */\r\n    _refreshPageItem({element}) {\r\n        if (!element.pageItem) {\r\n            return;\r\n        }\r\n        const isPageId = (element.pageItem.type == 'cm' && element.pageItem.id == this.id);\r\n        this.element.classList.toggle(this.classes.PAGEITEM, isPageId);\r\n        if (isPageId && !this.reactive.isEditing) {\r\n            this.element.scrollIntoView({block: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the activity completion icon.\r\n     *\r\n     * @param {Object} details the update details\r\n     * @param {Object} details.state the state data\r\n     * @param {Object} details.element the element data\r\n     */\r\n    async _refreshCompletion({state, element}) {\r\n        // No completion icons are displayed in edit mode.\r\n        if (this.reactive.isEditing || !element.istrackeduser) {\r\n            return;\r\n        }\r\n        // Check if the completion value has changed.\r\n        const completionElement = this.getElement(this.selectors.CM_COMPLETION);\r\n        if (!completionElement || completionElement.dataset.value == element.completionstate) {\r\n            return;\r\n        }\r\n\r\n        // Collect section information from the state.\r\n        const exporter = this.reactive.getExporter();\r\n        const data = exporter.cmCompletion(state, element);\r\n\r\n        const {html, js} = await Templates.renderForPromise(completionTemplate, data);\r\n        Templates.replaceNode(completionElement, html, js);\r\n    }\r\n\r\n    /**\r\n     * The activity anchor event.\r\n     *\r\n     * @param {Event} event\r\n     */\r\n    _activityAnchor(event) {\r\n        const cm = this.reactive.get('cm', this.id);\r\n        // If the user cannot access the element but the element is present in the page\r\n        // the new url should be an anchor link.\r\n        const element = document.getElementById(cm.anchor);\r\n        if (element) {\r\n            // Make sure the section is expanded.\r\n            this.reactive.dispatch('sectionContentCollapsed', [cm.sectionid], false);\r\n            // Marc the element as page item once the event is handled.\r\n            const pendingAnchor = new Pending(`courseformat/activity:openAnchor`);\r\n            setTimeout(() => {\r\n                this.reactive.dispatch('setPageItem', 'cm', cm.id);\r\n                pendingAnchor.resolve();\r\n            }, 50);\r\n            return;\r\n        }\r\n        // If the element is not present in the page we need to go to the specific section.\r\n        const course = this.reactive.get('course');\r\n        const section = this.reactive.get('section', cm.sectionid);\r\n        if (!section) {\r\n            return;\r\n        }\r\n        const url = `${course.baseurl}&section=${section.number}#${cm.anchor}`;\r\n        event.preventDefault();\r\n        window.location = url;\r\n    }\r\n}\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_dndcmitem","_templates","_prefetch","_config","_pending","Prefetch","prefetchTemplate","Component","DndCmItem","create","this","name","selectors","CM_NAME","CM_COMPLETION","classes","CMHIDDEN","LOCKED","RESTRICTIONS","PAGEITEM","INDENTED","id","element","dataset","init","target","document","getElementById","stateReady","state","configDragDrop","cm","get","course","_refreshCompletion","anchor","URL","window","location","href","hash","replace","url","includes","baseurl","scrollIntoView","block","Config","contextid","courseContextId","contextInstanceId","reactive","dispatch","uservisible","addEventListener","getElement","_activityAnchor","getWatchers","watch","handler","remove","_refreshCm","_refreshPageItem","_ref","classList","toggle","visible","innerHTML","DRAGGING","dragging","locked","hascmrestrictions","indent","_ref2","pageItem","isPageId","type","isEditing","_ref3","istrackeduser","completionElement","value","completionstate","data","getExporter","cmCompletion","html","js","Templates","renderForPromise","replaceNode","event","sectionid","pendingAnchor","Pending","setTimeout","resolve","section","number","preventDefault","_exports"],"mappings":"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"}