{"version":3,"file":"bulkedittools.min.js","sources":["../../../src/local/content/bulkedittools.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * The bulk editor tools bar.\r\n *\r\n * @module     core_courseformat/local/content/bulkedittools\r\n * @class      core_courseformat/local/content/bulkedittools\r\n * @copyright  2023 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {BaseComponent} from 'core/reactive';\r\nimport {disableStickyFooter, enableStickyFooter} from 'core/sticky-footer';\r\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\r\nimport {getString} from 'core/str';\r\nimport Pending from 'core/pending';\r\nimport {prefetchStrings} from 'core/prefetch';\r\nimport {\r\n    selectAllBulk,\r\n    switchBulkSelection,\r\n    checkAllBulkSelected\r\n} from 'core_courseformat/local/content/actions/bulkselection';\r\nimport Notification from 'core/notification';\r\n\r\n// Load global strings.\r\nprefetchStrings(\r\n    'core_courseformat',\r\n    ['bulkselection']\r\n);\r\n\r\nexport default class Component extends BaseComponent {\r\n\r\n    /**\r\n     * Constructor hook.\r\n     */\r\n    create() {\r\n        // Optional component name for debugging.\r\n        this.name = 'bulk_editor_tools';\r\n        // Default query selectors.\r\n        this.selectors = {\r\n            ACTIONS: `[data-for=\"bulkaction\"]`,\r\n            ACTIONTOOL: `[data-for=\"bulkactions\"] li`,\r\n            CANCEL: `[data-for=\"bulkcancel\"]`,\r\n            COUNT: `[data-for='bulkcount']`,\r\n            SELECTABLE: `[data-bulkcheckbox][data-is-selectable]`,\r\n            SELECTALL: `[data-for=\"selectall\"]`,\r\n            BULKBTN: `[data-for=\"enableBulk\"]`,\r\n        };\r\n        // Most classes will be loaded later by DndCmItem.\r\n        this.classes = {\r\n            HIDE: 'd-none',\r\n            DISABLED: 'disabled',\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Static method to create a component instance from the mustache template.\r\n     *\r\n     * @param {string} target optional altentative DOM main element CSS selector\r\n     * @param {object} selectors optional css selector overrides\r\n     * @return {Component}\r\n     */\r\n    static init(target, selectors) {\r\n        return new this({\r\n            element: document.querySelector(target),\r\n            reactive: getCurrentCourseEditor(),\r\n            selectors\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initial state ready method.\r\n     */\r\n    stateReady() {\r\n        const cancelBtn = this.getElement(this.selectors.CANCEL);\r\n        if (cancelBtn) {\r\n            this.addEventListener(cancelBtn, 'click', this._cancelBulk);\r\n        }\r\n        const selectAll = this.getElement(this.selectors.SELECTALL);\r\n        if (selectAll) {\r\n            this.addEventListener(selectAll, 'click', this._selectAllClick);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component watchers.\r\n     *\r\n     * @returns {Array} of watchers\r\n     */\r\n    getWatchers() {\r\n        return [\r\n            {watch: `bulk.enabled:updated`, handler: this._refreshEnabled},\r\n            {watch: `bulk:updated`, handler: this._refreshTools},\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Hide and show the bulk edit tools.\r\n     *\r\n     * @param {object} param\r\n     * @param {Object} param.element details the update details (state.bulk in this case).\r\n     */\r\n    _refreshEnabled({element}) {\r\n        this._updatePageTitle(element.enabled).catch(Notification.exception);\r\n\r\n        if (element.enabled) {\r\n            enableStickyFooter();\r\n        } else {\r\n            disableStickyFooter();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh the tools depending on the current selection.\r\n     *\r\n     * @param {object} param the state watcher information\r\n     * @param {Object} param.state the full state data.\r\n     * @param {Object} param.element the affected element (bulk in this case).\r\n     */\r\n    _refreshTools(param) {\r\n        this._refreshSelectCount(param);\r\n        this._refreshSelectAll(param);\r\n        this._refreshActions(param);\r\n    }\r\n\r\n    /**\r\n     * Refresh the selection count.\r\n     *\r\n     * @param {object} param\r\n     * @param {Object} param.element the affected element (bulk in this case).\r\n     */\r\n    async _refreshSelectCount({element: bulk}) {\r\n        const stringName = (bulk.selection.length > 1) ? 'bulkselection_plural' : 'bulkselection';\r\n        const selectedCount = await getString(stringName, 'core_courseformat', bulk.selection.length);\r\n        const selectedElement = this.getElement(this.selectors.COUNT);\r\n        if (selectedElement) {\r\n            selectedElement.innerHTML = selectedCount;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh the select all element.\r\n     *\r\n     * @param {object} param\r\n     * @param {Object} param.element the affected element (bulk in this case).\r\n     */\r\n    _refreshSelectAll({element: bulk}) {\r\n        const selectall = this.getElement(this.selectors.SELECTALL);\r\n        if (!selectall) {\r\n            return;\r\n        }\r\n        selectall.disabled = (bulk.selectedType === '');\r\n        // The changechecker module can prevent the checkbox form changing it's value.\r\n        // To avoid that we leave the sniffer to act before changing the value.\r\n        const pending = new Pending(`courseformat/bulktools:refreshSelectAll`);\r\n        setTimeout(\r\n            () => {\r\n                selectall.checked = checkAllBulkSelected(this.reactive);\r\n                pending.resolve();\r\n            },\r\n            100\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Refresh the visible action buttons depending on the selection type.\r\n     *\r\n     * @param {object} param\r\n     * @param {Object} param.element the affected element (bulk in this case).\r\n     */\r\n    _refreshActions({element: bulk}) {\r\n        // By default, we show the cm options.\r\n        const displayType = (bulk.selectedType == 'section') ? 'section' : 'cm';\r\n        const enabled = (bulk.selectedType !== '');\r\n        this.getElements(this.selectors.ACTIONS).forEach(action => {\r\n            action.classList.toggle(this.classes.DISABLED, !enabled);\r\n            action.tabIndex = (enabled) ? 0 : -1;\r\n\r\n            const actionTool = action.closest(this.selectors.ACTIONTOOL);\r\n            const isHidden = (action.dataset.bulk != displayType);\r\n            actionTool?.classList.toggle(this.classes.HIDE, isHidden);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Cancel bulk handler.\r\n     */\r\n    _cancelBulk() {\r\n        const pending = new Pending(`courseformat/content:bulktoggle_off`);\r\n        this.reactive.dispatch('bulkEnable', false);\r\n        // Wait for a while and focus on enable bulk button.\r\n        setTimeout(() => {\r\n            document.querySelector(this.selectors.BULKBTN)?.focus();\r\n            pending.resolve();\r\n        }, 150);\r\n    }\r\n\r\n    /**\r\n     * Handle special select all cases.\r\n     * @param {Event} event\r\n     */\r\n    _selectAllClick(event) {\r\n        event.preventDefault();\r\n        if (event.altKey) {\r\n            switchBulkSelection(this.reactive);\r\n            return;\r\n        }\r\n        if (checkAllBulkSelected(this.reactive)) {\r\n            this._handleUnselectAll();\r\n            return;\r\n        }\r\n        selectAllBulk(this.reactive, true);\r\n    }\r\n\r\n    /**\r\n     * Process unselect all elements.\r\n     */\r\n    _handleUnselectAll() {\r\n        const pending = new Pending(`courseformat/content:bulktUnselectAll`);\r\n        selectAllBulk(this.reactive, false);\r\n        // Wait for a while and focus on the first checkbox.\r\n        setTimeout(() => {\r\n            document.querySelector(this.selectors.SELECTABLE)?.focus();\r\n            pending.resolve();\r\n        }, 150);\r\n    }\r\n\r\n    /**\r\n     * Updates the <title> attribute of the page whenever bulk editing is toggled.\r\n     *\r\n     * This helps users, especially screen reader users, to understand the current state of the course homepage.\r\n     *\r\n     * @param {Boolean} enabled True when bulk editing is turned on. False, otherwise.\r\n     * @returns {Promise<void>}\r\n     * @private\r\n     */\r\n    async _updatePageTitle(enabled) {\r\n        const enableBulk = document.querySelector(this.selectors.BULKBTN);\r\n        let params, bulkEditTitle, editingTitle;\r\n        if (enableBulk.dataset.sectiontitle) {\r\n            // Section editing mode.\r\n            params = {\r\n                course: enableBulk.dataset.coursename,\r\n                sectionname: enableBulk.dataset.sectionname,\r\n                sectiontitle: enableBulk.dataset.sectiontitle,\r\n            };\r\n            bulkEditTitle = await getString('coursesectiontitlebulkediting', 'moodle', params);\r\n            editingTitle = await getString('coursesectiontitleediting', 'moodle', params);\r\n        } else {\r\n            // Whole course editing mode.\r\n            params = {\r\n                course: enableBulk.dataset.coursename\r\n            };\r\n            bulkEditTitle = await getString('coursetitlebulkediting', 'moodle', params);\r\n            editingTitle = await getString('coursetitleediting', 'moodle', params);\r\n        }\r\n        const pageTitle = document.title;\r\n        if (enabled) {\r\n            // Use bulk editing string for the page title.\r\n            // At this point, the current page title should be the normal editing title.\r\n            // So replace the normal editing title with the bulk editing title.\r\n            document.title = pageTitle.replace(editingTitle, bulkEditTitle);\r\n        } else {\r\n            // Use the normal editing string for the page title.\r\n            // At this point, the current page title should be the bulk editing title.\r\n            // So replace the bulk editing title with the normal editing title.\r\n            document.title = pageTitle.replace(bulkEditTitle, editingTitle);\r\n        }\r\n    }\r\n}\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_pending","_notification","prefetchStrings","Component","BaseComponent","create","this","name","selectors","ACTIONS","ACTIONTOOL","CANCEL","COUNT","SELECTABLE","SELECTALL","BULKBTN","classes","HIDE","DISABLED","init","target","element","document","querySelector","reactive","getCurrentCourseEditor","stateReady","cancelBtn","getElement","addEventListener","_cancelBulk","selectAll","_selectAllClick","getWatchers","watch","handler","_refreshEnabled","_refreshTools","_ref","_updatePageTitle","enabled","catch","Notification","exception","enableStickyFooter","disableStickyFooter","param","_refreshSelectCount","_refreshSelectAll","_refreshActions","_ref2","bulk","stringName","selection","length","selectedCount","getString","selectedElement","innerHTML","_ref3","selectall","disabled","selectedType","pending","Pending","setTimeout","checked","checkAllBulkSelected","resolve","_ref4","displayType","getElements","forEach","action","classList","toggle","tabIndex","actionTool","closest","isHidden","dataset","dispatch","focus","event","preventDefault","altKey","switchBulkSelection","_handleUnselectAll","selectAllBulk","enableBulk","params","bulkEditTitle","editingTitle","sectiontitle","course","coursename","sectionname","pageTitle","title","replace","_exports"],"mappings":"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"}