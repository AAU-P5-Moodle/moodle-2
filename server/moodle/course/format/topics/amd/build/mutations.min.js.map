{"version":3,"file":"mutations.min.js","sources":["../src/mutations.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Format topics mutations.\r\n *\r\n * An instance of this class will be used to add custom mutations to the course editor.\r\n * To make sure the addMutations method find the proper functions, all functions must\r\n * be declared as class attributes, not a simple methods. The reason is because many\r\n * plugins can add extra mutations to the course editor.\r\n *\r\n * @module     format_topics/mutations\r\n * @copyright  2022 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\r\nimport DefaultMutations from 'core_courseformat/local/courseeditor/mutations';\r\nimport CourseActions from 'core_courseformat/local/content/actions';\r\n\r\nclass TopicsMutations extends DefaultMutations {\r\n\r\n    /**\r\n     * Highlight sections.\r\n     *\r\n     * It is important to note this mutation method is declared as a class attribute,\r\n     * See the class jsdoc for more details on why.\r\n     *\r\n     * @param {StateManager} stateManager the current state manager\r\n     * @param {array} sectionIds the list of section ids\r\n     */\r\n    sectionHighlight = async function(stateManager, sectionIds) {\r\n        const logEntry = this._getLoggerEntry(\r\n            stateManager,\r\n            'section_highlight',\r\n            sectionIds,\r\n            {component: 'format_topics'}\r\n        );\r\n        const course = stateManager.get('course');\r\n        this.sectionLock(stateManager, sectionIds, true);\r\n        const updates = await this._callEditWebservice('section_highlight', course.id, sectionIds);\r\n        stateManager.processUpdates(updates);\r\n        this.sectionLock(stateManager, sectionIds, false);\r\n        stateManager.addLoggerEntry(await logEntry);\r\n\r\n    };\r\n\r\n    /**\r\n     * Unhighlight sections.\r\n     *\r\n     * It is important to note this mutation method is declared as a class attribute,\r\n     * See the class jsdoc for more details on why.\r\n     *\r\n     * @param {StateManager} stateManager the current state manager\r\n     * @param {array} sectionIds the list of section ids\r\n     */\r\n    sectionUnhighlight = async function(stateManager, sectionIds) {\r\n        const logEntry = this._getLoggerEntry(\r\n            stateManager,\r\n            'section_unhighlight',\r\n            sectionIds,\r\n            {component: 'format_topics'}\r\n        );\r\n        const course = stateManager.get('course');\r\n        this.sectionLock(stateManager, sectionIds, true);\r\n        const updates = await this._callEditWebservice('section_unhighlight', course.id, sectionIds);\r\n        stateManager.processUpdates(updates);\r\n        this.sectionLock(stateManager, sectionIds, false);\r\n        stateManager.addLoggerEntry(await logEntry);\r\n    };\r\n}\r\n\r\nexport const init = () => {\r\n    const courseEditor = getCurrentCourseEditor();\r\n    // Some plugin (activity or block) may have their own mutations already registered.\r\n    // This is why we use addMutations instead of setMutations here.\r\n    courseEditor.addMutations(new TopicsMutations());\r\n    // Add direct mutation content actions.\r\n    CourseActions.addActions({\r\n        sectionHighlight: 'sectionHighlight',\r\n        sectionUnhighlight: 'sectionUnhighlight',\r\n    });\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_mutations","_actions","TopicsMutations","DefaultMutations","sectionHighlight","async","stateManager","sectionIds","logEntry","this","_getLoggerEntry","component","course","get","sectionLock","updates","_callEditWebservice","id","processUpdates","addLoggerEntry","sectionUnhighlight","_exports","init","getCurrentCourseEditor","addMutations","CourseActions","addActions"],"mappings":"+NA8BoE,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;;;;;;kFADpEG,WAAAJ,uBAAAI,YACAC,SAAAL,uBAAAK,UAEA,MAAMC,wBAAwBC,WAAAA,QAW1BC,iBAAmBC,eAAeC,aAAcC,YAC5C,MAAMC,SAAWC,KAAKC,gBAClBJ,aACA,oBACAC,WACA,CAACI,UAAW,kBAEVC,OAASN,aAAaO,IAAI,UAChCJ,KAAKK,YAAYR,aAAcC,YAAY,GAC3C,MAAMQ,cAAgBN,KAAKO,oBAAoB,oBAAqBJ,OAAOK,GAAIV,YAC/ED,aAAaY,eAAeH,SAC5BN,KAAKK,YAAYR,aAAcC,YAAY,GAC3CD,aAAaa,qBAAqBX,WAatCY,mBAAqBf,eAAeC,aAAcC,YAC9C,MAAMC,SAAWC,KAAKC,gBAClBJ,aACA,sBACAC,WACA,CAACI,UAAW,kBAEVC,OAASN,aAAaO,IAAI,UAChCJ,KAAKK,YAAYR,aAAcC,YAAY,GAC3C,MAAMQ,cAAgBN,KAAKO,oBAAoB,sBAAuBJ,OAAOK,GAAIV,YACjFD,aAAaY,eAAeH,SAC5BN,KAAKK,YAAYR,aAAcC,YAAY,GAC3CD,aAAaa,qBAAqBX,WAcxCa,SAAAC,KAVkBA,MACK,EAAAC,cAAAA,0BAGRC,aAAa,IAAItB,iBAE9BuB,SAAa1B,QAAC2B,WAAW,CACrBtB,iBAAkB,mBAClBgB,mBAAoB,sBACtB,CACJ"}