{"version":3,"file":"form.min.js","sources":["../src/form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Custom Field interaction management for Moodle.\r\n *\r\n * @module     core_customfield/form\r\n * @copyright  2018 Toni Barbera\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport 'core/inplace_editable';\r\nimport {call as fetchMany} from 'core/ajax';\r\nimport {\r\n    getString,\r\n    getStrings,\r\n} from 'core/str';\r\nimport ModalForm from 'core_form/modalform';\r\nimport Notification from 'core/notification';\r\nimport Pending from 'core/pending';\r\nimport SortableList from 'core/sortable_list';\r\nimport Templates from 'core/templates';\r\nimport jQuery from 'jquery';\r\n\r\n/**\r\n * Display confirmation dialogue\r\n *\r\n * @param {Number} id\r\n * @param {String} type\r\n * @param {String} component\r\n * @param {String} area\r\n * @param {Number} itemid\r\n */\r\nconst confirmDelete = (id, type, component, area, itemid) => {\r\n    const pendingPromise = new Pending('core_customfield/form:confirmDelete');\r\n\r\n    getStrings([\r\n        {'key': 'confirm'},\r\n        {'key': 'confirmdelete' + type, component: 'core_customfield'},\r\n        {'key': 'yes'},\r\n        {'key': 'no'},\r\n    ])\r\n    .then(strings => {\r\n        return Notification.confirm(strings[0], strings[1], strings[2], strings[3], function() {\r\n            const pendingDeletePromise = new Pending('core_customfield/form:confirmDelete');\r\n            fetchMany([\r\n                {\r\n                    methodname: (type === 'field') ? 'core_customfield_delete_field' : 'core_customfield_delete_category',\r\n                    args: {id},\r\n                },\r\n                {methodname: 'core_customfield_reload_template', args: {component, area, itemid}}\r\n            ])[1]\r\n            .then(response => Templates.render('core_customfield/list', response))\r\n            .then((html, js) => Templates.replaceNode(jQuery('[data-region=\"list-page\"]'), html, js))\r\n            .then(pendingDeletePromise.resolve)\r\n            .catch(Notification.exception);\r\n        });\r\n    })\r\n    .then(pendingPromise.resolve)\r\n    .catch(Notification.exception);\r\n};\r\n\r\n\r\n/**\r\n * Creates a new custom fields category with default name and updates the list\r\n *\r\n * @param {String} component\r\n * @param {String} area\r\n * @param {Number} itemid\r\n */\r\nconst createNewCategory = (component, area, itemid) => {\r\n    const pendingPromise = new Pending('core_customfield/form:createNewCategory');\r\n    const promises = fetchMany([\r\n        {methodname: 'core_customfield_create_category', args: {component, area, itemid}},\r\n        {methodname: 'core_customfield_reload_template', args: {component, area, itemid}}\r\n    ]);\r\n\r\n    promises[1].then(response => Templates.render('core_customfield/list', response))\r\n    .then((html, js) => Templates.replaceNode(jQuery('[data-region=\"list-page\"]'), html, js))\r\n    .then(() => pendingPromise.resolve())\r\n    .catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Create new custom field\r\n *\r\n * @param {HTMLElement} element\r\n * @param {String} component\r\n * @param {String} area\r\n * @param {Number} itemid\r\n */\r\nconst createNewField = (element, component, area, itemid) => {\r\n    const pendingPromise = new Pending('core_customfield/form:createNewField');\r\n\r\n    const returnFocus = element.closest(\".action-menu\").querySelector(\".dropdown-toggle\");\r\n    const form = new ModalForm({\r\n        formClass: \"core_customfield\\\\field_config_form\",\r\n        args: {\r\n            categoryid: element.getAttribute('data-categoryid'),\r\n            type: element.getAttribute('data-type'),\r\n        },\r\n        modalConfig: {\r\n            title: getString('addingnewcustomfield', 'core_customfield', element.getAttribute('data-typename')),\r\n        },\r\n        returnFocus,\r\n    });\r\n\r\n    form.addEventListener(form.events.FORM_SUBMITTED, () => {\r\n        const pendingCreatedPromise = new Pending('core_customfield/form:createdNewField');\r\n        const promises = fetchMany([\r\n            {methodname: 'core_customfield_reload_template', args: {component: component, area: area, itemid: itemid}}\r\n        ]);\r\n\r\n        promises[0].then(response => Templates.render('core_customfield/list', response))\r\n        .then((html, js) => Templates.replaceNode(jQuery('[data-region=\"list-page\"]'), html, js))\r\n        .then(() => pendingCreatedPromise.resolve())\r\n        .catch(() => window.location.reload());\r\n    });\r\n\r\n    form.show();\r\n\r\n    pendingPromise.resolve();\r\n};\r\n\r\n/**\r\n * Edit custom field\r\n *\r\n * @param {HTMLElement} element\r\n * @param {String} component\r\n * @param {String} area\r\n * @param {Number} itemid\r\n */\r\nconst editField = (element, component, area, itemid) => {\r\n    const pendingPromise = new Pending('core_customfield/form:editField');\r\n\r\n    const form = new ModalForm({\r\n        formClass: \"core_customfield\\\\field_config_form\",\r\n        args: {\r\n            id: element.getAttribute('data-id'),\r\n        },\r\n        modalConfig: {\r\n            title: getString('editingfield', 'core_customfield', element.getAttribute('data-name')),\r\n        },\r\n        returnFocus: element,\r\n    });\r\n\r\n    form.addEventListener(form.events.FORM_SUBMITTED, () => {\r\n        const pendingCreatedPromise = new Pending('core_customfield/form:createdNewField');\r\n        const promises = fetchMany([\r\n            {methodname: 'core_customfield_reload_template', args: {component: component, area: area, itemid: itemid}}\r\n        ]);\r\n\r\n        promises[0].then(response => Templates.render('core_customfield/list', response))\r\n        .then((html, js) => Templates.replaceNode(jQuery('[data-region=\"list-page\"]'), html, js))\r\n        .then(() => pendingCreatedPromise.resolve())\r\n        .catch(() => window.location.reload());\r\n    });\r\n\r\n    form.show();\r\n\r\n    pendingPromise.resolve();\r\n};\r\n\r\n/**\r\n * Fetch the category name from an inplace editable, given a child node of that field.\r\n *\r\n * @param {NodeElement} nodeElement\r\n * @returns {String}\r\n */\r\nconst getCategoryNameFor = nodeElement => nodeElement\r\n    .closest('[data-category-id]')\r\n    .find('[data-inplaceeditable][data-itemtype=category][data-component=core_customfield]')\r\n    .attr('data-value');\r\n\r\nconst setupSortableLists = rootNode => {\r\n    // Sort category.\r\n    const sortCat = new SortableList(\r\n        '#customfield_catlist .categorieslist',\r\n        {\r\n            moveHandlerSelector: '.movecategory [data-drag-type=move]',\r\n        }\r\n    );\r\n    sortCat.getElementName = nodeElement => Promise.resolve(getCategoryNameFor(nodeElement));\r\n\r\n    // Note: The sortable list currently uses jQuery events.\r\n    jQuery('[data-category-id]').on(SortableList.EVENTS.DROP, (evt, info) => {\r\n        if (info.positionChanged) {\r\n            const pendingPromise = new Pending('core_customfield/form:categoryid:on:sortablelist-drop');\r\n            fetchMany([{\r\n                methodname: 'core_customfield_move_category',\r\n                args: {\r\n                    id: info.element.data('category-id'),\r\n                    beforeid: info.targetNextElement.data('category-id')\r\n                }\r\n\r\n            }])[0]\r\n            .then(pendingPromise.resolve)\r\n            .catch(Notification.exception);\r\n        }\r\n        evt.stopPropagation(); // Important for nested lists to prevent multiple targets.\r\n    });\r\n\r\n    // Sort fields.\r\n    var sort = new SortableList(\r\n        '#customfield_catlist .fieldslist tbody',\r\n        {\r\n            moveHandlerSelector: '.movefield [data-drag-type=move]',\r\n        }\r\n    );\r\n\r\n    sort.getDestinationName = (parentElement, afterElement) => {\r\n        if (!afterElement.length) {\r\n            return getString('totopofcategory', 'customfield', getCategoryNameFor(parentElement));\r\n        } else if (afterElement.attr('data-field-name')) {\r\n            return getString('afterfield', 'customfield', afterElement.attr('data-field-name'));\r\n        } else {\r\n            return Promise.resolve('');\r\n        }\r\n    };\r\n\r\n    jQuery('[data-field-name]').on(SortableList.EVENTS.DROP, (evt, info) => {\r\n        if (info.positionChanged) {\r\n            const pendingPromise = new Pending('core_customfield/form:fieldname:on:sortablelist-drop');\r\n            fetchMany([{\r\n                methodname: 'core_customfield_move_field',\r\n                args: {\r\n                    id: info.element.data('field-id'),\r\n                    beforeid: info.targetNextElement.data('field-id'),\r\n                    categoryid: Number(info.targetList.closest('[data-category-id]').attr('data-category-id'))\r\n                },\r\n            }])[0]\r\n            .then(pendingPromise.resolve)\r\n            .catch(Notification.exception);\r\n        }\r\n        evt.stopPropagation(); // Important for nested lists to prevent multiple targets.\r\n    });\r\n\r\n    jQuery('[data-field-name]').on(SortableList.EVENTS.DRAG, evt => {\r\n        var pendingPromise = new Pending('core_customfield/form:fieldname:on:sortablelist-drag');\r\n\r\n        evt.stopPropagation(); // Important for nested lists to prevent multiple targets.\r\n\r\n        // Refreshing fields tables.\r\n        Templates.render('core_customfield/nofields', {})\r\n        .then(html => {\r\n            rootNode.querySelectorAll('.categorieslist > *')\r\n            .forEach(category => {\r\n                const fields = category.querySelectorAll('.field:not(.sortable-list-is-dragged)');\r\n                const noFields = category.querySelector('.nofields');\r\n\r\n                if (!fields.length && !noFields) {\r\n                    category.querySelector('tbody').innerHTML = html;\r\n                } else if (fields.length && noFields) {\r\n                    noFields.remove();\r\n                }\r\n            });\r\n            return;\r\n        })\r\n        .then(pendingPromise.resolve)\r\n        .catch(Notification.exception);\r\n    });\r\n\r\n    jQuery('[data-category-id], [data-field-name]').on(SortableList.EVENTS.DRAGSTART, (evt, info) => {\r\n        setTimeout(() => {\r\n            jQuery('.sortable-list-is-dragged').width(info.element.width());\r\n        }, 501);\r\n    });\r\n};\r\n\r\n/**\r\n * Initialise the custom fields manager.\r\n */\r\nexport const init = () => {\r\n    const rootNode = document.querySelector('#customfield_catlist');\r\n\r\n    const component = rootNode.dataset.component;\r\n    const area = rootNode.dataset.area;\r\n    const itemid = rootNode.dataset.itemid;\r\n\r\n    rootNode.addEventListener('click', e => {\r\n        const roleHolder = e.target.closest('[data-role]');\r\n        if (!roleHolder) {\r\n            return;\r\n        }\r\n\r\n        if (roleHolder.dataset.role === 'deletefield') {\r\n            e.preventDefault();\r\n\r\n            confirmDelete(roleHolder.dataset.id, 'field', component, area, itemid);\r\n            return;\r\n        }\r\n\r\n        if (roleHolder.dataset.role === 'deletecategory') {\r\n            e.preventDefault();\r\n\r\n            confirmDelete(roleHolder.dataset.id, 'category', component, area, itemid);\r\n            return;\r\n        }\r\n\r\n        if (roleHolder.dataset.role === 'addnewcategory') {\r\n            e.preventDefault();\r\n            createNewCategory(component, area, itemid);\r\n\r\n            return;\r\n        }\r\n\r\n        if (roleHolder.dataset.role === 'addfield') {\r\n            e.preventDefault();\r\n            createNewField(roleHolder, component, area, itemid);\r\n\r\n            return;\r\n        }\r\n\r\n        if (roleHolder.dataset.role === 'editfield') {\r\n            e.preventDefault();\r\n            editField(roleHolder, component, area, itemid);\r\n\r\n            return;\r\n        }\r\n    });\r\n\r\n    setupSortableLists(rootNode, component, area, itemid);\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_modalform","_notification","_pending","_sortable_list","_templates","_jquery","confirmDelete","id","type","component","area","itemid","pendingPromise","Pending","getStrings","key","then","strings","Notification","confirm","pendingDeletePromise","fetchMany","methodname","args","response","Templates","render","html","js","replaceNode","jQuery","resolve","catch","exception","getCategoryNameFor","nodeElement","closest","find","attr","_exports","init","rootNode","document","querySelector","dataset","addEventListener","roleHolder","target","role","preventDefault","createNewCategory","createNewField","element","returnFocus","form","ModalForm","formClass","categoryid","getAttribute","modalConfig","title","getString","events","FORM_SUBMITTED","pendingCreatedPromise","window","location","reload","show","editField","SortableList","moveHandlerSelector","getElementName","Promise","on","EVENTS","DROP","evt","info","positionChanged","data","beforeid","targetNextElement","stopPropagation","getDestinationName","parentElement","afterElement","length","Number","targetList","DRAG","querySelectorAll","forEach","category","fields","noFields","remove","innerHTML","DRAGSTART","setTimeout","width","setupSortableLists"],"mappings":"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"}