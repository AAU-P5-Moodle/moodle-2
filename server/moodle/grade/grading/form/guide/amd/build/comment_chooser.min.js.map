{"version":3,"file":"comment_chooser.min.js","sources":["../src/comment_chooser.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * AMD code for the frequently used comments chooser for the marking guide grading form.\r\n *\r\n * @module     gradingform_guide/comment_chooser\r\n * @copyright  2015 Jun Pataleta <jun@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/templates', 'core/key_codes', 'core/notification', 'core/yui'],\r\n        function($, templates, keycodes, notification) {\r\n\r\n    // Private variables and functions.\r\n\r\n    return /** @alias module:gradingform_guide/comment_chooser */ {\r\n        // Public variables and functions.\r\n        /**\r\n         * Initialises the module.\r\n         *\r\n         * Basically, it performs the binding and handling of the button click event for\r\n         * the 'Insert frequently used comment' button.\r\n         *\r\n         * @param {Integer} criterionId The criterion ID.\r\n         * @param {String} buttonId The element ID of the button which the handler will be bound to.\r\n         * @param {String} remarkId The element ID of the remark text area where the text of the selected comment will be copied to.\r\n         * @param {Array} commentOptions The array of frequently used comments to be used as options.\r\n         */\r\n        initialise: function(criterionId, buttonId, remarkId, commentOptions) {\r\n            /**\r\n             * Display the chooser dialog using the compiled HTML from the mustache template\r\n             * and binds onclick events for the generated comment options.\r\n             *\r\n             * @param {String} compiledSource The compiled HTML from the mustache template\r\n             * @param {Array} comments Array containing comments.\r\n             */\r\n            function displayChooserDialog(compiledSource, comments) {\r\n                var titleLabel = '<label>' + M.util.get_string('insertcomment', 'gradingform_guide') + '</label>';\r\n                var cancelButtonId = 'comment-chooser-' + criterionId + '-cancel';\r\n                var cancelButton = '<button id=\"' + cancelButtonId + '\">' + M.util.get_string('cancel', 'moodle') + '</button>';\r\n\r\n                // Set dialog's body content.\r\n                var chooserDialog = new M.core.dialogue({\r\n                    modal: true,\r\n                    headerContent: titleLabel,\r\n                    bodyContent: compiledSource,\r\n                    footerContent: cancelButton,\r\n                    focusAfterHide: '#' + remarkId,\r\n                    id: \"comments-chooser-dialog-\" + criterionId\r\n                });\r\n\r\n                // Bind click event to the cancel button.\r\n                $(\"#\" + cancelButtonId).click(function() {\r\n                    chooserDialog.hide();\r\n                });\r\n\r\n                // Loop over each comment item and bind click events.\r\n                $.each(comments, function(index, comment) {\r\n                    var commentOptionId = '#comment-option-' + criterionId + '-' + comment.id;\r\n\r\n                    // Delegate click event for the generated option link.\r\n                    $(commentOptionId).click(function() {\r\n                        var remarkTextArea = $('#' + remarkId);\r\n                        var remarkText = remarkTextArea.val();\r\n\r\n                        // Add line break if the current value of the remark text is not empty.\r\n                        if (remarkText.trim() !== '') {\r\n                            remarkText += '\\n';\r\n                        }\r\n                        remarkText += comment.description;\r\n\r\n                        remarkTextArea.val(remarkText);\r\n\r\n                        chooserDialog.hide();\r\n                    });\r\n\r\n                    // Handle keypress on list items.\r\n                    $(document).off('keypress', commentOptionId).on('keypress', commentOptionId, function() {\r\n                        var keyCode = event.which || event.keyCode;\r\n\r\n                        // Trigger click event when user presses space.\r\n                        if (keyCode === keycodes.space) {\r\n                            $(commentOptionId).click();\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // Destroy the dialog when it is hidden to allow the grading section to\r\n                // be loaded as a fragment multiple times within the same page.\r\n                chooserDialog.after('visibleChange', function(e) {\r\n                    // Going from visible to hidden.\r\n                    if (e.prevVal && !e.newVal) {\r\n                        this.destroy();\r\n                    }\r\n                }, chooserDialog);\r\n\r\n                // Show dialog.\r\n                chooserDialog.show();\r\n            }\r\n\r\n            /**\r\n             * Generates the comments chooser dialog from the grading_form/comment_chooser mustache template.\r\n             */\r\n            function generateCommentsChooser() {\r\n                // Template context.\r\n                var context = {\r\n                    criterionId: criterionId,\r\n                    comments: commentOptions\r\n                };\r\n\r\n                // Render the template and display the comment chooser dialog.\r\n                templates.render('gradingform_guide/comment_chooser', context)\r\n                    .done(function(compiledSource) {\r\n                        displayChooserDialog(compiledSource, commentOptions);\r\n                    })\r\n                    .fail(notification.exception);\r\n            }\r\n\r\n            // Bind click event for the comments chooser button.\r\n            $(\"#\" + buttonId).click(function(e) {\r\n                e.preventDefault();\r\n                generateCommentsChooser();\r\n            });\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","templates","keycodes","notification","initialise","criterionId","buttonId","remarkId","commentOptions","generateCommentsChooser","context","comments","render","done","compiledSource","titleLabel","M","util","get_string","cancelButtonId","cancelButton","chooserDialog","core","dialogue","modal","headerContent","bodyContent","footerContent","focusAfterHide","id","click","hide","each","index","comment","commentOptionId","remarkTextArea","remarkText","val","trim","description","document","off","on","event","which","keyCode","space","after","e","prevVal","newVal","this","destroy","show","displayChooserDialog","fail","exception","preventDefault"],"mappings":";;;;;;;AAsBAA,OAAM,oCAAC,CAAC,SAAU,iBAAkB,iBAAkB,oBAAqB,aACnE,SAASC,EAAGC,UAAWC,SAAUC,cAIrC,MAA8D,CAa1DC,WAAY,SAASC,YAAaC,SAAUC,SAAUC,gBA2ElD,SAASC,0BAEL,IAAIC,QAAU,CACVL,YAAaA,YACbM,SAAUH,gBAIdP,UAAUW,OAAO,oCAAqCF,SACjDG,MAAK,SAASC,iBA5EvB,SAA8BA,eAAgBH,UAC1C,IAAII,WAAa,UAAYC,EAAEC,KAAKC,WAAW,gBAAiB,qBAAuB,WACnFC,eAAiB,mBAAqBd,YAAc,UACpDe,aAAe,eAAiBD,eAAiB,KAAOH,EAAEC,KAAKC,WAAW,SAAU,UAAY,YAGhGG,cAAgB,IAAIL,EAAEM,KAAKC,SAAS,CACpCC,OAAO,EACPC,cAAeV,WACfW,YAAaZ,eACba,cAAeP,aACfQ,eAAgB,IAAMrB,SACtBsB,GAAI,2BAA6BxB,cAIrCL,EAAE,IAAMmB,gBAAgBW,OAAM,WAC1BT,cAAcU,MAClB,IAGA/B,EAAEgC,KAAKrB,UAAU,SAASsB,MAAOC,SAC7B,IAAIC,gBAAkB,mBAAqB9B,YAAc,IAAM6B,QAAQL,GAGvE7B,EAAEmC,iBAAiBL,OAAM,WACrB,IAAIM,eAAiBpC,EAAE,IAAMO,UACzB8B,WAAaD,eAAeE,MAGN,KAAtBD,WAAWE,SACXF,YAAc,MAElBA,YAAcH,QAAQM,YAEtBJ,eAAeE,IAAID,YAEnBhB,cAAcU,MAClB,IAGA/B,EAAEyC,UAAUC,IAAI,WAAYP,iBAAiBQ,GAAG,WAAYR,iBAAiB,YAC3DS,MAAMC,OAASD,MAAME,WAGnB5C,SAAS6C,OACrB/C,EAAEmC,iBAAiBL,OAE3B,GACJ,IAIAT,cAAc2B,MAAM,iBAAiB,SAASC,GAEtCA,EAAEC,UAAYD,EAAEE,QAChBC,KAAKC,SAEZ,GAAEhC,eAGHA,cAAciC,MAClB,CAeYC,CAAqBzC,eAAgBN,eACxC,IACAgD,KAAKrD,aAAasD,UAC3B,CAGAzD,EAAE,IAAMM,UAAUwB,OAAM,SAASmB,GAC7BA,EAAES,iBACFjD,yBACJ,GACJ,EAER"}