{"version":3,"file":"basewidget.min.js","sources":["../../src/searchwidget/basewidget.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A widget to search users or grade items within the gradebook.\r\n *\r\n * @module    core_grades/searchwidget/basewidget\r\n * @copyright 2022 Mathew May <mathew.solutions>\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport {debounce} from 'core/utils';\r\nimport * as Templates from 'core/templates';\r\nimport * as Selectors from 'core_grades/searchwidget/selectors';\r\nimport Notification from 'core/notification';\r\nimport Log from 'core/log';\r\n\r\n/**\r\n * Build the base searching widget.\r\n *\r\n * @method init\r\n * @param {HTMLElement} widgetContentContainer The selector for the widget container element.\r\n * @param {Promise} bodyPromise The promise from the callee of the contents to place in the widget container.\r\n * @param {Array} data An array of all the data generated by the callee.\r\n * @param {Function} searchFunc Partially applied function we need to manage search the passed dataset.\r\n * @param {string|null} unsearchableContent The content rendered in a non-searchable area.\r\n * @param {Function|null} afterSelect Callback executed after an item is selected.\r\n */\r\nexport const init = async(\r\n    widgetContentContainer,\r\n    bodyPromise,\r\n    data,\r\n    searchFunc,\r\n    unsearchableContent = null,\r\n    afterSelect = null,\r\n) => {\r\n    Log.debug('The core_grades/searchwidget/basewidget component is deprecated. Please refer to core/search_combobox() instead.');\r\n    bodyPromise.then(async(bodyContent) => {\r\n        // Render the body content.\r\n        widgetContentContainer.innerHTML = bodyContent;\r\n\r\n        // Render the unsearchable content if defined.\r\n        if (unsearchableContent) {\r\n            const unsearchableContentContainer = widgetContentContainer.querySelector(Selectors.regions.unsearchableContent);\r\n            unsearchableContentContainer.innerHTML += unsearchableContent;\r\n        }\r\n\r\n        const searchResultsContainer = widgetContentContainer.querySelector(Selectors.regions.searchResults);\r\n        // Display a loader until the search results are rendered.\r\n        await showLoader(searchResultsContainer);\r\n        // Render the search results.\r\n        await renderSearchResults(searchResultsContainer, data);\r\n\r\n        registerListenerEvents(widgetContentContainer, data, searchFunc, afterSelect);\r\n\r\n    }).catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Register the event listeners for the search widget.\r\n *\r\n * @method registerListenerEvents\r\n * @param {HTMLElement} widgetContentContainer The selector for the widget container element.\r\n * @param {Array} data An array of all the data generated by the callee.\r\n * @param {Function} searchFunc Partially applied function we need to manage search the passed dataset.\r\n * @param {Function|null} afterSelect Callback executed after an item is selected.\r\n */\r\nexport const registerListenerEvents = (widgetContentContainer, data, searchFunc, afterSelect = null) => {\r\n    const searchResultsContainer = widgetContentContainer.querySelector(Selectors.regions.searchResults);\r\n    const searchInput = widgetContentContainer.querySelector(Selectors.actions.search);\r\n\r\n    if (!searchInput) {\r\n        // Too late. The widget is already closed and its content is empty.\r\n        return;\r\n    }\r\n\r\n    // We want to focus on the first known user interable element within the dropdown.\r\n    searchInput.focus();\r\n    const clearSearchButton = widgetContentContainer.querySelector(Selectors.actions.clearSearch);\r\n\r\n    // The search input is triggered.\r\n    searchInput.addEventListener('input', debounce(async() => {\r\n        // If search query is present display the 'clear search' button, otherwise hide it.\r\n        if (searchInput.value.length > 0) {\r\n            clearSearchButton.classList.remove('d-none');\r\n        } else {\r\n            clearSearchButton.classList.add('d-none');\r\n        }\r\n        // Remove aria-activedescendant when the available options change.\r\n        searchInput.removeAttribute('aria-activedescendant');\r\n        // Display the search results.\r\n        await renderSearchResults(\r\n            searchResultsContainer,\r\n            debounceCallee(\r\n                searchInput.value,\r\n                data,\r\n                searchFunc()\r\n            )\r\n        );\r\n    }, 300));\r\n\r\n    // Clear search is triggered.\r\n    clearSearchButton.addEventListener('click', async(e) => {\r\n        e.stopPropagation();\r\n        // Clear the entered search query in the search bar.\r\n        searchInput.value = \"\";\r\n        searchInput.focus();\r\n        clearSearchButton.classList.add('d-none');\r\n\r\n        // Remove aria-activedescendant when the available options change.\r\n        searchInput.removeAttribute('aria-activedescendant');\r\n\r\n        // Display all results.\r\n        await renderSearchResults(\r\n            searchResultsContainer,\r\n            debounceCallee(\r\n                searchInput.value,\r\n                data,\r\n                searchFunc()\r\n            )\r\n        );\r\n    });\r\n\r\n    const inputElement = document.getElementById(searchInput.dataset.inputElement);\r\n    if (inputElement && afterSelect) {\r\n        inputElement.addEventListener('change', e => {\r\n            const selectedOption = widgetContentContainer.querySelector(\r\n                Selectors.elements.getSearchWidgetSelectOption(searchInput),\r\n            );\r\n\r\n            if (selectedOption) {\r\n                afterSelect(e.target.value);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Backward compatibility. Handle the click event for the following cases:\r\n    // - When we have <li> tags without an afterSelect callback function being provided (old js).\r\n    // - When we have <a> tags without href (old template).\r\n    widgetContentContainer.addEventListener('click', e => {\r\n        const deprecatedOption = e.target.closest(\r\n            'a.dropdown-item[role=\"menuitem\"]:not([href]), .dropdown-item[role=\"option\"]:not([href])'\r\n        );\r\n        if (deprecatedOption) {\r\n            // We are in one of these situations:\r\n            // - We have <li> tags without an afterSelect callback function being provided.\r\n            // - We have <a> tags without href.\r\n            if (inputElement && afterSelect) {\r\n                afterSelect(deprecatedOption.dataset.value);\r\n            } else {\r\n                const url = (data.find(object => object.id == deprecatedOption.dataset.value) || {url: ''}).url;\r\n                location.href = url;\r\n            }\r\n        }\r\n    });\r\n\r\n    // Backward compatibility. Handle the keydown event for the following cases:\r\n    // - When we have <li> tags without an afterSelect callback function being provided (old js).\r\n    // - When we have <a> tags without href (old template).\r\n    widgetContentContainer.addEventListener('keydown', e => {\r\n        const deprecatedOption = e.target.closest(\r\n            'a.dropdown-item[role=\"menuitem\"]:not([href]), .dropdown-item[role=\"option\"]:not([href])'\r\n        );\r\n        if (deprecatedOption && (e.key === ' ' || e.key === 'Enter')) {\r\n            // We are in one of these situations:\r\n            // - We have <li> tags without an afterSelect callback function being provided.\r\n            // - We have <a> tags without href.\r\n            e.preventDefault();\r\n            if (inputElement && afterSelect) {\r\n                afterSelect(deprecatedOption.dataset.value);\r\n            } else {\r\n                const url = (data.find(object => object.id == deprecatedOption.dataset.value) || {url: ''}).url;\r\n                location.href = url;\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Renders the loading placeholder for the search widget.\r\n *\r\n * @method showLoader\r\n * @param {HTMLElement} container The DOM node where we'll render the loading placeholder.\r\n */\r\nexport const showLoader = async(container) => {\r\n    container.innerHTML = '';\r\n    const {html, js} = await Templates.renderForPromise('core_grades/searchwidget/loading', {});\r\n    Templates.replaceNodeContents(container, html, js);\r\n};\r\n\r\n/**\r\n * We have a small helper that'll call the curried search function allowing callers to filter\r\n * the data set however we want rather than defining how data must be filtered.\r\n *\r\n * @method debounceCallee\r\n * @param {String} searchValue The input from the user that we'll search against.\r\n * @param {Array} data An array of all the data generated by the callee.\r\n * @param {Function} searchFunction Partially applied function we need to manage search the passed dataset.\r\n * @return {Array} The filtered subset of the provided data that we'll then render into the results.\r\n */\r\nconst debounceCallee = (searchValue, data, searchFunction) => {\r\n    if (searchValue.length > 0) { // Search query is present.\r\n        return searchFunction(data, searchValue);\r\n    }\r\n    return data;\r\n};\r\n\r\n/**\r\n * Given the output of the callers' search function, render out the results into the search results container.\r\n *\r\n * @method renderSearchResults\r\n * @param {HTMLElement} searchResultsContainer The DOM node of the widget where we'll render the provided results.\r\n * @param {Array} searchResultsData The filtered subset of the provided data that we'll then render into the results.\r\n */\r\nconst renderSearchResults = async(searchResultsContainer, searchResultsData) => {\r\n    const templateData = {\r\n        'searchresults': searchResultsData,\r\n    };\r\n    // Build up the html & js ready to place into the help section.\r\n    const {html, js} = await Templates.renderForPromise('core_grades/searchwidget/searchresults', templateData);\r\n    await Templates.replaceNodeContents(searchResultsContainer, html, js);\r\n\r\n    // Backward compatibility.\r\n    if (searchResultsContainer.getAttribute('role') !== 'listbox') {\r\n        const deprecatedOptions = searchResultsContainer.querySelectorAll(\r\n            'a.dropdown-item[role=\"menuitem\"][href=\"\"], .dropdown-item[role=\"option\"]:not([href])'\r\n        );\r\n        for (const option of deprecatedOptions) {\r\n            option.tabIndex = 0;\r\n            option.removeAttribute('href');\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * We want to create the basic promises and hooks that the caller will implement, so we can build the search widget\r\n * ahead of time and allow the caller to resolve their promises once complete.\r\n *\r\n * @method promisesAndResolvers\r\n * @returns {{bodyPromise: Promise, bodyPromiseResolver}}\r\n */\r\nexport const promisesAndResolvers = () => {\r\n    // We want to show the widget instantly but loading whilst waiting for our data.\r\n    let bodyPromiseResolver;\r\n    const bodyPromise = new Promise(resolve => {\r\n        bodyPromiseResolver = resolve;\r\n    });\r\n\r\n    return {bodyPromiseResolver, bodyPromise};\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","_interopRequireWildcard","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","Templates","Selectors","_notification","_log","_exports","init","async","widgetContentContainer","bodyPromise","data","searchFunc","unsearchableContent","arguments","length","undefined","afterSelect","Log","debug","then","innerHTML","bodyContent","querySelector","regions","searchResultsContainer","searchResults","showLoader","renderSearchResults","registerListenerEvents","catch","Notification","exception","searchInput","actions","search","focus","clearSearchButton","clearSearch","addEventListener","debounce","value","classList","remove","add","removeAttribute","debounceCallee","stopPropagation","inputElement","document","getElementById","dataset","elements","getSearchWidgetSelectOption","target","deprecatedOption","closest","url","find","object","id","location","href","key","preventDefault","container","html","js","renderForPromise","replaceNodeContents","searchValue","searchFunction","searchResultsData","templateData","searchresults","getAttribute","deprecatedOptions","querySelectorAll","option","tabIndex","promisesAndResolvers","bodyPromiseResolver","Promise","resolve"],"mappings":"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"}