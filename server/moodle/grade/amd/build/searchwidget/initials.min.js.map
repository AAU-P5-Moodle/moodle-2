{"version":3,"file":"initials.min.js","sources":["../../src/searchwidget/initials.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A small dropdown to filter users within the gradebook.\r\n *\r\n * @module    core_grades/searchwidget/initials\r\n * @copyright 2022 Mathew May <mathew.solutions>\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Pending from 'core/pending';\r\nimport * as Url from 'core/url';\r\nimport CustomEvents from \"core/custom_interaction_events\";\r\nimport $ from 'jquery';\r\n\r\n/**\r\n * Whether the event listener has already been registered for this module.\r\n *\r\n * @type {boolean}\r\n */\r\nlet registered = false;\r\n\r\n// Contain our selectors within this file until they could be of use elsewhere.\r\nconst selectors = {\r\n    pageListItem: 'page-item',\r\n    pageClickableItem: '.page-link',\r\n    activeItem: 'active',\r\n    formDropdown: '.initialsdropdownform',\r\n    parentDomNode: '.initials-selector',\r\n    firstInitial: 'firstinitial',\r\n    lastInitial: 'lastinitial',\r\n    initialBars: '.initialbar', // Both first and last name use this class.\r\n    targetButton: 'initialswidget',\r\n    formItems: {\r\n        type: 'submit',\r\n        save: 'save',\r\n        cancel: 'cancel'\r\n    }\r\n};\r\n\r\n/**\r\n * Our initial hook into the module which will eventually allow us to handle the dropdown initials bar form.\r\n *\r\n * @param {String} callingLink The link to redirect upon form submission.\r\n * @param {Null|Number} gpr_userid The user id to filter by.\r\n * @param {Null|String} gpr_search The search value to filter by.\r\n */\r\nexport const init = (callingLink, gpr_userid = null, gpr_search = null) => {\r\n    if (registered) {\r\n        return;\r\n    }\r\n    const pendingPromise = new Pending();\r\n    registerListenerEvents(callingLink, gpr_userid, gpr_search);\r\n    // BS events always bubble so, we need to listen for the event higher up the chain.\r\n    $(selectors.parentDomNode).on('shown.bs.dropdown', () => {\r\n        document.querySelector(selectors.pageClickableItem).focus({preventScroll: true});\r\n    });\r\n    pendingPromise.resolve();\r\n    registered = true;\r\n};\r\n\r\n/**\r\n * Register event listeners.\r\n *\r\n * @param {String} callingLink The link to redirect upon form submission.\r\n * @param {Null|Number} gpr_userid The user id to filter by.\r\n * @param {Null|String} gpr_search The search value to filter by.\r\n */\r\nconst registerListenerEvents = (callingLink, gpr_userid = null, gpr_search = null) => {\r\n    const events = [\r\n        'click',\r\n        CustomEvents.events.activate,\r\n        CustomEvents.events.keyboardActivate\r\n    ];\r\n    CustomEvents.define(document, events);\r\n\r\n    // Register events.\r\n    events.forEach((event) => {\r\n        document.addEventListener(event, (e) => {\r\n            // Always fetch the latest information when we click as state is a fickle thing.\r\n            let {firstActive, lastActive, sifirst, silast} = onClickVariables();\r\n            let itemToReset = '';\r\n\r\n            // Prevent the usual form behaviour.\r\n            if (e.target.closest(selectors.formDropdown)) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            // Handle the state of active initials before form submission.\r\n            if (e.target.closest(`${selectors.formDropdown} .${selectors.pageListItem}`)) {\r\n                // Ensure the li items don't cause weird clicking emptying out the form.\r\n                if (e.target.classList.contains(selectors.pageListItem)) {\r\n                    return;\r\n                }\r\n\r\n                const initialsBar = e.target.closest(selectors.initialBars); // Find out which initial bar we are in.\r\n\r\n                // We want to find the current active item in the menu area the user selected.\r\n                // We also want to fetch the raw item out of the array for instant manipulation.\r\n                if (initialsBar.classList.contains(selectors.firstInitial)) {\r\n                    sifirst = e.target;\r\n                    itemToReset = firstActive;\r\n                } else {\r\n                    silast = e.target;\r\n                    itemToReset = lastActive;\r\n                }\r\n                swapActiveItems(itemToReset, e);\r\n            }\r\n\r\n            // Handle form submissions.\r\n            if (e.target.closest(`${selectors.formDropdown}`) && e.target.type === selectors.formItems.type) {\r\n                if (e.target.dataset.action === selectors.formItems.save) {\r\n                    // Ensure we strip out the value (All) as it messes with the PHP side of the initials bar.\r\n                    // Then we will redirect the user back onto the page with new filters applied.\r\n                    const params = {\r\n                        'id': e.target.closest(selectors.formDropdown).dataset.courseid,\r\n                        'gpr_search': gpr_search !== null ? gpr_search : '',\r\n                        'sifirst': sifirst.parentElement.classList.contains('initialbarall') ? '' : sifirst.value,\r\n                        'silast': silast.parentElement.classList.contains('initialbarall') ? '' : silast.value,\r\n                    };\r\n                    if (gpr_userid !== null) {\r\n                        params.gpr_userid = gpr_userid;\r\n                    }\r\n                    window.location = Url.relativeUrl(callingLink, params);\r\n                }\r\n                if (e.target.dataset.action === selectors.formItems.cancel) {\r\n                    $(`.${selectors.targetButton}`).dropdown('toggle');\r\n                }\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\n * A small abstracted helper function which allows us to ensure we have up-to-date lists of nodes.\r\n *\r\n * @returns {{firstActive: HTMLElement, lastActive: HTMLElement, sifirst: ?String, silast: ?String}}\r\n */\r\nconst onClickVariables = () => {\r\n    // Ensure we have an up-to-date initials bar.\r\n    const firstItems = [...document.querySelectorAll(`.${selectors.firstInitial} li`)];\r\n    const lastItems = [...document.querySelectorAll(`.${selectors.lastInitial} li`)];\r\n    const firstActive = firstItems.filter((item) => item.classList.contains(selectors.activeItem))[0];\r\n    const lastActive = lastItems.filter((item) => item.classList.contains(selectors.activeItem))[0];\r\n    // Ensure we retain both of the selections from a previous instance.\r\n    let sifirst = firstActive.querySelector(selectors.pageClickableItem);\r\n    let silast = lastActive.querySelector(selectors.pageClickableItem);\r\n    return {firstActive, lastActive, sifirst, silast};\r\n};\r\n\r\n/**\r\n * Given we are provided the old li and current click event, swap around the active properties.\r\n *\r\n * @param {HTMLElement} itemToReset\r\n * @param {Event} e\r\n */\r\nconst swapActiveItems = (itemToReset, e) => {\r\n    itemToReset.classList.remove(selectors.activeItem);\r\n    itemToReset.querySelector(selectors.pageClickableItem).ariaCurrent = false;\r\n\r\n    // Set the select item as the current item.\r\n    const itemToSetActive = e.target.parentElement;\r\n    itemToSetActive.classList.add(selectors.activeItem);\r\n    e.target.ariaCurrent = true;\r\n};\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","__esModule","default","_pending","Url","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_custom_interaction_events","_jquery","registered","selectors","type","save","cancel","_exports","init","callingLink","gpr_userid","arguments","length","undefined","gpr_search","pendingPromise","Pending","registerListenerEvents","$","on","document","querySelector","focus","preventScroll","resolve","events","CustomEvents","activate","keyboardActivate","define","forEach","event","addEventListener","firstActive","lastActive","sifirst","silast","onClickVariables","itemToReset","target","closest","preventDefault","classList","contains","swapActiveItems","dataset","action","params","id","courseid","parentElement","value","window","location","relativeUrl","dropdown","firstItems","querySelectorAll","lastItems","filter","item","remove","ariaCurrent","add"],"mappings":"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"}