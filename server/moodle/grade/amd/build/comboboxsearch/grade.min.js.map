{"version":3,"file":"grade.min.js","sources":["../../src/comboboxsearch/grade.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Allow the user to search for grades within the grade area.\r\n *\r\n * @module    core_grades/comboboxsearch/grade\r\n * @copyright 2023 Mathew May <mathew.solutions>\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport search_combobox from 'core/comboboxsearch/search_combobox';\r\nimport * as Repository from 'core_grades/searchwidget/repository';\r\nimport {renderForPromise, replaceNodeContents} from 'core/templates';\r\nimport {debounce} from 'core/utils';\r\n\r\nexport default class GradeItemSearch extends search_combobox {\r\n\r\n    courseID;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        // Define our standard lookups.\r\n        this.selectors = {\r\n            ...this.selectors,\r\n            courseid: '[data-region=\"courseid\"]',\r\n            placeholder: '.gradesearchdropdown [data-region=\"searchplaceholder\"]',\r\n        };\r\n        const component = document.querySelector(this.componentSelector());\r\n        this.courseID = component.querySelector(this.selectors.courseid).dataset.courseid;\r\n        this.instance = this.component.querySelector(this.selectors.instance).dataset.instance;\r\n\r\n        const searchValueElement = this.component.querySelector(`#${this.searchInput.dataset.inputElement}`);\r\n        searchValueElement.addEventListener('change', () => {\r\n            this.toggleDropdown(); // Otherwise the dropdown stays open when user choose an option using keyboard.\r\n\r\n            const valueElement = this.component.querySelector(`#${this.combobox.dataset.inputElement}`);\r\n            if (valueElement.value !== searchValueElement.value) {\r\n                valueElement.value = searchValueElement.value;\r\n                valueElement.dispatchEvent(new Event('change', {bubbles: true}));\r\n            }\r\n\r\n            searchValueElement.value = '';\r\n        });\r\n\r\n        this.$component.on('hide.bs.dropdown', () => {\r\n            this.searchInput.removeAttribute('aria-activedescendant');\r\n\r\n            const listbox = document.querySelector(`#${this.searchInput.getAttribute('aria-controls')}[role=\"listbox\"]`);\r\n            listbox.querySelectorAll('.active[role=\"option\"]').forEach(option => {\r\n                option.classList.remove('active');\r\n            });\r\n            listbox.scrollTop = 0;\r\n\r\n            // Use setTimeout to make sure the following code is executed after the click event is handled.\r\n            setTimeout(() => {\r\n                if (this.searchInput.value !== '') {\r\n                    this.searchInput.value = '';\r\n                    this.searchInput.dispatchEvent(new Event('input', {bubbles: true}));\r\n                }\r\n            });\r\n        });\r\n\r\n        this.renderDefault();\r\n    }\r\n\r\n    static init() {\r\n        return new GradeItemSearch();\r\n    }\r\n\r\n    /**\r\n     * The overall div that contains the searching widget.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    componentSelector() {\r\n        return '.grade-search';\r\n    }\r\n\r\n    /**\r\n     * The dropdown div that contains the searching widget result space.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    dropdownSelector() {\r\n        return '.gradesearchdropdown';\r\n    }\r\n\r\n    /**\r\n     * Build the content then replace the node.\r\n     */\r\n    async renderDropdown() {\r\n        const {html, js} = await renderForPromise('core/local/comboboxsearch/resultset', {\r\n            instance: this.instance,\r\n            results: this.getMatchedResults(),\r\n            hasresults: this.getMatchedResults().length > 0,\r\n            searchterm: this.getSearchTerm(),\r\n        });\r\n        replaceNodeContents(this.selectors.placeholder, html, js);\r\n        // Remove aria-activedescendant when the available options change.\r\n        this.searchInput.removeAttribute('aria-activedescendant');\r\n    }\r\n\r\n    /**\r\n     * Build the content then replace the node by default we want our form to exist.\r\n     */\r\n    async renderDefault() {\r\n        this.setMatchedResults(await this.filterDataset(await this.getDataset()));\r\n        this.filterMatchDataset();\r\n\r\n        await this.renderDropdown();\r\n\r\n        this.updateNodes();\r\n        this.registerInputEvents();\r\n    }\r\n\r\n    /**\r\n     * Get the data we will be searching against in this component.\r\n     *\r\n     * @returns {Promise<*>}\r\n     */\r\n    async fetchDataset() {\r\n        return await Repository.gradeitemFetch(this.courseID).then((r) => r.gradeitems);\r\n    }\r\n\r\n    /**\r\n     * Dictate to the search component how and what we want to match upon.\r\n     *\r\n     * @param {Array} filterableData\r\n     * @returns {Array} The users that match the given criteria.\r\n     */\r\n    async filterDataset(filterableData) {\r\n        // Sometimes we just want to show everything.\r\n        if (this.getPreppedSearchTerm() === '') {\r\n            return filterableData;\r\n        }\r\n        return filterableData.filter((grade) => Object.keys(grade).some((key) => {\r\n            if (grade[key] === \"\") {\r\n                return false;\r\n            }\r\n            return grade[key].toString().toLowerCase().includes(this.getPreppedSearchTerm());\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Given we have a subset of the dataset, set the field that we matched upon to inform the end user.\r\n     */\r\n    filterMatchDataset() {\r\n        this.setMatchedResults(\r\n            this.getMatchedResults().map((grade) => {\r\n                return {\r\n                    id: grade.id,\r\n                    name: grade.name,\r\n                };\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Handle any keyboard inputs.\r\n     */\r\n    registerInputEvents() {\r\n        // Register & handle the text input.\r\n        this.searchInput.addEventListener('input', debounce(async() => {\r\n            this.setSearchTerms(this.searchInput.value);\r\n            // We can also require a set amount of input before search.\r\n            if (this.searchInput.value === '') {\r\n                // Hide the \"clear\" search button in the search bar.\r\n                this.clearSearchButton.classList.add('d-none');\r\n            } else {\r\n                // Display the \"clear\" search button in the search bar.\r\n                this.clearSearchButton.classList.remove('d-none');\r\n            }\r\n            // User has given something for us to filter against.\r\n            await this.filterrenderpipe();\r\n        }, 300));\r\n    }\r\n\r\n    /**\r\n     * The handler for when a user interacts with the component.\r\n     *\r\n     * @param {MouseEvent} e The triggering event that we are working with.\r\n     */\r\n    async clickHandler(e) {\r\n        if (e.target.closest(this.selectors.clearSearch)) {\r\n            e.stopPropagation();\r\n            // Clear the entered search query in the search bar.\r\n            this.searchInput.value = '';\r\n            this.setSearchTerms(this.searchInput.value);\r\n            this.searchInput.focus();\r\n            this.clearSearchButton.classList.add('d-none');\r\n            // Display results.\r\n            await this.filterrenderpipe();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The handler for when a user changes the value of the component (selects an option from the dropdown).\r\n     *\r\n     * @param {Event} e The change event.\r\n     */\r\n    changeHandler(e) {\r\n        window.location = this.selectOneLink(e.target.value);\r\n    }\r\n\r\n    /**\r\n     * Override the input event listener for the text input area.\r\n     */\r\n    registerInputHandlers() {\r\n        // Register & handle the text input.\r\n        this.searchInput.addEventListener('input', debounce(() => {\r\n            this.setSearchTerms(this.searchInput.value);\r\n            // We can also require a set amount of input before search.\r\n            if (this.getSearchTerm() === '') {\r\n                // Hide the \"clear\" search button in the search bar.\r\n                this.clearSearchButton.classList.add('d-none');\r\n            } else {\r\n                // Display the \"clear\" search button in the search bar.\r\n                this.clearSearchButton.classList.remove('d-none');\r\n            }\r\n        }, 300));\r\n    }\r\n\r\n    /**\r\n     * Build up the view all link that is dedicated to a particular result.\r\n     * We will call this function when a user interacts with the combobox to redirect them to show their results in the page.\r\n     *\r\n     * @param {Number} gradeID The ID of the grade item selected.\r\n     */\r\n    selectOneLink(gradeID) {\r\n        throw new Error(`selectOneLink(${gradeID}) must be implemented in ${this.constructor.name}`);\r\n    }\r\n}\r\n"],"names":["e","_getRequireWildcardCache","WeakMap","r","t","_search_combobox","__esModule","default","Repository","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","GradeItemSearch","search_combobox","courseID","constructor","super","this","selectors","courseid","placeholder","component","document","querySelector","componentSelector","dataset","instance","searchValueElement","searchInput","inputElement","addEventListener","toggleDropdown","valueElement","combobox","value","dispatchEvent","Event","bubbles","$component","on","removeAttribute","listbox","getAttribute","querySelectorAll","forEach","option","classList","remove","scrollTop","setTimeout","renderDefault","init","dropdownSelector","renderDropdown","html","js","renderForPromise","results","getMatchedResults","hasresults","length","searchterm","getSearchTerm","replaceNodeContents","setMatchedResults","filterDataset","getDataset","filterMatchDataset","updateNodes","registerInputEvents","fetchDataset","gradeitemFetch","then","gradeitems","filterableData","getPreppedSearchTerm","filter","grade","keys","some","key","toString","toLowerCase","includes","map","id","name","debounce","async","setSearchTerms","clearSearchButton","add","filterrenderpipe","clickHandler","target","closest","clearSearch","stopPropagation","focus","changeHandler","window","location","selectOneLink","registerInputHandlers","gradeID","Error","_exports"],"mappings":"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"}