{"version":3,"file":"stickycolspan.min.js","sources":["../src/stickycolspan.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript module for fixing the position of sticky headers with multiple colspans\r\n *\r\n * @module      gradereport_grader/stickycolspan\r\n * @copyright   2022 Bas Brands <bas@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport $ from 'jquery';\r\nimport {SELECTORS as stickyFooterSelectors, eventTypes as stickyFooterEvents} from 'core/sticky-footer';\r\n\r\nconst SELECTORS = {\r\n    GRADEPARENT: '.gradeparent',\r\n    STUDENTHEADER: '#studentheader',\r\n    TABLEHEADER: 'th.header',\r\n    BEHAT: 'body.behat-site',\r\n    USERDROPDOWN: '.userrow th .dropdown',\r\n    LASTROW: '.lastrow',\r\n};\r\n\r\n/**\r\n * Initialize module\r\n */\r\nexport const init = () => {\r\n    // The sticky positioning attributed to the user column cells affects the stacking context and makes the dropdowns\r\n    // within these cells to be cut off. To solve this problem, whenever one of these action menus (dropdowns) is opened\r\n    // we need to manually bump up the z-index value of the parent container element and revert once closed.\r\n    $(SELECTORS.USERDROPDOWN).on('show.bs.dropdown hide.bs.dropdown', (e) => {\r\n        // The closest heading element has sticky positioning which affects the stacking context in this case.\r\n        e.target.closest(SELECTORS.TABLEHEADER).classList.toggle('actions-menu-active');\r\n    });\r\n\r\n    defineLastRowIntersectionObserver(true);\r\n    // Add an event listener to the sticky footer toggled event to re-define the average row intersection observer\r\n    // accordingly. This is needed as on narrow screens when scrolling vertically the sticky footer is enabled and\r\n    // disabled dynamically.\r\n    document.addEventListener(stickyFooterEvents.stickyFooterStateChanged, (e) => {\r\n        defineLastRowIntersectionObserver(e.detail.enabled);\r\n    });\r\n\r\n    if (!document.querySelector(SELECTORS.BEHAT)) {\r\n        const grader = document.querySelector(SELECTORS.GRADEPARENT);\r\n        const tableHeaders = grader.querySelectorAll(SELECTORS.TABLEHEADER);\r\n        const studentHeader = grader.querySelector(SELECTORS.STUDENTHEADER);\r\n        const leftOffset = getComputedStyle(studentHeader).getPropertyValue('left');\r\n        const rightOffset = getComputedStyle(studentHeader).getPropertyValue('right');\r\n\r\n        tableHeaders.forEach((tableHeader) => {\r\n            if (tableHeader.colSpan > 1) {\r\n                const addOffset = (tableHeader.offsetWidth - studentHeader.offsetWidth);\r\n                if (window.right_to_left()) {\r\n                    tableHeader.style.right = 'calc(' + rightOffset + ' - ' + addOffset + 'px )';\r\n                } else {\r\n                    tableHeader.style.left = 'calc(' + leftOffset + ' - ' + addOffset + 'px )';\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * Define the intersection observer that will make sure that the last row is properly pinned.\r\n *\r\n * In certain scenarios, such as when both 'Overall average' and 'Range' are set not to be shown in the Grader report,\r\n * a user row will end up being the last row in the Grader report table. In this particular case, we want to avoid\r\n * pinning the last row.\r\n *\r\n * @param {boolean} stickyFooterEnabled Whether the page shows a sticky footer or not.\r\n */\r\nconst defineLastRowIntersectionObserver = (stickyFooterEnabled) => {\r\n    const lastRow = document.querySelector(SELECTORS.LASTROW);\r\n    // Ensure that the last row is not a user row before defining the intersection observer.\r\n    if (!lastRow.classList.contains('userrow')) {\r\n        const stickyFooterHeight = stickyFooterEnabled ?\r\n            document.querySelector(stickyFooterSelectors.STICKYFOOTER).offsetHeight : null;\r\n        // Register an observer that will bump up the z-index value of the last row when it's pinned to prevent the row\r\n        // being cut-off by the user column cells or other components within the report table that have higher z-index\r\n        // values. If the page has a sticky footer, we need to make sure that the bottom root margin of the observer\r\n        // subtracts the height of the sticky footer to prevent the row being cut-off by the footer.\r\n        const intersectionObserver = new IntersectionObserver(\r\n            ([e]) => lastRow.classList.toggle('pinned', e.intersectionRatio < 1),\r\n            {\r\n                rootMargin: stickyFooterHeight ? `0px 0px -${stickyFooterHeight}px 0px` : \"0px\",\r\n                threshold: [1]\r\n            }\r\n        );\r\n        intersectionObserver.observe(lastRow.querySelector('th'));\r\n    }\r\n};\r\n"],"names":["e","_jquery","__esModule","default","SELECTORS","_exports","init","$","on","target","closest","classList","toggle","defineLastRowIntersectionObserver","document","addEventListener","stickyFooterEvents","stickyFooterStateChanged","detail","enabled","querySelector","grader","tableHeaders","querySelectorAll","studentHeader","leftOffset","getComputedStyle","getPropertyValue","rightOffset","forEach","tableHeader","colSpan","addOffset","offsetWidth","window","right_to_left","style","right","left","stickyFooterEnabled","lastRow","contains","stickyFooterHeight","stickyFooterSelectors","STICKYFOOTER","offsetHeight","intersectionObserver","IntersectionObserver","_ref","intersectionRatio","rootMargin","threshold","observe"],"mappings":"8HAuBuB,IAAAA;;;;;;;kFAAvBC,SAAuBD,EAAvBC,UAAuBD,EAAAE,WAAAF,EAAAG,CAAAA,QAAAH,GAGvB,MAAMI,sBACW,eADXA,wBAEa,iBAFbA,sBAGW,YAHXA,gBAIK,kBAJLA,uBAKY,wBALZA,kBAMO,WAyCXC,SAAAC,KAnCkBA,KAiBhB,IAbA,EAAAC,QAACJ,SAACC,wBAAwBI,GAAG,qCAAsCR,IAE/DA,EAAES,OAAOC,QAAQN,uBAAuBO,UAAUC,OAAO,sBAAsB,IAGnFC,mCAAkC,GAIlCC,SAASC,iBAAiBC,cAAAA,WAAmBC,0BAA2BjB,IACpEa,kCAAkCb,EAAEkB,OAAOC,QAAQ,KAGlDL,SAASM,cAAchB,iBAAkB,CAC1C,MAAMiB,OAASP,SAASM,cAAchB,uBAChCkB,aAAeD,OAAOE,iBAAiBnB,uBACvCoB,cAAgBH,OAAOD,cAAchB,yBACrCqB,WAAaC,iBAAiBF,eAAeG,iBAAiB,QAC9DC,YAAcF,iBAAiBF,eAAeG,iBAAiB,SAErEL,aAAaO,SAASC,cAClB,GAAIA,YAAYC,QAAU,EAAG,CACzB,MAAMC,UAAaF,YAAYG,YAAcT,cAAcS,YACvDC,OAAOC,gBACPL,YAAYM,MAAMC,MAAQ,QAAUT,YAAc,MAAQI,UAAY,OAEtEF,YAAYM,MAAME,KAAO,QAAUb,WAAa,MAAQO,UAAY,MAE5E,IAER,GAYJ,MAAMnB,kCAAqC0B,sBACvC,MAAMC,QAAU1B,SAASM,cAAchB,mBAEvC,IAAKoC,QAAQ7B,UAAU8B,SAAS,WAAY,CACxC,MAAMC,mBAAqBH,oBACvBzB,SAASM,cAAcuB,cAAAA,UAAsBC,cAAcC,aAAe,KAKxEC,qBAAuB,IAAIC,sBAC7BC,OAAA,IAAEhD,GAAEgD,KAAA,OAAKR,QAAQ7B,UAAUC,OAAO,SAAUZ,EAAEiD,kBAAoB,EAAE,GACpE,CACIC,WAAYR,mBAAqB,YAAYA,2BAA6B,MAC1ES,UAAW,CAAC,KAGpBL,qBAAqBM,QAAQZ,QAAQpB,cAAc,MACvD,EACF"}