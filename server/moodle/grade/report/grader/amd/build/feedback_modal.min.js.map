{"version":3,"file":"feedback_modal.min.js","sources":["../src/feedback_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript module for displaying feedback in a modal window\r\n *\r\n * @module      gradereport_grader/feedback_modal\r\n * @copyright   2023 Kevin Percy <kevin.percy@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport Modal from 'core/modal';\r\nimport Notification from 'core/notification';\r\nimport ajax from 'core/ajax';\r\nimport Templates from 'core/templates';\r\n\r\nconst Selectors = {\r\n    showFeedback: '[data-action=\"feedback\"]'\r\n};\r\n\r\n/**\r\n * Create the modal to display the feedback.\r\n *\r\n * @param {int} courseid\r\n * @param {int} userid\r\n * @param {int} itemid\r\n * @returns {Promise}\r\n */\r\nconst getModal = async(courseid, userid, itemid) => {\r\n    let feedbackData;\r\n\r\n    try {\r\n        feedbackData = await fetchFeedback(courseid, userid, itemid);\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n\r\n    return Modal.create({\r\n        removeOnClose: true,\r\n        large: true,\r\n        verticallyCentered: true,\r\n    })\r\n    .then(modal => {\r\n        const body = Templates.render('core_grades/feedback_modal', {\r\n            feedbacktext: feedbackData.feedbacktext,\r\n            user: {\r\n                picture: feedbackData.picture,\r\n                fullname: feedbackData.fullname,\r\n                additionalfield: feedbackData.additionalfield,\r\n            },\r\n        });\r\n\r\n        modal.setBody(body);\r\n        modal.setTitle(feedbackData.title);\r\n        modal.show();\r\n\r\n        return modal;\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch the feedback data.\r\n *\r\n * @param {int} courseid\r\n * @param {int} userid\r\n * @param {int} itemid\r\n * @returns {Promise}\r\n */\r\nconst fetchFeedback = (courseid, userid, itemid) => {\r\n    const request = {\r\n        methodname: 'core_grades_get_feedback',\r\n        args: {\r\n            courseid: courseid,\r\n            userid: userid,\r\n            itemid: itemid,\r\n        },\r\n    };\r\n    return ajax.call([request])[0];\r\n};\r\n\r\n/**\r\n * Register event listeners for the View Feedback links.\r\n */\r\nconst registerEventListeners = () => {\r\n    document.addEventListener('click', e => {\r\n        const showFeedbackTrigger = e.target.closest(Selectors.showFeedback);\r\n        if (showFeedbackTrigger) {\r\n            e.preventDefault();\r\n\r\n            const courseid = showFeedbackTrigger.dataset.courseid;\r\n            const userid = e.target.closest('tr').dataset.uid;\r\n            const itemid = e.target.closest('td').dataset.itemid;\r\n\r\n            getModal(courseid, userid, itemid)\r\n                .catch(Notification.exception);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Initialize module\r\n */\r\nexport const init = () => {\r\n    registerEventListeners();\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_modal","_notification","_ajax","_templates","Selectors","fetchFeedback","courseid","userid","itemid","request","methodname","args","ajax","call","registerEventListeners","document","addEventListener","showFeedbackTrigger","target","closest","preventDefault","async","feedbackData","Promise","reject","Modal","create","removeOnClose","large","verticallyCentered","then","modal","body","Templates","render","feedbacktext","user","picture","fullname","additionalfield","setBody","setTitle","title","show","getModal","dataset","uid","catch","Notification","exception","_exports","init"],"mappings":"+KAyBuC,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;kFAHvCG,OAAAJ,uBAAAI,QACAC,cAAAL,uBAAAK,eACAC,MAAAN,uBAAAM,OACAC,WAAAP,uBAAAO,YAEA,MAAMC,uBACY,2BAmDZC,cAAgBA,CAACC,SAAUC,OAAQC,UACrC,MAAMC,QAAU,CACZC,WAAY,2BACZC,KAAM,CACFL,SAAUA,SACVC,OAAQA,OACRC,OAAQA,SAGhB,OAAOI,MAAAA,QAAKC,KAAK,CAACJ,UAAU,EAAE,EAM5BK,uBAAyBA,KAC3BC,SAASC,iBAAiB,SAASnB,IAC/B,MAAMoB,oBAAsBpB,EAAEqB,OAAOC,QAAQf,wBAC7C,GAAIa,oBAAqB,CACrBpB,EAAEuB,iBA3DGC,OAAMf,SAAUC,OAAQC,UACrC,IAAIc,aAEJ,IACIA,mBAAqBjB,cAAcC,SAAUC,OAAQC,OACxD,CAAC,MAAOX,GACL,OAAO0B,QAAQC,OAAO3B,EAC1B,CAEA,OAAO4B,OAAAA,QAAMC,OAAO,CAChBC,eAAe,EACfC,OAAO,EACPC,oBAAoB,IAEvBC,MAAKC,QACF,MAAMC,KAAOC,WAAAA,QAAUC,OAAO,6BAA8B,CACxDC,aAAcb,aAAaa,aAC3BC,KAAM,CACFC,QAASf,aAAae,QACtBC,SAAUhB,aAAagB,SACvBC,gBAAiBjB,aAAaiB,mBAQtC,OAJAR,MAAMS,QAAQR,MACdD,MAAMU,SAASnB,aAAaoB,OAC5BX,MAAMY,OAECZ,KAAK,GACd,EAoCMa,CAJiB3B,oBAAoB4B,QAAQvC,SAC9BT,EAAEqB,OAAOC,QAAQ,MAAM0B,QAAQC,IAC/BjD,EAAEqB,OAAOC,QAAQ,MAAM0B,QAAQrC,QAGzCuC,MAAMC,cAAYjD,QAACkD,UAC5B,IACF,EAQJC,SAAAC,KAFkBA,KAChBrC,wBAAwB,CAC1B"}