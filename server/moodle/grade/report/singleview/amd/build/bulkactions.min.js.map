{"version":3,"file":"bulkactions.min.js","sources":["../src/bulkactions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript module for bulk actions.\r\n *\r\n * @module      gradereport_singleview/bulkactions\r\n * @copyright   2022 Ilya Tregubov <ilya@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Pending from 'core/pending';\r\nimport CustomEvents from \"core/custom_interaction_events\";\r\nimport ModalSaveCancel from 'core/modal_save_cancel';\r\nimport Templates from 'core/templates';\r\nimport ModalEvents from 'core/modal_events';\r\nimport * as Str from 'core/str';\r\nimport Notification from 'core/notification';\r\nimport selectors from 'gradereport_singleview/selectors';\r\n\r\n/**\r\n * Initialize module.\r\n */\r\nexport const init = () => {\r\n    const pendingPromise = new Pending();\r\n    registerListenerEvents();\r\n    pendingPromise.resolve();\r\n};\r\n\r\n/**\r\n * Register bulk actions related event listeners.\r\n *\r\n * @method registerListenerEvents\r\n */\r\nconst registerListenerEvents = () => {\r\n    const events = [\r\n        'click',\r\n        CustomEvents.events.activate,\r\n        CustomEvents.events.keyboardActivate\r\n    ];\r\n    CustomEvents.define(document, events);\r\n\r\n    // Register events.\r\n    events.forEach((event) => {\r\n        document.addEventListener(event, async(e) => {\r\n            const trigger = e.target.closest(selectors.actions.bulkaction);\r\n\r\n            if (!trigger) {\r\n                return;\r\n            }\r\n            if ((trigger.dataset.action === 'overrideallgrades') || (trigger.dataset.action === 'overridenonegrades')) {\r\n                const override = document.querySelectorAll(selectors.elements.override);\r\n\r\n                if (trigger.dataset.action === 'overridenonegrades') {\r\n                    // Alert for removing all grade overrides on page.\r\n                    Str.get_strings([\r\n                        {key: 'removeoverride', component: 'gradereport_singleview'},\r\n                        {key: 'overridenoneconfirm', component: 'gradereport_singleview'},\r\n                        {key: 'removeoverridesave', component: 'gradereport_singleview'},\r\n                        {key: 'cancel', component: 'moodle'},\r\n                    ])\r\n                    .then((strings) => {\r\n                        return Notification.confirm(\r\n                            strings[0],\r\n                            strings[1],\r\n                            strings[2],\r\n                            strings[3],\r\n                            () => {\r\n                                // Uncheck each override checkbox - this will make grade and feedback input fields disabled.\r\n                                override.forEach((el) => {\r\n                                    if (el.checked) {\r\n                                        el.click();\r\n                                    }\r\n                                });\r\n                            });\r\n                    })\r\n                    .catch(Notification.exception);\r\n\r\n                } else {\r\n                    // Check each override checkbox - this will make grade and feedback input fields enabled.\r\n                    override.forEach((el) => {\r\n                        if (!el.checked) {\r\n                            el.click();\r\n                        }\r\n                    });\r\n                }\r\n            } else if ((trigger.dataset.action === 'excludeallgrades') || (trigger.dataset.action === 'excludenonegrades')) {\r\n                const exclude = document.querySelectorAll(selectors.elements.exclude);\r\n                const checked = (trigger.dataset.action === 'excludeallgrades');\r\n                // Uncheck or check each exclude checkbox.\r\n                exclude.forEach((el) => {\r\n                    el.checked = checked;\r\n                });\r\n            } else if (trigger.dataset.action === 'bulklegend') {\r\n                // Modal for bulk insert grades.\r\n                Str.get_strings([\r\n                    {key: 'bulklegend', component: 'gradereport_singleview'},\r\n                    {key: 'save', component: 'moodle'},\r\n                ])\r\n                .then((strings) => {\r\n                    return ModalSaveCancel.create({\r\n                        body: Templates.render('gradereport_singleview/bulkinsert', {\r\n                            id: 'bulkinsertmodal',\r\n                            name: 'bulkinsertmodal'\r\n                        }),\r\n                        title: strings[0],\r\n                        buttons: {\r\n                            save: strings[1],\r\n                        },\r\n                        removeOnClose: true,\r\n                        show: true,\r\n                    });\r\n                })\r\n                .then((modal) => {\r\n                    modal.getFooter().find(selectors.elements.modalsave).attr('disabled', true);\r\n\r\n                    // We need to acknowledge that we understand risks of loosing data.\r\n                    // Only when acknowledge checkbox is checked we allow selecting insert options.\r\n                    modal.getRoot().on('change', selectors.elements.warningcheckbox,\r\n                        (e) => {\r\n                            e.preventDefault();\r\n                            if (e.target.checked) {\r\n                                modal.getRoot().find(selectors.elements.modalformdata).removeClass('dimmed_text');\r\n                                modal.getRoot().find(selectors.elements.modalradio).removeAttr('disabled');\r\n                                modal.getRoot().find(selectors.elements.modalinput).removeAttr('disabled');\r\n\r\n                                const formRadioData = modal.getRoot().find(selectors.elements.modalradiochecked).val();\r\n                                // We allow saving grades only when all needed data present on form.\r\n                                if (formRadioData) {\r\n                                    modal.getFooter().find(selectors.elements.modalsave).removeAttr('disabled');\r\n                                }\r\n                            } else {\r\n                                modal.getRoot().find(selectors.elements.modalformdata).addClass('dimmed_text');\r\n                                modal.getRoot().find(selectors.elements.modalradio).attr('disabled', true);\r\n                                modal.getRoot().find(selectors.elements.modalinput).attr('disabled', true);\r\n                                modal.getFooter().find(selectors.elements.modalsave).attr('disabled', true);\r\n                            }\r\n                        });\r\n\r\n                    // We allow saving grades only when all needed data present on form.\r\n                    modal.getRoot().on('change', selectors.elements.modalradio, (e) => {\r\n                            e.preventDefault();\r\n                            modal.getFooter().find(selectors.elements.modalsave).removeAttr('disabled');\r\n                        });\r\n\r\n                    modal.getRoot().on(ModalEvents.save, () => {\r\n                        // When save button is clicked in modal form we insert data from modal\r\n                        // into preexisted hidden bulk insert form and Save button for table form.\r\n                        document.querySelector(selectors.elements.enablebulkinsert).checked = true;\r\n                        const formRadioData = modal.getRoot().find(selectors.elements.modalradiochecked).val();\r\n                        const $select = document.querySelector(selectors.elements.formradio);\r\n                        $select.value = formRadioData;\r\n\r\n                        const formData = modal.getRoot().find(selectors.elements.modalgrade).val();\r\n                        document.querySelector(selectors.elements.formgrade).value = formData;\r\n                        document.querySelector(selectors.elements.formsave).click();\r\n                    });\r\n\r\n                    return modal;\r\n                })\r\n                .catch(Notification.exception);\r\n            }\r\n        });\r\n    });\r\n};\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","__esModule","default","_pending","_custom_interaction_events","_modal_save_cancel","_templates","_modal_events","Str","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_notification","_selectors","_exports","init","pendingPromise","Pending","registerListenerEvents","resolve","events","CustomEvents","activate","keyboardActivate","define","document","forEach","event","addEventListener","async","trigger","target","closest","selectors","actions","bulkaction","dataset","action","override","querySelectorAll","elements","get_strings","key","component","then","strings","Notification","confirm","el","checked","click","catch","exception","exclude","ModalSaveCancel","create","body","Templates","render","id","name","title","buttons","save","removeOnClose","show","modal","getFooter","find","modalsave","attr","getRoot","on","warningcheckbox","preventDefault","modalformdata","removeClass","modalradio","removeAttr","modalinput","modalradiochecked","val","addClass","ModalEvents","querySelector","enablebulkinsert","formRadioData","formradio","value","formData","modalgrade","formgrade","formsave"],"mappings":"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"}