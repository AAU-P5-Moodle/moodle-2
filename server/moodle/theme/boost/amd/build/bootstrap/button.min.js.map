{"version":3,"file":"button.min.js","sources":["../../src/bootstrap/button.js"],"sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v4.6.2): button.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport $ from 'jquery'\r\n\r\n/**\r\n * Constants\r\n */\r\n\r\nconst NAME = 'button'\r\nconst VERSION = '4.6.2'\r\nconst DATA_KEY = 'bs.button'\r\nconst EVENT_KEY = `.${DATA_KEY}`\r\nconst DATA_API_KEY = '.data-api'\r\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\r\n\r\nconst CLASS_NAME_ACTIVE = 'active'\r\nconst CLASS_NAME_BUTTON = 'btn'\r\nconst CLASS_NAME_FOCUS = 'focus'\r\n\r\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\r\nconst EVENT_FOCUS_BLUR_DATA_API = `focus${EVENT_KEY}${DATA_API_KEY} ` +\r\n                          `blur${EVENT_KEY}${DATA_API_KEY}`\r\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\r\n\r\nconst SELECTOR_DATA_TOGGLE_CARROT = '[data-toggle^=\"button\"]'\r\nconst SELECTOR_DATA_TOGGLES = '[data-toggle=\"buttons\"]'\r\nconst SELECTOR_DATA_TOGGLE = '[data-toggle=\"button\"]'\r\nconst SELECTOR_DATA_TOGGLES_BUTTONS = '[data-toggle=\"buttons\"] .btn'\r\nconst SELECTOR_INPUT = 'input:not([type=\"hidden\"])'\r\nconst SELECTOR_ACTIVE = '.active'\r\nconst SELECTOR_BUTTON = '.btn'\r\n\r\n/**\r\n * Class definition\r\n */\r\n\r\nclass Button {\r\n  constructor(element) {\r\n    this._element = element\r\n    this.shouldAvoidTriggerChange = false\r\n  }\r\n\r\n  // Getters\r\n  static get VERSION() {\r\n    return VERSION\r\n  }\r\n\r\n  // Public\r\n  toggle() {\r\n    let triggerChangeEvent = true\r\n    let addAriaPressed = true\r\n    const rootElement = $(this._element).closest(SELECTOR_DATA_TOGGLES)[0]\r\n\r\n    if (rootElement) {\r\n      const input = this._element.querySelector(SELECTOR_INPUT)\r\n\r\n      if (input) {\r\n        if (input.type === 'radio') {\r\n          if (input.checked && this._element.classList.contains(CLASS_NAME_ACTIVE)) {\r\n            triggerChangeEvent = false\r\n          } else {\r\n            const activeElement = rootElement.querySelector(SELECTOR_ACTIVE)\r\n\r\n            if (activeElement) {\r\n              $(activeElement).removeClass(CLASS_NAME_ACTIVE)\r\n            }\r\n          }\r\n        }\r\n\r\n        if (triggerChangeEvent) {\r\n          // if it's not a radio button or checkbox don't add a pointless/invalid checked property to the input\r\n          if (input.type === 'checkbox' || input.type === 'radio') {\r\n            input.checked = !this._element.classList.contains(CLASS_NAME_ACTIVE)\r\n          }\r\n\r\n          if (!this.shouldAvoidTriggerChange) {\r\n            $(input).trigger('change')\r\n          }\r\n        }\r\n\r\n        input.focus()\r\n        addAriaPressed = false\r\n      }\r\n    }\r\n\r\n    if (!(this._element.hasAttribute('disabled') || this._element.classList.contains('disabled'))) {\r\n      if (addAriaPressed) {\r\n        this._element.setAttribute('aria-pressed', !this._element.classList.contains(CLASS_NAME_ACTIVE))\r\n      }\r\n\r\n      if (triggerChangeEvent) {\r\n        $(this._element).toggleClass(CLASS_NAME_ACTIVE)\r\n      }\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    $.removeData(this._element, DATA_KEY)\r\n    this._element = null\r\n  }\r\n\r\n  // Static\r\n  static _jQueryInterface(config, avoidTriggerChange) {\r\n    return this.each(function () {\r\n      const $element = $(this)\r\n      let data = $element.data(DATA_KEY)\r\n\r\n      if (!data) {\r\n        data = new Button(this)\r\n        $element.data(DATA_KEY, data)\r\n      }\r\n\r\n      data.shouldAvoidTriggerChange = avoidTriggerChange\r\n\r\n      if (config === 'toggle') {\r\n        data[config]()\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Data API implementation\r\n */\r\n\r\n$(document)\r\n  .on(EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, event => {\r\n    let button = event.target\r\n    const initialButton = button\r\n\r\n    if (!$(button).hasClass(CLASS_NAME_BUTTON)) {\r\n      button = $(button).closest(SELECTOR_BUTTON)[0]\r\n    }\r\n\r\n    if (!button || button.hasAttribute('disabled') || button.classList.contains('disabled')) {\r\n      event.preventDefault() // work around Firefox bug #1540995\r\n    } else {\r\n      const inputBtn = button.querySelector(SELECTOR_INPUT)\r\n\r\n      if (inputBtn && (inputBtn.hasAttribute('disabled') || inputBtn.classList.contains('disabled'))) {\r\n        event.preventDefault() // work around Firefox bug #1540995\r\n        return\r\n      }\r\n\r\n      if (initialButton.tagName === 'INPUT' || button.tagName !== 'LABEL') {\r\n        Button._jQueryInterface.call($(button), 'toggle', initialButton.tagName === 'INPUT')\r\n      }\r\n    }\r\n  })\r\n  .on(EVENT_FOCUS_BLUR_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, event => {\r\n    const button = $(event.target).closest(SELECTOR_BUTTON)[0]\r\n    $(button).toggleClass(CLASS_NAME_FOCUS, /^focus(in)?$/.test(event.type))\r\n  })\r\n\r\n$(window).on(EVENT_LOAD_DATA_API, () => {\r\n  // ensure correct active class is set to match the controls' actual values/states\r\n\r\n  // find all checkboxes/readio buttons inside data-toggle groups\r\n  let buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLES_BUTTONS))\r\n  for (let i = 0, len = buttons.length; i < len; i++) {\r\n    const button = buttons[i]\r\n    const input = button.querySelector(SELECTOR_INPUT)\r\n    if (input.checked || input.hasAttribute('checked')) {\r\n      button.classList.add(CLASS_NAME_ACTIVE)\r\n    } else {\r\n      button.classList.remove(CLASS_NAME_ACTIVE)\r\n    }\r\n  }\r\n\r\n  // find all button toggles\r\n  buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE))\r\n  for (let i = 0, len = buttons.length; i < len; i++) {\r\n    const button = buttons[i]\r\n    if (button.getAttribute('aria-pressed') === 'true') {\r\n      button.classList.add(CLASS_NAME_ACTIVE)\r\n    } else {\r\n      button.classList.remove(CLASS_NAME_ACTIVE)\r\n    }\r\n  }\r\n})\r\n\r\n/**\r\n * jQuery\r\n */\r\n\r\n$.fn[NAME] = Button._jQueryInterface\r\n$.fn[NAME].Constructor = Button\r\n$.fn[NAME].noConflict = () => {\r\n  $.fn[NAME] = JQUERY_NO_CONFLICT\r\n  return Button._jQueryInterface\r\n}\r\n\r\nexport default Button\r\n"],"names":["e","_jquery","__esModule","default","NAME","JQUERY_NO_CONFLICT","$","fn","Button","constructor","element","this","_element","shouldAvoidTriggerChange","VERSION","toggle","triggerChangeEvent","addAriaPressed","rootElement","closest","input","querySelector","type","checked","classList","contains","activeElement","removeClass","trigger","focus","hasAttribute","setAttribute","toggleClass","dispose","removeData","_jQueryInterface","config","avoidTriggerChange","each","$element","data","document","on","event","button","target","initialButton","hasClass","preventDefault","inputBtn","tagName","call","test","window","buttons","slice","querySelectorAll","i","len","length","add","remove","getAttribute","Constructor","noConflict","_exports"],"mappings":"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"}